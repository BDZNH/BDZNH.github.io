<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2048</title>
    <url>/2017/02/18/2048/</url>
    <content><![CDATA[<p>在gayhub上发现一个挺有意思的小程序————2048</p>
<img src="/2017/02/18/2048/2048.jpg" class="" width="2048">
<a id="more"></a>
<h2 id="下载安装试玩"><a href="#下载安装试玩" class="headerlink" title="下载安装试玩"></a>下载安装试玩</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget https://raw.githubusercontent.com/mevdschee/2048.c/master/2048.c</span><br><span class="line">$ gcc 2048.c</span><br><span class="line">$ ./a.out</span><br></pre></td></tr></table></figure>
<h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> <span class="keyword">const</span> ROW = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">int</span> <span class="keyword">const</span> COL = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">int</span> game[ROW][COL] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//上下左右</span></span><br><span class="line"><span class="keyword">int</span> <span class="keyword">const</span> UP = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> <span class="keyword">const</span> DOWN = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> <span class="keyword">const</span> LEFT = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">int</span> <span class="keyword">const</span> RIGHT = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//游戏所处的状态</span></span><br><span class="line"><span class="keyword">int</span> <span class="keyword">const</span> GAME_OVER = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> <span class="keyword">const</span> GAME_WIN = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> <span class="keyword">const</span> GAME_CONTINUE = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span> GameNum</span><br><span class="line">&#123;</span><br><span class="line">	Game_2 = <span class="number">2</span>,</span><br><span class="line">	Game_4 = <span class="number">4</span>,</span><br><span class="line">	Game_8 = <span class="number">8</span>,</span><br><span class="line">	Game_16 = <span class="number">16</span>,</span><br><span class="line">	Game_32 = <span class="number">32</span>,</span><br><span class="line">	Game_64 = <span class="number">64</span>,</span><br><span class="line">	Game_128 = <span class="number">128</span>,</span><br><span class="line">	Game_256 = <span class="number">256</span>,</span><br><span class="line">	Game_512 = <span class="number">512</span>,</span><br><span class="line">	Game_1024 = <span class="number">1024</span>,</span><br><span class="line">	Game_2048 = <span class="number">2048</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印所得的数组</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*****************  2048 控 制 台 版  ******************&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;*****************  By Tanzf (Intern) ******************&quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ROW; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;---------------------------------&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; COL; ++j)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (game[i][j] == <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">cout</span> &lt;&lt;<span class="string">&quot;|   \t&quot;</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> </span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">cout</span> &lt;&lt;<span class="string">&quot;|   &quot;</span> &lt;&lt; game[i][j] &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;|&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;---------------------------------&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">CreateNumber</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x = <span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">int</span> y = <span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">int</span> times = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> maxTimes = ROW * COL;</span><br><span class="line">	<span class="comment">//三分之二的概率生成2，三分之一的概率生成4</span></span><br><span class="line">	<span class="keyword">int</span> whitch = rand() % <span class="number">3</span>;</span><br><span class="line">	<span class="keyword">do</span> </span><br><span class="line">	&#123;</span><br><span class="line">		x = rand() % ROW;</span><br><span class="line">		y = rand() % COL;</span><br><span class="line">		++times;</span><br><span class="line">	&#125; <span class="keyword">while</span> (game[x][y] != <span class="number">0</span> &amp;&amp; times &lt;= maxTimes);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//说明格子已经满了</span></span><br><span class="line">	<span class="keyword">if</span>(times &gt;= maxTimes)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		GameNum num;</span><br><span class="line">		<span class="keyword">if</span>(whitch == <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			num = Game_4;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(whitch)</span><br><span class="line">		&#123;</span><br><span class="line">			num = Game_2;</span><br><span class="line">		&#125;</span><br><span class="line">		game[x][y] = num;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Process</span><span class="params">(<span class="keyword">int</span> direction)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">switch</span> (direction)</span><br><span class="line">	&#123;</span><br><span class="line">	<span class="keyword">case</span> UP:</span><br><span class="line">		<span class="comment">//最上面一行不动</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> row = <span class="number">1</span>; row &lt; ROW; ++row)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> crow = row; crow &gt;= <span class="number">1</span>; --crow)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> col = <span class="number">0</span>; col &lt; COL; ++col)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="comment">//上一个格子为空</span></span><br><span class="line">					<span class="keyword">if</span>(game[crow<span class="number">-1</span>][col] == <span class="number">0</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						game[crow<span class="number">-1</span>][col] = game[crow][col];</span><br><span class="line">						game[crow][col] = <span class="number">0</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">else</span> </span><br><span class="line">					&#123;</span><br><span class="line">						<span class="comment">//合并</span></span><br><span class="line">						<span class="keyword">if</span>(game[crow<span class="number">-1</span>][col] == game[crow][col])</span><br><span class="line">						&#123;</span><br><span class="line">							game[crow - <span class="number">1</span>][col] *= <span class="number">2</span>;</span><br><span class="line">							game[crow][col] = <span class="number">0</span>;</span><br><span class="line">						&#125;</span><br><span class="line"></span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> DOWN:</span><br><span class="line">		<span class="comment">//最下面一行不动</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> row = ROW - <span class="number">2</span>; row &gt;= <span class="number">0</span>; --row)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> crow = row; crow &lt; ROW - <span class="number">1</span>; ++crow)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> col = <span class="number">0</span>; col &lt; COL; ++col)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="comment">//上一个格子为空</span></span><br><span class="line">					<span class="keyword">if</span>(game[crow + <span class="number">1</span>][col] == <span class="number">0</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						game[crow + <span class="number">1</span>][col] = game[crow][col];</span><br><span class="line">						game[crow][col] = <span class="number">0</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">else</span> </span><br><span class="line">					&#123;</span><br><span class="line">						<span class="comment">//合并</span></span><br><span class="line">						<span class="keyword">if</span>(game[crow + <span class="number">1</span>][col] == game[crow][col])</span><br><span class="line">						&#123;</span><br><span class="line">							game[crow + <span class="number">1</span>][col] *= <span class="number">2</span>;</span><br><span class="line">							game[crow][col] = <span class="number">0</span>;</span><br><span class="line">						&#125;</span><br><span class="line"></span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> LEFT:</span><br><span class="line">		<span class="comment">//最左边一列不动</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span>  col = <span class="number">1</span>; col &lt; COL; ++col)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> ccol = col; ccol &gt;= <span class="number">1</span>; --ccol)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> row = <span class="number">0</span>; row &lt; ROW; ++row)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="comment">//上一个格子为空</span></span><br><span class="line">					<span class="keyword">if</span>(game[row][ccol<span class="number">-1</span>] == <span class="number">0</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						game[row][ccol - <span class="number">1</span>] = game[row][ccol];</span><br><span class="line">						game[row][ccol] = <span class="number">0</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">else</span> </span><br><span class="line">					&#123;</span><br><span class="line">						<span class="comment">//合并</span></span><br><span class="line">						<span class="keyword">if</span>(game[row][ccol - <span class="number">1</span>] == game[row][ccol])</span><br><span class="line">						&#123;</span><br><span class="line">							game[row][ccol - <span class="number">1</span>] *= <span class="number">2</span>;</span><br><span class="line">							game[row][ccol] = <span class="number">0</span>;</span><br><span class="line">						&#125;</span><br><span class="line"></span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> RIGHT:</span><br><span class="line">		<span class="comment">//最右边一列不动</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span>  col = COL - <span class="number">2</span>; col &gt;= <span class="number">0</span>; --col)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> ccol = col; ccol &lt;= COL - <span class="number">2</span>; ++ccol)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> row = <span class="number">0</span>; row &lt; ROW; ++row)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="comment">//上一个格子为空</span></span><br><span class="line">					<span class="keyword">if</span>(game[row][ccol + <span class="number">1</span>] == <span class="number">0</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						game[row][ccol + <span class="number">1</span>] = game[row][ccol];</span><br><span class="line">						game[row][ccol] = <span class="number">0</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">else</span> </span><br><span class="line">					&#123;</span><br><span class="line">						<span class="comment">//合并</span></span><br><span class="line">						<span class="keyword">if</span>(game[row][ccol + <span class="number">1</span>] == game[row][ccol])</span><br><span class="line">						&#123;</span><br><span class="line">							game[row][ccol + <span class="number">1</span>] *= <span class="number">2</span>;</span><br><span class="line">							game[row][ccol] = <span class="number">0</span>;</span><br><span class="line">						&#125;</span><br><span class="line"></span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//处理输入输出，返回上下左右</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Input</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//读取上下左右四个方向键</span></span><br><span class="line">	<span class="keyword">int</span> upArrow = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> downArrow = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> leftArrow = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> rightArrow = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> direction = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		upArrow = GetAsyncKeyState(VK_UP);</span><br><span class="line">		downArrow = GetAsyncKeyState(VK_DOWN);</span><br><span class="line">		leftArrow = GetAsyncKeyState(VK_LEFT);</span><br><span class="line">		rightArrow = GetAsyncKeyState(VK_RIGHT);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>(upArrow)</span><br><span class="line">		&#123;</span><br><span class="line">			direction = UP;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(downArrow)</span><br><span class="line">		&#123;</span><br><span class="line">			direction = DOWN;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(leftArrow)</span><br><span class="line">		&#123;</span><br><span class="line">			direction = LEFT;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(rightArrow)</span><br><span class="line">		&#123;</span><br><span class="line">			direction = RIGHT;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		Sleep(<span class="number">100</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> direction;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断游戏状态</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Judge</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//赢得游戏</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ROW; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; COL; ++j)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(game[i][j] == <span class="number">2048</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">return</span> GAME_WIN;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//横向检查</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; ROW; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; COL - <span class="number">1</span>; ++j)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(!game[i][j] || (game[i][j] == game[i][j+<span class="number">1</span>]))</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">return</span> GAME_CONTINUE;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//纵向检查</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j&lt; COL; ++j)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ROW <span class="number">-1</span>; ++i)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(!game[i][j] || (game[i][j] == game[i+<span class="number">1</span>][j]))</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">return</span> GAME_CONTINUE;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//不符合上述两种状况，游戏结束</span></span><br><span class="line">	<span class="keyword">return</span> GAME_OVER;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//设置一个随机数种子</span></span><br><span class="line">	srand((<span class="keyword">unsigned</span> <span class="keyword">int</span>)time(<span class="number">0</span>));</span><br><span class="line">	CreateNumber();</span><br><span class="line">	CreateNumber();</span><br><span class="line">	Print();</span><br><span class="line">	<span class="keyword">int</span> direction = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> gameState = <span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		direction = Input();</span><br><span class="line"></span><br><span class="line">		gameState = Judge();</span><br><span class="line">		<span class="keyword">if</span>(direction &amp;&amp; gameState == GAME_CONTINUE)</span><br><span class="line">		&#123;</span><br><span class="line">			Process(direction);</span><br><span class="line">			CreateNumber();</span><br><span class="line">			Print();</span><br><span class="line">			Sleep(<span class="number">100</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(gameState == GAME_WIN)</span><br><span class="line">		&#123;</span><br><span class="line">			Print();</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;You Win！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(gameState == GAME_OVER)</span><br><span class="line">		&#123;</span><br><span class="line">			Print();</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt;<span class="string">&quot;You lose!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h2><p>此代码仅可在Linux上使用，Windows上会提示缺失头文件，问了问度娘，虽然有不少这样的代码，但是这份代码的显示效果最好，所以就是它啦。</p>
<blockquote class="blockquote-center">
            <p>生命重在折腾</p>

          </blockquote>]]></content>
      <tags>
        <tag>C</tag>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>用树莓派和四位数码管模块做一个时钟</title>
    <url>/2019/01/10/4-BIT-LED-Digital-Tube-Moudle/</url>
    <content><![CDATA[<h2 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h2><img src="/2019/01/10/4-BIT-LED-Digital-Tube-Moudle/1.jpg" class="">

<p>如图，这是一个4位数码管模块，由两片 74HC595 级联控制，引脚如图，从上到下，分别为<code>VCC(3.3V/5V)</code>,<code>SCLK(移位控制端)</code>,<code>RCLK(输出控制端)</code>,<code>DIO(数据输入端)</code>,<code>GND(接地)</code>。</p>
<h3 id="74HC595"><a href="#74HC595" class="headerlink" title="74HC595"></a>74HC595</h3><p>我们来看一下74HC595是什么样的</p>
<img src="/2019/01/10/4-BIT-LED-Digital-Tube-Moudle/74hc595.png" class="">

<p>看懂这个芯片需要一点点的数字电子技术的知识，看下面这个表格</p>
<a id="more"></a>


<table>
<thead>
<tr>
<th align="center">符号</th>
<th align="center">引脚</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Q0~Q7</td>
<td align="center">15,1~7</td>
<td align="center">8位并行数据输出</td>
</tr>
<tr>
<td align="center">GND</td>
<td align="center">8</td>
<td align="center">接地</td>
</tr>
<tr>
<td align="center">QA</td>
<td align="center">9</td>
<td align="center">串行数据输出</td>
</tr>
<tr>
<td align="center">MR</td>
<td align="center">10</td>
<td align="center">主复位(低电平)</td>
</tr>
<tr>
<td align="center">SH_CP</td>
<td align="center">11</td>
<td align="center">数据输入时钟</td>
</tr>
<tr>
<td align="center">ST_CP</td>
<td align="center">12</td>
<td align="center">输出存储器锁存时钟线</td>
</tr>
<tr>
<td align="center">OE</td>
<td align="center">13</td>
<td align="center">输出有效(低电平)</td>
</tr>
<tr>
<td align="center">DS</td>
<td align="center">14</td>
<td align="center">串行数据输入</td>
</tr>
<tr>
<td align="center">VCC</td>
<td align="center">16</td>
<td align="center">3.3V/3.5V</td>
</tr>
</tbody></table>
<ul>
<li><code>DS(14号脚)</code>是数据输入端，74HC595支持8位数据并行输出，但是数据输入只有DS一个脚，需要分8次输入；</li>
<li><code>OE(Out Enable)</code>是一个使能端，使用74HC595时需要将这个脚接地，若接高电平，那么Q0~Q7全部为0(低电平);</li>
<li><code>SH_CP(Shift register ClockPin)</code>是一个重要的引脚，此引脚的电平从低向高变(上升沿)时，芯片从<code>DS</code>脚读入数据(0/1)；</li>
<li><code>ST_CP</code>，集满8位数据(其实并非严格集满，Q0~Q7本来就有电平)，此引脚的上升沿将8位数据输出。</li>
</ul>
<h3 id="74HC595级联"><a href="#74HC595级联" class="headerlink" title="74HC595级联"></a>74HC595级联</h3><p>一个74HC595可以并行输出8位数据，两个级联就可以并行输出16位数据，级联芯片时将第一片的<code>QA</code>脚接到第二片芯片的<code>DS</code>脚，<code>SH_CP</code>和<code>ST_CP</code>也同时接在一起，当第一片芯片的<code>SH_CP</code>第九次上升沿触发时，第一片芯片的第一个数据将会通过<code>QA</code>脚输送给第二片芯片的<code>DS</code>脚。</p>
<p>也就是说，芯片的顺序是看<code>QA</code>和<code>DS</code>脚的顺序的。</p>
<h3 id="电路原理图"><a href="#电路原理图" class="headerlink" title="电路原理图"></a>电路原理图</h3><h4 id="四位数码管原理图"><a href="#四位数码管原理图" class="headerlink" title="四位数码管原理图"></a>四位数码管原理图</h4><p>数码管分位共阳极和共阴极，我拿到的这个数码管是共阳极，也就是说，给相应的脚设为低电平，则数码管点亮。</p>
<img src="/2019/01/10/4-BIT-LED-Digital-Tube-Moudle/3.jpg" class="">

<h4 id="四位数码管模块原理图"><a href="#四位数码管模块原理图" class="headerlink" title="四位数码管模块原理图"></a>四位数码管模块原理图</h4><img src="/2019/01/10/4-BIT-LED-Digital-Tube-Moudle/board.jpg" class="">

<p>4位数码管模块使用两片74HC595级联来控制数码管，观察电路可知，第一片74HC595的低四位用来选中四位数码管，也即DIG.1,DIG.2,DIG.3,DIG.4，高四位留空不用。第二片的八位输出用来控制数码管显示的数字。</p>
<h4 id="数码管原理"><a href="#数码管原理" class="headerlink" title="数码管原理"></a>数码管原理</h4><img src="/2019/01/10/4-BIT-LED-Digital-Tube-Moudle/4.jpg" class="">

<p>数码管内部其实是8个发光二极管，8个二极管排列成一个“8”字，控制二极管的明灭就可以控制数码管显示的数字。下面的表给出共阳极数码管的阵脚电平和显示数字对应关系(DP不亮)</p>
<table>
<thead>
<tr>
<th align="center">DP GFEDCBA</th>
<th align="center">显示(十进制)</th>
<th align="center">十六进制值</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1 1000000</td>
<td align="center">0</td>
<td align="center">0xC0</td>
</tr>
<tr>
<td align="center">1 1111001</td>
<td align="center">1</td>
<td align="center">0xF9</td>
</tr>
<tr>
<td align="center">1 0100100</td>
<td align="center">2</td>
<td align="center">0xA4</td>
</tr>
<tr>
<td align="center">1 0110000</td>
<td align="center">3</td>
<td align="center">0xB0</td>
</tr>
<tr>
<td align="center">1 0011001</td>
<td align="center">4</td>
<td align="center">0x99</td>
</tr>
<tr>
<td align="center">1 0010010</td>
<td align="center">5</td>
<td align="center">0x92</td>
</tr>
<tr>
<td align="center">1 0000010</td>
<td align="center">6</td>
<td align="center">0x82</td>
</tr>
<tr>
<td align="center">1 1111000</td>
<td align="center">7</td>
<td align="center">0xF8</td>
</tr>
<tr>
<td align="center">1 0000000</td>
<td align="center">8</td>
<td align="center">0x80</td>
</tr>
<tr>
<td align="center">1 0010000</td>
<td align="center">9</td>
<td align="center">0x90</td>
</tr>
</tbody></table>
<h3 id="树莓派引脚图"><a href="#树莓派引脚图" class="headerlink" title="树莓派引脚图"></a>树莓派引脚图</h3><p><img src="http://shumeipai.nxez.com/wp-content/uploads/2015/03/rpi-pins-40-0.png" alt="http://shumeipai.nxez.com/wp-content/uploads/2015/03/rpi-pins-40-0.png"></p>
<p>通过控制树莓派的<code>GPIO.X</code>引脚电平高低即可控制外部扩展设备。<br>看引脚的方式是树莓派有网线接口和 USB 接口的面朝下，GPIO 阵脚的那一面面向自己，左上角位 1 号脚，右下角为 40 号脚。</p>
<h2 id="编码实现"><a href="#编码实现" class="headerlink" title="编码实现"></a>编码实现</h2><p>代码都在 <a href="https://github.com/BDZNH/4-BIT-LED-Digital-Tube-Moudle">https://github.com/BDZNH/4-BIT-LED-Digital-Tube-Moudle</a>，下载之后，使用<code>make</code>命令编译，使用<code>sudo ./showtime    </code>执行。</p>
<h3 id="接线"><a href="#接线" class="headerlink" title="接线"></a>接线</h3><table>
<thead>
<tr>
<th align="center">四位数码管模块</th>
<th align="center">Raspeberry</th>
</tr>
</thead>
<tbody><tr>
<td align="center">VCC</td>
<td align="center">1 号脚(可改变)</td>
</tr>
<tr>
<td align="center">GND</td>
<td align="center">9 号脚(可改变)</td>
</tr>
<tr>
<td align="center">DIO</td>
<td align="center">12 号脚</td>
</tr>
<tr>
<td align="center">SCLK</td>
<td align="center">13 号脚</td>
</tr>
<tr>
<td align="center">RCLK</td>
<td align="center">15 号脚</td>
</tr>
</tbody></table>
<h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><p>循环显示年份，日期，时间，只显示到分钟，不显示秒。</p>
<img src="/2019/01/10/4-BIT-LED-Digital-Tube-Moudle/year.jpg" class="" title="2019年">

<img src="/2019/01/10/4-BIT-LED-Digital-Tube-Moudle/md.jpg" class="" title="1月10日">

<img src="/2019/01/10/4-BIT-LED-Digital-Tube-Moudle/hm.jpg" class="" title="15:25">

<iframe src="//player.bilibili.com/player.html?aid=40384627&cid=70929081&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>[1] 74HC595 的讲解，很详细，推荐观看<a href="https://www.bilibili.com/video/av10007630/?p=14">https://www.bilibili.com/video/av10007630/?p=14</a></p>
<p>[2] wiringPi 库的解说，也很详细，推荐收藏<a href="https://www.cnblogs.com/lulipro/p/5992172.html">https://www.cnblogs.com/lulipro/p/5992172.html</a></p>
]]></content>
  </entry>
  <entry>
    <title>使用Aria2c和百度网盘助手实现高速下载百度网盘资料</title>
    <url>/2016/10/20/Aria2c/</url>
    <content><![CDATA[<img src="/2016/10/20/Aria2c/baiduyun.jpg" class="" title="百度网盘">
<a id="more"></a>
<h2 id="一点介绍"><a href="#一点介绍" class="headerlink" title="一点介绍"></a>一点介绍</h2><p>先介绍一枚小神器————Aria2c，这是一个下载软件，支持Windows，Linux，mac os(原OS X)，不过是纯命令行操作的软件。<br>本文附带一个让它支持图形界面的办法(其实都是从网上扣来的)，不过每次讲的都不全，不完整，本文算是一个总结。<br>此方法共需要以下东西：</p>
<ul>
<li><p><a href="https://github.com/acgotaku/BaiduExporter">BaiduExporter</a>(一个chrome插件，用于提取出百度云的文件真正的下载地址)</p>
</li>
<li><p><a href="https://github.com/aria2/aria2">aria2c</a>(下载软件)：</p>
<p>  项目主页：<a href="https://github.com/aria2/aria2">https://github.com/aria2/aria2</a><br>  官方文档：<a href="https://aria2.github.io/">https://aria2.github.io/</a><br>  历史版本：<a href="https://github.com/aria2/aria2/releases/tag/release-1.28.0">https://github.com/aria2/aria2/releases/tag/release-1.28.0</a></p>
</li>
<li><p>aria2c-webui(非必需)</p>
</li>
</ul>
<p>第一步自然是下载带这三个软件了，地址都在上面，可以自行下载。</p>
<h2 id="Chrome浏览器导入插件"><a href="#Chrome浏览器导入插件" class="headerlink" title="Chrome浏览器导入插件"></a>Chrome浏览器导入插件</h2><p>打开chrome，在地址栏输入“chrome://extensions/”,勾选开发者模式，然后点击加载已解压的扩展程序(也可以将下载到的crx文件直接拖入当前chrome窗口)。选中解压的到的chrome文件夹，点击确定。</p>
<img src="/2016/10/20/Aria2c/chrome-extensions.jpg" class="" title="chrome-extensions">

<img src="/2016/10/20/Aria2c/chrome2.jpg" class="" title="chrome-extensions">

<img src="/2016/10/20/Aria2c/chrome-baiduexporter.jpg" class="">

<h2 id="安装Aria2c"><a href="#安装Aria2c" class="headerlink" title="安装Aria2c"></a>安装Aria2c</h2><p>下载，解压，双击“start.bat”,出现下面这个窗口就好了。</p>
<img src="/2016/10/20/Aria2c/aria2c1.jpg" class="">
<img src="/2016/10/20/Aria2c/aria2c2.jpg" class="">
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>这个时候，使用chrome浏览器打开任意百度网盘链接</p>
<img src="/2016/10/20/Aria2c/use1.jpg" class="">
<img src="/2016/10/20/Aria2c/use2.jpg" class="">
<p>点击ARIA2 RPC<br>可以看到下载成功的提示</p>
<img src="/2016/10/20/Aria2c/use-sucessful.jpg" class="">
<p>这个时候可以在黑框里面看到下载进度。</p>
<h2 id="使用webui查看下载进度"><a href="#使用webui查看下载进度" class="headerlink" title="使用webui查看下载进度"></a>使用webui查看下载进度</h2><p>不过大部分人对字符界面不敏感，所以这里准备了一个图形界面来查看下载进度,打开<a href="http://www.hushuangpu.xyz/aria2c-webui">www.hushuangpu.xyz/aria2c-webui</a><br>如果出现这个界面的话:</p>
<img src="/2016/10/20/Aria2c/error1.jpg" class="">
<p>依次点击”设置&gt;&gt;连接”，改成下图中的信息</p>
<img src="/2016/10/20/Aria2c/error2.jpg" class="">
<p>保存连接设置即可，就能在网页查看到下载信息了</p>
<img src="/2016/10/20/Aria2c/OK.jpg" class="">

<h2 id="其它可能会出现的问题说明"><a href="#其它可能会出现的问题说明" class="headerlink" title="其它可能会出现的问题说明"></a>其它可能会出现的问题说明</h2><p>在最新版的Chrome浏览器上，对非chrome商店的插件做了比较严格的限制，每次打开Chrome浏览器百度网盘助手都会被禁用，可以通过修改组策略来解决这个问题。<br>跳转到：<a href="https://hencolle.com/2016/10/16/baidu_exporter/">Guide on Packaging and Import Baidu Exporter to Chrome</a><br>也可以查看<a href="http://www.bilibili.com/video/av8293848/">bilibili</a><br><embed height="415" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="//static.hdslb.com/miniloader.swf" flashvars="aid=8293848&page=1" pluginspage="//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash"></embed><br>默认会下载到D:\Downloads</p>
<h2 id="软件下载地址"><a href="#软件下载地址" class="headerlink" title="软件下载地址"></a>软件下载地址</h2><p>所使用到的软件在此下载：<a href="https://pan.baidu.com/s/1c23j8eG">High_Speed_download_baiduyun.rar</a></p>
]]></content>
      <tags>
        <tag>-technology</tag>
        <tag>wanwan</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派自动温控风扇</title>
    <url>/2018/04/19/Auto-Control-Raspberry-Fan/</url>
    <content><![CDATA[<p>某天忘记把树莓派的电源断掉，然后第二天早上被它的风扇声音吵醒！！<br>严格来说在温度不高的时候风扇没必要打开，好在树莓派最不怕的就是各种折腾了。<br>动手把风扇改成温控的。</p>
<a id="more"></a>

<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>raspbian的<code>/sys/class/thermal/thermal_zone0/temp</code>文件内存着CPU的温度，读出来处以1000就得到温度了，省了给它测温的麻烦，大赞👍。<br>另外需要用的一个三极管，我这里用的是S9013，网上很多教程用的是S8085。严格来说不同的三极管实现起来是有不同的，这里不深究哪种三极管更好了。<br>突然想复习一下三极管怎么工作的( ╯□╰ )</p>
<h2 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h2><p>首先要知道的是树莓派的引脚定义，将树莓派有网络接口的一端朝下，有GPIO接口（就是那四十个脚）的一面面向自己，从上到下，从左到右，为物理引脚1~40,像这样</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1 2</span><br><span class="line">3 4</span><br><span class="line">5 6</span><br><span class="line">···</span><br></pre></td></tr></table></figure>

<p>但是具体到程序内，用的不是物理引脚，不同的库对引脚的定义也不同，这里提供一个<a href="http://shumeipai.nxez.com/raspberry-pi-pins-version-40">对照图</a></p>
<img src="/2018/04/19/Auto-Control-Raspberry-Fan/rpi-pins-40-0.png" class="" title="http:&#x2F;&#x2F;shumeipai.nxez.com&#x2F;raspberry-pi-pins-version-40">

<p>本文将使用<a href="http://wiringpi.com/">winringPi</a>作为控制引脚的库。<br>可以使用命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install wiringpi</span><br><span class="line">sudo apt purge wiringpi</span><br></pre></td></tr></table></figure>

<p>来完成安装，可以使用</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gpio -v</span><br></pre></td></tr></table></figure>

<p>来验证。<br>目前没有查询到每个脚具体的电气参数，理论上是可以将风扇直接插在引脚上，然后控制引脚的电平来间接控制风扇的开关的，但是不清楚具体哪个脚能承受多大的电流，就没有贸然尝试了。用了比较保险的三极管。<br>将三极管平的一面面向自己，引脚向下，从左到右引脚分别是E（发射极Emitter）B（基极Basic）C（集电极collector）。<br>连接示意图参考如下</p>
<img src="/2018/04/19/Auto-Control-Raspberry-Fan/1.png" class="">

<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>按图连接好之后，安装控制软件了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/BDZNH/AutoControlRaspberryFan.git</span><br><span class="line"><span class="built_in">cd</span> AutoControlRaspberryFan</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>

<p>可以前往<a href="https://github.com/BDZNH/AutoControlRaspberryFan">https://github.com/BDZNH/AutoControlRaspberryFan</a>查看帮助。</p>
<h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/******************************************************************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">-------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">        Project Name : AutoControlRaspberryfan                                 </span></span><br><span class="line"><span class="comment">        Author       : BDZNH                                                   </span></span><br><span class="line"><span class="comment">        Project URL  : https://github.com/BDZNH/AutoControlRaspberryFan        </span></span><br><span class="line"><span class="comment">        what is this : Auto control raspberry fan with 5V. Turn the fan        </span></span><br><span class="line"><span class="comment">                       when the temperaure is high than 45°C, turn off         </span></span><br><span class="line"><span class="comment">                       fan when the CPU temperature is lower than 39°C.        </span></span><br><span class="line"><span class="comment">-------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">******************************************************************************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;wiringPi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;softPwm.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TEMP_PATH <span class="meta-string">&quot;/sys/class/thermal/thermal_zone0/temp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOG_PATH <span class="meta-string">&quot;/tmp/RaspberrypiFanSpeed.log&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PID_PATH <span class="meta-string">&quot;/var/run/autocontrolfan.pid&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _FANPIN 8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> min(x,y) (x&lt;=y?x:y)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetCpuTempera</span><span class="params">(ifstream &amp;fin,<span class="keyword">double</span> &amp;temp)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">initWiringPi</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showInfo</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SaveLog</span><span class="params">(ofstream &amp;<span class="built_in">log</span>, <span class="keyword">double</span> &amp;temp, <span class="keyword">int</span> FanSpeed, <span class="keyword">time_t</span> &amp;time_cur)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	showInfo();</span><br><span class="line">	<span class="function">ofstream <span class="title">log</span><span class="params">(LOG_PATH)</span></span>;</span><br><span class="line">	<span class="keyword">if</span> (!<span class="built_in">log</span>.is_open())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Can&#x27;t open file : &quot;</span> &lt;&lt; LOG_PATH &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">log</span>.close();</span><br><span class="line">	<span class="function">ifstream <span class="title">fin</span><span class="params">(TEMP_PATH, ios_base::in)</span></span>;</span><br><span class="line">	<span class="keyword">if</span> (!fin.is_open())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Can&#x27;t open file : &quot;</span> &lt;&lt; TEMP_PATH &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function">ofstream <span class="title">pid</span><span class="params">(PID_PATH)</span></span>;</span><br><span class="line">	<span class="keyword">if</span> (!pid.is_open())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Can&#x27;t open file : &quot;</span> &lt;&lt; PID_PATH &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	pid &lt;&lt; getpid() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	pid.close();</span><br><span class="line">	pid.clear();</span><br><span class="line">	<span class="keyword">time_t</span> time_cur;</span><br><span class="line">	<span class="keyword">double</span> temp = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> Fan_Speed = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">bool</span> Forty_five_Flag = <span class="literal">false</span>;</span><br><span class="line">	<span class="keyword">if</span> (initWiringPi() &lt; <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		GetCpuTempera(fin,temp);</span><br><span class="line">		<span class="keyword">if</span> (temp &gt;= <span class="number">42</span>)</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Cpu temperature is : \033[0;31m&quot;</span> &lt;&lt; temp &lt;&lt; <span class="string">&quot;°C   \033[0m&quot;</span> &lt;&lt; flush;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Cpu temperature is : \033[1;32m&quot;</span> &lt;&lt; temp &lt;&lt; <span class="string">&quot;°C   \033[0m&quot;</span> &lt;&lt; flush;</span><br><span class="line">		<span class="keyword">if</span> (Forty_five_Flag)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (temp &lt; <span class="number">39.0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				Forty_five_Flag = <span class="literal">false</span>;</span><br><span class="line">				Fan_Speed = <span class="number">0</span>;</span><br><span class="line">				softPwmWrite(_FANPIN, Fan_Speed);</span><br><span class="line">				SaveLog(<span class="built_in">log</span>, temp, Fan_Speed, time_cur);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				SaveLog(<span class="built_in">log</span>, temp, Fan_Speed, time_cur);</span><br><span class="line">			&#125;</span><br><span class="line">			sleep(<span class="number">1</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (temp &lt; <span class="number">39.0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				sleep(<span class="number">1</span>);</span><br><span class="line">				Fan_Speed = <span class="number">0</span>;</span><br><span class="line">				softPwmWrite(_FANPIN, Fan_Speed);</span><br><span class="line">				SaveLog(<span class="built_in">log</span>, temp, Fan_Speed, time_cur);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span> (temp &gt;= <span class="number">40.0</span> &amp;&amp; temp &lt;= <span class="number">45.0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				Fan_Speed = min(((((<span class="keyword">int</span>)temp - <span class="number">40</span>) * <span class="number">10</span>) + <span class="number">60</span>),<span class="number">100</span>);</span><br><span class="line">				softPwmWrite(_FANPIN, Fan_Speed);</span><br><span class="line">				SaveLog(<span class="built_in">log</span>, temp, Fan_Speed, time_cur);</span><br><span class="line">				sleep(<span class="number">2</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span> (temp &gt; <span class="number">45.0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				Fan_Speed = <span class="number">100</span>;</span><br><span class="line">				softPwmWrite(_FANPIN, Fan_Speed);</span><br><span class="line">				Forty_five_Flag = <span class="literal">true</span>;</span><br><span class="line">				SaveLog(<span class="built_in">log</span>, temp, Fan_Speed, time_cur);</span><br><span class="line">				sleep(<span class="number">5</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		sleep(<span class="number">1</span>);</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\r&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetCpuTempera</span><span class="params">(ifstream &amp;fin, <span class="keyword">double</span> &amp;temp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	fin &gt;&gt; temp;</span><br><span class="line">	temp = temp / <span class="number">1000.0</span>;</span><br><span class="line">	fin.clear();</span><br><span class="line">	fin.seekg(<span class="number">0</span>, ios::beg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">initWiringPi</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (wiringPiSetup() != <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;WiringPi setup failed&quot;</span> &lt;&lt; flush &lt;&lt; <span class="string">&quot; \r&quot;</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (softPwmCreate(_FANPIN, <span class="number">0</span>, <span class="number">100</span>) != <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;softPwmcreat setup failed&quot;</span> &lt;&lt; flush &lt;&lt; <span class="string">&quot; \r&quot;</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-2</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;-------------------------------------------------------------------------------&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;        Project Name : AutoControlRaspberryfan                                 &quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;        Author       : BDZNH                                                   &quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;        Project URL  : https://github.com/BDZNH/AutoControlRaspberryFan        &quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;        what is this : Auto control raspberry fan with 5V. Turn the fan        &quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;                       when the temperaure is high than 45°C, turn off         &quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;                       fan when the CPU temperature is lower than 39°C.        &quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;-------------------------------------------------------------------------------&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;\n\n\n&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SaveLog</span><span class="params">(ofstream &amp;<span class="built_in">log</span>, <span class="keyword">double</span> &amp;temp, <span class="keyword">int</span> Fan_Speed, <span class="keyword">time_t</span> &amp;time_cur)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">log</span>.open(LOG_PATH,ios_base::out);</span><br><span class="line">	<span class="keyword">if</span> (!<span class="built_in">log</span>.is_open())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Can&#x27;t open file : &quot;</span> &lt;&lt; LOG_PATH &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	time(&amp;time_cur);</span><br><span class="line">	<span class="built_in">log</span> &lt;&lt; ctime(&amp;time_cur) &lt;&lt; <span class="string">&quot;CPU temperature is : &quot;</span> &lt;&lt; temp &lt;&lt; <span class="string">&quot;°C \nSet fan speed to &quot;</span> &lt;&lt; Fan_Speed &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">log</span>.close();</span><br><span class="line">	<span class="built_in">log</span>.clear();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>代码内设定的是超过45°C时开启风扇，低于39°C时关闭风扇。处于[40°C,45°C]时按需调节，温度越高，转速越快。<br>后边会让程序支持指定阈值和工作模式，不知道是不是我的错觉，不是满速旋转的时候风扇有怪怪的声音。</p>
<blockquote class="blockquote-center">
            <p>生命重在折腾</p>

          </blockquote>

<hr>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://blog.newnius.com/raspberry-control-fan-with-transistor.html">https://blog.newnius.com/raspberry-control-fan-with-transistor.html</a><br><a href="https://www.cnblogs.com/lulipro/p/5992172.html">树莓派wiringPi库详解</a><br>PS:链接一内的脚本用Python实现，无奈Python会占用大量CPU，对树莓派来说并不合适。后来虽然在百度也找到一些python脚本，占用资源也很少，但是还是写了这个练手。</p>
<h3 id="百度贴吧找到的python脚本"><a href="#百度贴吧找到的python脚本" class="headerlink" title="百度贴吧找到的python脚本"></a>百度贴吧找到的python脚本</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># encoding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> RPi.GPIO</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">RPi.GPIO.setwarnings(<span class="literal">False</span>)</span><br><span class="line">RPi.GPIO.setmode(RPi.GPIO.BCM)</span><br><span class="line">RPi.GPIO.setup(<span class="number">2</span>, RPi.GPIO.OUT)</span><br><span class="line">pwm = RPi.GPIO.PWM(<span class="number">2</span>,<span class="number">100</span>)</span><br><span class="line">RPi.GPIO.setwarnings(<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">speed = <span class="number">0</span></span><br><span class="line">prv_temp = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">		<span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">		</span><br><span class="line">				tmpFile = open( <span class="string">&#x27;/sys/class/thermal/thermal_zone0/temp&#x27;</span> )</span><br><span class="line">				cpu_temp = int(tmpFile.read())</span><br><span class="line">				tmpFile.close()</span><br><span class="line">				<span class="keyword">if</span> cpu_temp&gt;=<span class="number">34500</span> :</span><br><span class="line">				</span><br><span class="line">						<span class="keyword">if</span> prv_temp&lt;<span class="number">34500</span> :</span><br><span class="line">						<span class="comment">#启动时防止风扇卡死先全功率转0.1秒</span></span><br><span class="line">								pwm.start(<span class="number">0</span>)</span><br><span class="line">								pwm.ChangeDutyCycle(<span class="number">100</span>)</span><br><span class="line">								time.sleep(<span class="number">.1</span>)</span><br><span class="line">						speed = min( cpu_temp/<span class="number">125</span><span class="number">-257</span> , <span class="number">100</span> )</span><br><span class="line">						pwm.ChangeDutyCycle(speed)</span><br><span class="line">				<span class="keyword">else</span> :</span><br><span class="line">						pwm.stop()</span><br><span class="line">				prv_temp = cpu_temp</span><br><span class="line">				</span><br><span class="line">				time.sleep(<span class="number">5</span>)</span><br><span class="line">				</span><br><span class="line"><span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">		<span class="keyword">pass</span></span><br><span class="line">pwm.stop()</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Google BBR 提速</title>
    <url>/2017/07/18/BBR/</url>
    <content><![CDATA[<img src="/2017/07/18/BBR/1.jpg" class="" title="单边提速神器">
<a id="more"></a>
<p>谷歌总是有各种惊喜。偶然挖到这个家伙——<a href="https://github.com/google/bbr">BBR</a>。<br>vps加速有之前的锐速，也有<a href="https://github.com/xtaci/kcptun">kcptun</a>，锐速效果不好，kcptun搭建步骤繁琐，并且是双边加速，很不方便。<br>bbr是单边加速，给服务器一端配置好之后，所有客户端都能用。在教育网的IPv6下，晚八点左右，平时仅能达到500KB，开启bbr之后，可以达到2M+，效果很明显。</p>
<h2 id="安装内核"><a href="#安装内核" class="headerlink" title="安装内核"></a>安装内核</h2><p>bbr依赖于高于4.9+的Linux内核，要使用bbr，首先得升级内核。<br>对于Ubuntu，可以这样做：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.10.1/linux-headers-4.10.1-041001_4.10.1-041001.201702260735_all.deb</span><br><span class="line">wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.10.1/linux-headers-4.10.1-041001-generic_4.10.1-041001.201702260735_amd64.deb</span><br><span class="line">wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.10.1/linux-image-4.10.1-041001-generic_4.10.1-041001.201702260735_amd64.deb</span><br><span class="line">sudo dpkg -i *.deb &amp;&amp; sudo reboot</span><br></pre></td></tr></table></figure>
<p>重启之后，输入<code>uname -sr</code>可以看到新的内核已经安装。</p>
<h2 id="启动bbr"><a href="#启动bbr" class="headerlink" title="启动bbr"></a>启动bbr</h2><p>输入<code>lsmod | grep bbr</code>，如果结果中没有 tcp_bbr 的话就先执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">modprobe tcp_bbr</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;tcp_bbr&quot;</span> &gt;&gt; /etc/modules-load.d/modules.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;net.core.default_qdisc=fq&quot;</span> &gt;&gt; /etc/sysctl.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;net.ipv4.tcp_congestion_control=bbr&quot;</span> &gt;&gt; /etc/sysctl.conf</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure>
<p>然后依次执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br><span class="line">sysctl net.ipv4.tcp_congestion_control</span><br></pre></td></tr></table></figure>
<p>每条命令输入之后，提示信息里面都有<code>bbr</code>，则表示bbr已经开启。</p>
]]></content>
  </entry>
  <entry>
    <title>从组合数讲起</title>
    <url>/2016/12/09/Dynamic-programming/</url>
    <content><![CDATA[<h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>在做NOIP提高组day2第一题时，这个题的目标就是计算出组合数，也即题目中的系数。</p>
<h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>使用组合数公式</p>
<img src="/2016/12/09/Dynamic-programming/1.jpg" class="">
<a id="more"></a>
<p>可以看到，里面是三个阶乘，按照这个思路，可以这样</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">factor</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n==<span class="number">0</span>|n==<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    <span class="keyword">return</span> n*factor(n<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,ans;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    ans=factor(m)/(factor(n)*factor(m-n));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>使用组合书递推公式<br>C（M-1，N-1）+C（M-1，N）=C（M，N）<br>下面是代码实现</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> aa[<span class="number">1000</span>][<span class="number">1000</span>];</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">conbinatorics</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(aa[n][m])</span><br><span class="line">        <span class="keyword">return</span> aa[n][m];</span><br><span class="line">    <span class="keyword">if</span>(m==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> aa[n][m]=n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n==m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> aa[n][m]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> aa[n][m]=conbinatorics(n<span class="number">-1</span>,m<span class="number">-1</span>)+conbinatorics(n<span class="number">-1</span>,m);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt;conbinatorics(n,m)&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="/2016/12/09/Dynamic-programming/2.png" class="">

<p>这里使用了动态规划————记录结果再利用，本可以节省很多时间，但是在这个代码示范中体现得不明显。请看下面。</p>
<h2 id="斐波那契数列"><a href="#斐波那契数列" class="headerlink" title="斐波那契数列"></a>斐波那契数列</h2><p>F(1)=1，F(2)=1, F(n)=F(n-1)+F(n-2)<br>代码实现：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">F</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>||n==<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> F(n<span class="number">-1</span>)+F(n<span class="number">-2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;F(n)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>示例，当n= 40时，用时0.654s，</p>
<img src="/2016/12/09/Dynamic-programming/3.jpg" class="">


<p>用动态规划，代码实现如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> <span class="built_in">array</span>[<span class="number">1000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">F</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">array</span>[n])</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">array</span>[n];</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">array</span>[n]=F(n<span class="number">-1</span>)+F(n<span class="number">-2</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">array</span>[n];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n=<span class="number">40</span>;</span><br><span class="line">    <span class="built_in">array</span>[<span class="number">2</span>]=<span class="built_in">array</span>[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;F(n)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<img src="/2016/12/09/Dynamic-programming/4.jpg" class="">

<p>时间大幅度减少，虽然仍然不到一秒钟，但是用时相差约46倍，已经是巨大的差别了。</p>
<p>原因如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">F(40)&#x3D;F(39)+F(38);</span><br><span class="line">F(39)&#x3D;F(38)+F(37);</span><br><span class="line">F(38)&#x3D;F(37)+F(36);</span><br><span class="line">······</span><br></pre></td></tr></table></figure>
<p>仔细一看，虽然算法没错，但是F(39)和F(38)被计算了两次，如果继续往下的话，会发现有许多数倍计算了很多次，那么在第一次用到这个数的时候，就把它所对应的结果记录在array中，需要用的时候直接用就好了，节省很多运行时间。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>动态规划————记录结果再利用</p>
<blockquote class="blockquote-center">
            <p>生命在于折腾 </p>

          </blockquote>]]></content>
      <tags>
        <tag>C++</tag>
        <tag>算法</tag>
        <tag>动态规划</tag>
      </tags>
  </entry>
  <entry>
    <title>用Python搭建FTP服务器</title>
    <url>/2017/06/18/FileTransfer-by-python/</url>
    <content><![CDATA[<img src="/2017/06/18/FileTransfer-by-python/1.jpg" class="">
<a id="more"></a>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>在之前的<a href="http://bdznh.coding.me/2016/11/25/High-Speed-transfer/">某篇文章</a>中，介绍了告诉传输文件的办法，在文中，我使用了<code>nginx</code>来共享文件，缺点在于Windows的文件编码方式为GBK，在传输中文名的文件的时候，会出错，Windows下搭建FTP服务器的方式还有Windows自带的<code>Internet Information Service 管理器</code>，此法可解决中文问题，但是CPU占用较高，我的电脑上用IIS(Internet Information Service 管理器)搭建的FTP服务器来传松文件的时候，CPU占用超过30%，但是用<code>nginx</code>CPU占用不到5%。所以，今天换另外一个FTP服务器——<code>pyftpdlib</code></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>首先，电脑上得有已经安装好的python环境，然后使用pip命令安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip insstall pyftpdlib</span><br></pre></td></tr></table></figure>

<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>编辑一个纯文本文件，其内容如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#coding:utf-8</span><br><span class="line">from pyftpdlib.authorizers import DummyAuthorizer</span><br><span class="line">from pyftpdlib.handlers import FTPHandler</span><br><span class="line">from pyftpdlib.servers import FTPServer</span><br><span class="line">#新建一个用户组</span><br><span class="line">authorizer &#x3D; DummyAuthorizer()</span><br><span class="line">#将用户名，密码，指定目录，权限 添加到里面</span><br><span class="line">authorizer.add_user(&quot;fan&quot;, &quot;root&quot;, &quot;E:&#x2F;UT_Downloads&#x2F;&quot;, perm&#x3D;&quot;elr&quot;)#adfmw</span><br><span class="line">#这个是添加匿名用户,任何人都可以访问，如果去掉的话，需要输入用户名和密码，可以自己尝试</span><br><span class="line">authorizer.add_anonymous(&quot;D:&#x2F;&quot;)</span><br><span class="line"></span><br><span class="line">handler &#x3D; FTPHandler</span><br><span class="line">handler.authorizer &#x3D; authorizer</span><br><span class="line">#开启服务器</span><br><span class="line">server &#x3D; FTPServer((&quot;127.0.0.1&quot;, 21), handler)</span><br><span class="line">server.serve_forever()</span><br></pre></td></tr></table></figure>
<p>其中，<code>E:/UT_Downloads/</code>是需要共享的文件所在路径，可以自行更改，<code>fan</code>和<code>root</code>是用户名和密码，也可以自己改动，而<code>authorizer.add_anonymous(&quot;D:/&quot;)</code>是用来控制是否允许匿名用户登录的，若是把改行注释(行首加#号)，在登录服务器的时候，就需要输入用户名和密码了</p>
<img src="/2017/06/18/FileTransfer-by-python/3.jpg" class="">
<p>将文件名后缀设置为<code>.py</code>,在命令行下切换到该文件所在目录，使用<code>python ***.py</code>就可以打开FTP服务器了</p>
<img src="/2017/06/18/FileTransfer-by-python/2.jpg" class="">
<h2 id="连接展示"><a href="#连接展示" class="headerlink" title="连接展示"></a>连接展示</h2><p><code>nginx</code>搭建的实际上是<code>http</code>服务器，没办法文件管理器里面打开，用<code>pyftpdlib</code>搭建的是可以在文件管理器里面打开的。</p>
<img src="/2017/06/18/FileTransfer-by-python/4.jpg" class="">
<img src="/2017/06/18/FileTransfer-by-python/5.jpg" class="">

<h2 id="存在的问题"><a href="#存在的问题" class="headerlink" title="存在的问题"></a>存在的问题</h2><ol>
<li>以上示范代码，可以提供文件的下载，但是还不支持文件上传，若有上传文件的需要，可阅读官方的<a href="http://pythonhosted.org/pyftpdlib/">文档</a>。<br>我编辑此文的时候，还未与<code>nginx</code>的性能相比较过。</li>
<li>Windows下的中文乱码<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3>此问题表现为在浏览器打开FTP服务器是正常的，在文件管理器打开FTP服务器是乱码的。<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3>解决方法为更改<code>pyftpdlib</code>的源代码，到<a href="https://github.com/giampaolo/pyftpdlib/">https://github.com/giampaolo/pyftpdlib/</a>下载源代码，更改<code>pyftpdlib</code>文件夹下的<code>filesystems.py</code>,第<code>471</code>行和<code>603</code>的<code>utf8</code>改为<code>gbk</code>,文件<code>handlers.py</code>的<code>1382</code>行的<code>utf8</code>改为<code>gbk</code>，然后在命令行切换到<code>setup.py</code>文件所在的目录，使用命令<code>python setup.py install</code>进行安装。</li>
</ol>
<h2 id="卸载pyftpdlib"><a href="#卸载pyftpdlib" class="headerlink" title="卸载pyftpdlib"></a>卸载<code>pyftpdlib</code></h2><p>由于之前已经通过命令<code>pip insstall pyftpdlib</code>安装过了，所以用源代码安装的时候会提示已经安装，可以通过命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip uninstall pyftpdlib</span><br></pre></td></tr></table></figure>
<p>来将之前的<code>pyftpdlib</code>卸载掉，然后再安装更改源代码后的<code>pyftpdlib</code></p>
]]></content>
  </entry>
  <entry>
    <title>摆渡人</title>
    <url>/2017/01/10/Ferryman/</url>
    <content><![CDATA[<blockquote>
<p>I exist because you need me.<br>如果我真的存在，也是因为你需要我。</p>
</blockquote>
 <img src="/2017/01/10/Ferryman/1.jpg" class="" title="如果命运是一条孤独的河流，谁会是你的摆渡人？">
 <a id="more"></a>
<p>前些天读完《摆渡人》，小小的写点读后感。</p>
<blockquote>
<p>他坐在隧道出口的左侧，手放在膝盖上，注视着她。在这个距离望过去，只能辨认出他是个男孩，大概十几岁的样子。山风吹乱了他浅茶色的头发，拍打着他的脸。<br>“崔斯坦”她低声说，轻松和喜悦一下充盈在胸中。她看着他出现在了自己的世界里，如痴如醉。<br>他成功了。<br>这时，一个人走过来隔在了他们之间，是一个消防队员。迪伦静静的看着他俯下身子，给崔斯坦的肩上披上了一条毯子。那人在向他询问着什么，迪伦看到崔斯坦摇了摇头。接着他慢慢地，有点笨手笨脚的从草地上站了起来。对着消防队员讲完了最后一句话，他开始朝她的方向缓缓走了过来。就要走到她跟前时，他冲她一笑。<br>“嗨。”他喃喃地说，伸出一只手轻柔地拍了拍迪伦身上地毯子。他的手指顺着她身体一侧慢慢划过，最后紧紧地抓住了她的手。<br>“嗨。”她也轻声回了一句，嘴唇颤抖着露出了微笑，“原来你在这里。”<br>“我在这里。”</p>
</blockquote>
<p>迪伦很平静的接受了自己死亡的事实。崔斯坦感觉这个灵魂的不一般。</p>
<p>听了崔斯坦的口中故事，迪伦觉得崔斯坦受着不平之待遇。</p>
<p>灵魂与她的摆渡人一同跨过险恶的荒原。</p>
<p>迪伦在跨过边界之后，仍然做出了所有灵魂都没有做出过的决定————返回荒原，寻找崔斯坦。即使这样会死去。</p>
<img src="/2017/01/10/Ferryman/2.jpg" class="">
<blockquote class="blockquote-center">
            <p>人这一辈子，所求为何？得何而足？<br>一个灵魂伴侣。</p>

          </blockquote>]]></content>
      <tags>
        <tag>文学</tag>
      </tags>
  </entry>
  <entry>
    <title>高速传输文件的办法</title>
    <url>/2016/11/25/High-Speed-transfer/</url>
    <content><![CDATA[<img src="/2016/11/25/High-Speed-transfer/haha.jpg" class="">
<a id="more"></a>

<h2 id="一点点小说明"><a href="#一点点小说明" class="headerlink" title="一点点小说明"></a>一点点小说明</h2><p>有时候，需要在电脑与电脑之间传输一些文件，用U盘有时候不太方便，或者遇到U盘读不出来的奇葩情况，真是一出接一出，于是想办法。<br>同一个局域网下的电脑对传的话，一般网速能达到上限，速度不错，按100M的路由器来看，速度一般能在10MB/s左右。</p>
<h2 id="局域网传输————Dukto"><a href="#局域网传输————Dukto" class="headerlink" title="局域网传输————Dukto"></a>局域网传输————Dukto</h2><p>网上找到一个不错的软件————DuktoR6，这货速度虽然不快，我这儿测试速度3MB/s左右，不过它可用于大部分平台，windows，linux，Android，ios，windows phone，windows 10 mobile/pc，涵盖了日常能用到的大部分平台，连windows phone和windows 10 mobile都有，不得不说是一个良心软件。</p>
<img src="/2016/11/25/High-Speed-transfer/dukto.jpg" class="">

<p>使用方法是：两个终端(电脑或者手机)在同一个局域网下，打开DuktoR6，正常情况下软件会自动找到其它客户端，如上图，如果找不到的话，便点击 “IP connection” ，输入接受端的IP地址，若不知道接收端的IP地址的话，在接收端点击最下面三个图标的中间那个图标，就知道了，若是接收端同时具有多个IP地址，就得找到与发送端同一个网段得IP地址才行，用同样的办法查看发送端的IP地址，看IP地址的前三部分的相似度，在大多数情况下，普通路由器分配给终端的IP地址都形如“192.168.1.X或者192.168.0.X。</p>
<p>找到接收端之后，选择要发送的文件或文件夹便可以发送了。</p>
<h2 id="更加高速的办法"><a href="#更加高速的办法" class="headerlink" title="更加高速的办法"></a>更加高速的办法</h2><p>本方法适用于拷贝体积较大的文件，几G甚至几十G的文件拷贝用这种办法，时间会大大缩短。</p>
<p>现在的电脑大都配备了千兆网卡，理论传输速度是能超过100MB/s的，不过受限于运营商带宽或者路由器，一般网速只有几MB/s，如学校所用的翼讯，带宽为6M，最高下载持续下载速度也不到1MB/s，网卡性能浪费太多了。</p>
<p>两台电脑对传文件，若使用网线直接将两台电脑连接，这样带宽理论上是能达到网卡上限的。</p>
<h2 id="原理说明"><a href="#原理说明" class="headerlink" title="原理说明"></a>原理说明</h2><p>在上面所说的DuktoR6传输办法中，需要发送端和接收端都安装软件，有时候，这个反而不方便(比如两人都没有携带可以传输的设备，U盘什么的，别说手机了，有些手机不装驱动是没办法北电脑识别的)。</p>
<p>这里我使用的是最常见的直接通过链接下载的方法，也就是说通过TCP/IP协议，说得简单一点，就是拿浏览器直接下载了。</p>
<h2 id="详细说明"><a href="#详细说明" class="headerlink" title="详细说明"></a>详细说明</h2><h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><img src="/2016/11/25/High-Speed-transfer/nginx_logo.png" class="" title="nginx">
<p>如上面所说，想要通过浏览器直接下载对方电脑上的文件，得对方的电脑开启了web服务器，这个东西不难找，我使用的是<a href="http://nginx.org/">nginx</a>,<a href="http://nginx.org/download/nginx-1.11.6.zip">点我下载</a><br>上面的下载链接是针对windows系统的，基于debian的系统使用下面的命令安装nginx</p>
<pre><code>    sudo apt-get install nginx</code></pre>
<p>基于redhat的系统使用下面的命令安装nginx</p>
<pre><code>    sudo yum install nginx</code></pre>
<p>下面以windows下的nginx使用方法为例</p>
<h3 id="开启web服务器"><a href="#开启web服务器" class="headerlink" title="开启web服务器"></a>开启web服务器</h3><p>使用命令提示符(在开始按钮上点击鼠标右键，选择命令提示符即可)，然后切换到nginx所在的文件夹，我写本文时nginx版本为1.11.6，解压下载的压缩包，所得目录结构如下</p>
<pre><code>│  nginx.exe
│  
├─conf
│      fastcgi.conf
│      fastcgi_params
│      koi-utf
│      koi-win
│      mime.types
│      nginx.conf
│      scgi_params
│      uwsgi_params
│      win-utf
│      
├─contrib
│  │  geo2nginx.pl
│  │  README
│  │  
│  ├─unicode2nginx
│  │      koi-utf
│  │      unicode-to-nginx.pl
│  │      win-utf
│  │      
│  └─vim
│      ├─ftdetect
│      │      nginx.vim
│      │      
│      ├─indent
│      │      nginx.vim
│      │      
│      └─syntax
│              nginx.vim
│              
├─docs
│      CHANGES
│      CHANGES.ru
│      LICENSE
│      OpenSSL.LICENSE
│      PCRE.LICENCE
│      README
│      zlib.LICENSE
│      
├─html
│      50x.html
│      index.html
│      
├─logs
└─temp</code></pre>
<p>输入命令</p>
<p>start nginx</p>
<p>看到一个黑框一闪而过，这个时候nginx已经启动了，在浏览器地址栏输入localhost，即可看到这样的画面</p>
<img src="/2016/11/25/High-Speed-transfer/nginx2.jpg" class="" title="nginx is OK">
<p>我们同样可以在任务管理器查看进程</p>
<img src="/2016/11/25/High-Speed-transfer/nginx3.jpg" class="" title="nginx is runing">

<h3 id="搭建静态文件服务器"><a href="#搭建静态文件服务器" class="headerlink" title="搭建静态文件服务器"></a>搭建静态文件服务器</h3><p>这一步做完，我们就已经成功一大半了，搭建静态文件服务器的办法是更改conf文件夹下的nginx.conf文件。<br>不管用什么办法(我使用了记事本)，编辑nginx.conf文件，将内容更改如下</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">#user  nobody;</span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">#error_log  logs/error.log;</span><br><span class="line">#error_log  logs/error.log  notice;</span><br><span class="line">#error_log  logs/error.log  info;</span><br><span class="line"></span><br><span class="line">#pid        logs/nginx.pid;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        charset gbk;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        client_max_body_size 4G;</span><br><span class="line">        root Directory_add;</span><br><span class="line">        location / &#123;</span><br><span class="line">            autoindex on;</span><br><span class="line">            autoindex_exact_size off;</span><br><span class="line">            autoindex_localtime on;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>自行更改Directory_ add为被传输文件的目录，比如我再D盘的download文件夹下的文件是我想要传输被对方的，Directory_add就改成D:\Download<br>此时配置文件已经修改完成，使用命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure>

<p>重载配置，使其生效，比如这里我改成F:\Minecraft，重载配置文件后，浏览器打开localhost，界面是这样的：</p>
<img src="/2016/11/25/High-Speed-transfer/server.jpg" class="">

<p>这个时候，只要别人能打开这台电脑的IP，就可以直接点击相应的文件下载了。</p>
<h3 id="开始传输"><a href="#开始传输" class="headerlink" title="开始传输"></a>开始传输</h3><p>前面已经说过，原理便是搭建一个web静态文件服务器，这个时候，只要别人能连接打开服务器的电脑，便可以下载配置好的目录里面的文件了。</p>
<p>怎么连接呢？</p>
<p>第一种办法是仍然连接同一个局域网</p>
<p>第二种办法便是直接用网线连接两台电脑，没错，一根网线，两头都是电脑。<br>不过普通网线没办法使得两台电脑处于同一台局域网，要么使用交叉网线(这种网线一般用不到，所以不好找)，要么参考这个<a href="http://jingyan.baidu.com/article/148a1921be24c54d70c3b164.html">办法</a>的方法2的第四和第五个步骤</p>
<img src="/2016/11/25/High-Speed-transfer/share_net.png" class="">

<p><em>其实，绕来绕去，就是要让两台电脑能处于同一个网段下面，不管是连接同一个路由器还是用网线直连，目的都是这个。</em></p>
<h2 id="PS的一些东西"><a href="#PS的一些东西" class="headerlink" title="PS的一些东西"></a>PS的一些东西</h2><p>在配置文件中，有这样一行</p>
<pre><code>charset gbk;</code></pre>
<p>因为我是在windows内进行的演示，不用gbk的话，遇到中文名的文件会乱码，如果是linux系统的话，需要删除这一行或者把gbk改成utf-8。</p>
<p>并且，nginx不能放在含中文的目录下面，Dectory_add也不能是含有中文或者空格的目录。</p>
]]></content>
      <tags>
        <tag>小窍门</tag>
      </tags>
  </entry>
  <entry>
    <title>搞定Putty的编译问题</title>
    <url>/2017/11/11/Fix-putty-bug/</url>
    <content><![CDATA[<p>之前编译Putty的时候，遇到如下错误：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">In file included from ..&#x2F;windows&#x2F;window.c:29:0:</span><br><span class="line">D:&#x2F;CodeBlocks&#x2F;MinGW&#x2F;i686-w64-mingw32&#x2F;include&#x2F;multimon.h: In function &#39;IsPlatformNT&#39;:</span><br><span class="line">D:&#x2F;CodeBlocks&#x2F;MinGW&#x2F;i686-w64-mingw32&#x2F;include&#x2F;multimon.h:130:38: error: &#39;osvi&#39; undeclared (first use in this function)</span><br><span class="line">     oi.dwOSVersionInfoSize &#x3D; sizeof (osvi);</span><br><span class="line">                                      ^~~~</span><br><span class="line">D:&#x2F;CodeBlocks&#x2F;MinGW&#x2F;i686-w64-mingw32&#x2F;include&#x2F;multimon.h:130:38: note: each undeclared identifier is reported only once for each function it appears in</span><br><span class="line">mingw32-make: *** [.\Makefile.mgw:963: window.o] Error 1</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>之前没怎么仔细看过报错信息，而是把Visual Studio的<code>multimon.h</code>替换掉Mingw的来解决报错。<br>现在回头仔细看了看了信息，无非是Mingw的<code>multimon.h</code>里面的<code>IsPlatformNT</code>函数内的<code>osvi</code>未定义，同时打开了Mingw和Visual Studio的<code>multimon.h</code>，显示如下</p>
<img src="/2017/11/11/Fix-putty-bug/1.png" class="">
<p>如图，可以看到Mingw的头文件内定义的变量是<code>oi</code>，但是使用的时候却用了<code>osvi</code>，初步估计是Mingw的问题了，向社区提交，等待回复。</p>
]]></content>
  </entry>
  <entry>
    <title>First day</title>
    <url>/2016/03/26/First-day/</url>
    <content><![CDATA[<h3 id="今天，正式开始！"><a href="#今天，正式开始！" class="headerlink" title="今天，正式开始！"></a>今天，正式开始！</h3><p>2016年3月26日 于西安电子科技大学</p>
<img src="/2016/03/26/First-day/myweblogo.jpg" class="" title="This">


]]></content>
  </entry>
  <entry>
    <title>手动编译Spigot</title>
    <url>/2017/10/04/How-to-build-spigot-on-Windows/</url>
    <content><![CDATA[<p>其实官网的教程很简单，只有一条命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -jar BuildTools.jar</span><br></pre></td></tr></table></figure>
<p>确实，用这一条命令就能完成，不过踩了一些坑。做一下记录。<br>前往<a href="https://git-scm.com/">https://git-scm.com/</a>下载Git，<a href="http://www.oracle.com/technetwork/java/javase/downloads/index-jsp-138363.html#javasejdk">http://www.oracle.com/technetwork/java/javase/downloads/index-jsp-138363.html#javasejdk</a>下载jdk。<br>在国内首先要解决的是网络问题，否则数百MB的源码得很长时间才能下载好，然后，内存至少为2GB，1GB 是不够的，想来前几天编译总是失败的原因就是这个。</p>
<a id="more"></a>
<p>内存不够，会出现下面这个错误:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Exception in thread &quot;main&quot; java.lang.OutOfMemoryError: Java heap space</span><br><span class="line">        at org.objectweb.asm.ClassReader.readLabel(ClassReader.java:2403)</span><br><span class="line">        at org.objectweb.asm.ClassReader.readCode(ClassReader.java:1324)</span><br><span class="line">        at org.objectweb.asm.ClassReader.readMethod(ClassReader.java:1165)</span><br><span class="line">        at org.objectweb.asm.ClassReader.accept(ClassReader.java:727)</span><br><span class="line">        at org.objectweb.asm.ClassReader.accept(ClassReader.java:525)</span><br><span class="line">        at net.md_5.ss.repo.JarRepo.getClass0(JarRepo.java:38)</span><br><span class="line">        at net.md_5.ss.repo.ClassRepo.getClass(ClassRepo.java:22)</span><br><span class="line">        at net.md_5.ss.repo.AggregateRepo.getClass0(AggregateRepo.java:30)</span><br><span class="line">        at net.md_5.ss.repo.ClassRepo.getClass(ClassRepo.java:22)</span><br><span class="line">        at net.md_5.ss.remapper.EnhancedRemapper.findMethodDeclarer(EnhancedRemapper.java:67)</span><br><span class="line">        at net.md_5.ss.remapper.EnhancedRemapper.mapMethodName(EnhancedRemapper.java:33)</span><br><span class="line">        at org.objectweb.asm.commons.MethodRemapper.doVisitMethodInsn(MethodRemapper.java:155)</span><br><span class="line">        at org.objectweb.asm.commons.MethodRemapper.visitMethodInsn(MethodRemapper.java:142)</span><br><span class="line">        at org.objectweb.asm.ClassReader.readCode(ClassReader.java:1647)</span><br><span class="line">        at org.objectweb.asm.ClassReader.readMethod(ClassReader.java:1165)</span><br><span class="line">        at org.objectweb.asm.ClassReader.accept(ClassReader.java:727)</span><br><span class="line">        at org.objectweb.asm.ClassReader.accept(ClassReader.java:525)</span><br><span class="line">        at net.md_5.ss.model.ClassInfo.remap(ClassInfo.java:120)</span><br><span class="line">        at net.md_5.ss.SpecialSource.map(SpecialSource.java:96)</span><br><span class="line">        at net.md_5.ss.SpecialSource.main(SpecialSource.java:44)</span><br><span class="line">Exception in thread &quot;main&quot; java.lang.RuntimeException: Error running command, return status !&#x3D;0: [java, -jar, BuildData&#x2F;bin&#x2F;SpecialSource-2.jar, map, -i, work&#x2F;minecraft_server.1.12.2.jar, -m, BuildData&#x2F;mappings&#x2F;bukkit-1.12.2-cl.csrg, -o, work&#x2F;mapped.cf6b1333.jar-cl]</span><br><span class="line">        at org.spigotmc.builder.Builder.runProcess(Builder.java:555)</span><br><span class="line">        at org.spigotmc.builder.Builder.main(Builder.java:313)</span><br><span class="line">        at org.spigotmc.builder.Bootstrap.main(Bootstrap.java:23)</span><br></pre></td></tr></table></figure>
<p>很奇怪的一点是，因为我首先考虑了网络问题，所以我首先在VPS上执行编译，以便所有的源码全部下载好，然后打包下载到本地，再在本地编译，出现的错误同样是上面这个错误。<br>最后无奈，动用非常手段，让网络正常一点，清空工程目录，单独执行编译命令才成功。<br>来张合影</p>
<img src="/2017/10/04/How-to-build-spigot-on-Windows/1.png" class="" title="编译成功，深更半夜的~~">
<p>编译成功后会在<code>BuildTools</code>同级目录里面出现<code>craftbukkit-1.12.2.jar</code>和<code>spigot-1.12.2.jar</code>，好了，拿去愉快的玩耍吧。</p>
]]></content>
      <tags>
        <tag>Minecraft</tag>
        <tag>Spigot</tag>
      </tags>
  </entry>
  <entry>
    <title>Lake Counting</title>
    <url>/2016/04/03/Lake-Counting/</url>
    <content><![CDATA[<h2 id="Lake-Couting"><a href="#Lake-Couting" class="headerlink" title="Lake Couting"></a>Lake Couting</h2><p>今天看到一个挺有意思的题目，拿出来分享一下。</p>
<p>题目所体现的算法思想为“深度优先搜索”(实在想知道这是神马的，百度一下)</p>
<p>这里给出简单的解释：深度优先搜索从最开始的状态出发，遍历所有可以达到的状态。由此可以对所有的状态进行操作，或者列举出所有的状态。</p>
<a id="more"></a>

<h3 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h3><p>有一个大小为N x M 的园子，雨后积满了水。八联通的积水被认为是连接在一起的。请求出这个园子里总共有多少水洼？(八联通指的是下图中相对  w 的 * 的部分)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">***</span><br><span class="line">www</span><br><span class="line">***</span><br></pre></td></tr></table></figure>

<h3 id="数据限制："><a href="#数据限制：" class="headerlink" title="数据限制："></a>数据限制：</h3><p>N&lt;100,m&lt;100</p>
<h3 id="输入数据"><a href="#输入数据" class="headerlink" title="输入数据:"></a>输入数据:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10 12</span><br><span class="line">w........ww.</span><br><span class="line">.www.....www</span><br><span class="line">....ww...ww.</span><br><span class="line">.........ww.</span><br><span class="line">.........w..</span><br><span class="line">..w......w..</span><br><span class="line">.w.w.....ww.</span><br><span class="line">w.w.w.....w.</span><br><span class="line">.w.w.....w..</span><br><span class="line">..w......ww.</span><br></pre></td></tr></table></figure>


<h3 id="答案："><a href="#答案：" class="headerlink" title="答案："></a>答案：</h3><p>  3</p>
<h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><p>下面是代码:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;<span class="comment">//C++特有的命名空间，换为C的话，要去掉这行，并且改变头文件</span></span><br><span class="line"><span class="keyword">int</span> n,m;<span class="comment">//定义全局变量，n为行数，m为列数；</span></span><br><span class="line"><span class="keyword">char</span> field[<span class="number">101</span>][<span class="number">101</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    field[x][y]=<span class="string">&#x27;.&#x27;</span>;<span class="comment">//将当前位置替换为“.”</span></span><br><span class="line">    <span class="comment">//循环遍历当前位置周围的八个方向</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> dx = <span class="number">-1</span>; dx &lt; <span class="number">1</span>; dx++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> dy = <span class="number">-1</span>; dy &lt;= <span class="number">1</span>; dy ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> nx=x+dx,ny=y+dy;<span class="comment">//向x方向移动dx，向y方向移动dy。</span></span><br><span class="line">            <span class="comment">//判断(nx，ny)是不是在园子范围内，并判断是否有积水</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="number">0</span>&lt;=nx&amp;&amp;nx&gt;n&amp;&amp;<span class="number">0</span>&lt;=ny&amp;&amp;ny&lt;m&amp;&amp;field[nx][ny]==<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                dfs(nx,ny);<span class="comment">//这儿是递归用法，仔细想想</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ;<span class="comment">//这行是可以省略的，因为当前所在函数是void型。</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (field[i][j]==<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                dfs(i,j);<span class="comment">//从有水(w)的地方开始搜索</span></span><br><span class="line">                res++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,res);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>( ; i&lt;n ; i++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>( ; j&lt;m ; j++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;field[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    solve();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>其实，在windows系统下主函数中的</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>( ; i&lt;n ; i++ )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>( ; j&lt;m ; j++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;field[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>也可以改写成</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>( ;i&lt;n ;i++)</span><br><span class="line">&#123;</span><br><span class="line">	gets(field[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>( ; i&lt;n ; i++)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,field[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>来减少一些输入，但是要注意gets函数在linux系统下是不允许使用的(有风险)。<br>“深度优先搜索”的信息，这种概念行性的东西,诸位还是百度吧，我说不清楚。</p>
]]></content>
      <tags>
        <tag>深度优先搜索</tag>
      </tags>
  </entry>
  <entry>
    <title>小米路由器与IPv6</title>
    <url>/2018/03/02/IPv6-For-xiaomi-nano-router/</url>
    <content><![CDATA[<p>西电的校园网拨号之后可以获取到IPv6地址，刷了op的路由器也可以获取到IPv6地址，但是后端设备想要获取到IPv6地址还得再折腾一下。<br>手里的设备是小米路由器青春版。</p>
<a id="more"></a>

<p>将小米路由器刷成op，得给它换一个bootloader，这里使用的是breed，可以参考链接<a href="http://www.v5china.com/xiaomi-router-youth-version-of-breed-after-the-brush-brush-into-asus-firmware-tutorial.html">http://www.v5china.com/xiaomi-router-youth-version-of-breed-after-the-brush-brush-into-asus-firmware-tutorial.html</a>，进行到该文章的第七步即可。<br>下载lede固件<a href="https://downloads.lede-project.org/releases/17.01.4/targets/ramips/mt7628/lede-17.01.4-ramips-mt7628-miwifi-nano-squashfs-sysupgrade.bin">https://downloads.lede-project.org/releases/17.01.4/targets/ramips/mt7628/lede-17.01.4-ramips-mt7628-miwifi-nano-squashfs-sysupgrade.bin</a>，模仿第八步，为小米路由器安装lede固件。<br>开机之后，第一次连接会提示设置登录密码（使用网线，lede固件默认不开启WiFi），在network-&gt;&gt;interface-&gt;&gt;wan处可以设置路由器的联网方式，确保路由器能联网之后，使用<a href="https://the.earth.li/~sgtatham/putty/latest/w32/putty.exe">putty</a>登录路由器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install luci-i18n-base-zh-cn</span><br></pre></td></tr></table></figure>
<p>安装好中文语言包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">opkg install kmod-ipt-nat6</span><br></pre></td></tr></table></figure>
<p>安装nat6模块</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;net.ipv6.conf.default.accept_ra=2&quot;</span> &gt;&gt; /etc/sysctl.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;net.ipv6.conf.all.accept_ra=2&quot;</span> &gt;&gt; /etc/sysctl.conf</span><br><span class="line"></span><br><span class="line">uci <span class="built_in">set</span> network.globals.ula_prefix=<span class="string">&quot;<span class="subst">$(uci get network.globals.ula_prefix | sed &#x27;s/^./d/&#x27;)</span>&quot;</span></span><br><span class="line">uci commit network</span><br><span class="line">uci <span class="built_in">set</span> dhcp.lan.ra_default=<span class="string">&#x27;1&#x27;</span></span><br><span class="line">uci commit dhcp</span><br></pre></td></tr></table></figure>
<p>配置网络<br>在<code>/etc/init.d/</code>目录下新建一个文件，向文件内写入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">ip6tables -t nat -I POSTROUTING -s `uci get network.globals.ula_prefix` -j MASQUERADE</span><br><span class="line">route -A inet6 add 2000::/3 `route -A inet6 | grep ::/0 | awk <span class="string">&#x27;NR==1&#123;print &quot;gw &quot;$2&quot; dev &quot;$7&#125;&#x27;</span>`</span><br></pre></td></tr></table></figure>
<p>应用文件并重启，通过WiFi和网线连接到路由器的设备可以获取IPv6地址。</p>
<img src="/2018/03/02/IPv6-For-xiaomi-nano-router/1.png" class="" title="只能通过IPv6连接的六维空间">
<h2 id="乱七八糟"><a href="#乱七八糟" class="headerlink" title="乱七八糟"></a>乱七八糟</h2><h3 id="查看lede固件完整的支持列表："><a href="#查看lede固件完整的支持列表：" class="headerlink" title="查看lede固件完整的支持列表："></a>查看lede固件完整的支持列表：</h3><p><a href="https://openwrt.org/toh/views/toh_fwdownload">https://openwrt.org/toh/views/toh_fwdownload</a></p>
<h3 id="bootloader"><a href="#bootloader" class="headerlink" title="bootloader"></a>bootloader</h3><p>换bootloader的原因是，路由器本身的bootloader不支持安装lede固件，就像给手机刷机需要更换recovery一样</p>
<h3 id="失败的例子"><a href="#失败的例子" class="headerlink" title="失败的例子"></a>失败的例子</h3><p>从大一就开始尝试，一开始刷的的原版的openwrt，刷完之后根本无法开机，后来尝试了pandorabox，路由器能获取到IPv6地址，但是安装好nat6模块，执行命令转发时失败，内核不支持，辗转到了lede固件，貌似现在lede固件已经是openwrt的官方固件了，官网合并了。</p>
]]></content>
  </entry>
  <entry>
    <title>Minecraft Server</title>
    <url>/2016/07/03/Minecraft-server/</url>
    <content><![CDATA[<img src="/2016/07/03/Minecraft-server/mc.jpg" class="" title="This is Minecraft">

<a id="more"></a>

<p>Minecraft由java编写，运行我的世界服务器(客户端)需要在计算机安装java运行环境，然后再计算机上运行服务端，在客户端填写运行服务端的计算机的ip地址就行(如果全部是默认设置的话)<br>PS：本文所涉及的命令操作，在windows中为命令提示符下输入，在Linux中为终端或者控制台输入。下面不再特别说明。</p>
<h2 id="第一步：在计算机上安装java运行环境。"><a href="#第一步：在计算机上安装java运行环境。" class="headerlink" title="第一步：在计算机上安装java运行环境。"></a>第一步：在计算机上安装java运行环境。</h2><p>计算机系统如果为windows，前往java官网下载“<em>jre</em>”运行环境，双击，默认安装在C盘，可以根据需要更改。没有特殊需要的话，一直点击下一步直到安装完成就行。<br>计算机系统如果为cent OS/red hat，可以输入如下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y list | grep *java*</span><br></pre></td></tr></table></figure>
<p>来查看有哪些java包可用，安装需要的包即可。<br>计算机系统如果为debian/ubuntu或基于它们的衍生版，输入如下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install default-jre*</span><br></pre></td></tr></table></figure>
<p>即可安装java。</p>
<h2 id="第二步：运行Minecraft服务端"><a href="#第二步：运行Minecraft服务端" class="headerlink" title="第二步：运行Minecraft服务端"></a>第二步：运行Minecraft服务端</h2><p>Minecraft服务端分为官方服务端和第三方服务端，官方服务端可以在MC官网下载到。这里提供1.10版本下载地址(经过测试，把下面链接中的1.10改成其他相应版本就能下载相应版本的服务端，把1.10改成1.9.4就能下载到1.9.4的服务端)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://s3.amazonaws.com/Minecraft.Download/versions/1.10/minecraft_server.1.10.jar</span><br></pre></td></tr></table></figure>
<p>也可以前往<a href="https://minecraft.net/zh-hans/download/server">https://minecraft.net/zh-hans/download/server</a>获取最新版本的官方服务端。<br>第三方服务端这里提供一个网址——<a href="http://www.mcadmin.net,这个网址提供“水龙头”和“水桶”服务端下载./">www.mcadmin.net，这个网址提供“水龙头”和“水桶”服务端下载。</a><br>一般客户端只能进入同版本的服务端，跨版本的服务端为第三方制作，可以前往<a href="http://www.mcbbs.net了解更多信息./">www.mcbbs.net了解更多信息。</a><br>服务端为一个“.jar”文件，windows下使用命令行/linux下使用终端或者控制台，切换到服务端文件所在目录，输入命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -jar *.jar</span><br></pre></td></tr></table></figure>
<p>(这里*.jar是指你下载到的服务端的文件的文件名)<br>这里还可以使用参数控制服务器所使用的内存，比如</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -Xmx768M -Xms512M -jar minecraft_server.1.10.jar</span><br></pre></td></tr></table></figure>
<p>“-Xmx768M”是限制服务器所使用的最大内存，”-Xms512M”是限制服务器所使用的最小内存。<br>当出现如如下图的画面时，代表服务端开启成功(这里演示所使用的服务端为官服，版本1.10)</p>
<img src="/2016/07/03/Minecraft-server/mc-server-1.jpg" class="" title="The server of Minecraft is OK">


<h2 id="第三步：-联机"><a href="#第三步：-联机" class="headerlink" title="第三步： 联机"></a>第三步： 联机</h2><h3 id="3-1"><a href="#3-1" class="headerlink" title="3.1"></a>3.1</h3><p>如果玩家在同一个局域网 (比如电脑连接了同一台路由器后者交换机，找到开启服务端的电脑的IP地址，在多人游戏中输入服务端的电脑的IP地址即可连接)<br>Windows可以用ipconfig，linux卡可以使用ifconfig查找自己的IP地址。</p>
<h3 id="3-2"><a href="#3-2" class="headerlink" title="3.2"></a>3.2</h3><p>如果玩家相隔很远，这个时候就需要公网IP了。获取公网IP的办法有很多：</p>
<ol>
<li>租用服务器，阿里云和腾讯云都有针对学生认证的优惠，阿里云认证之后为10元每月，腾讯云认证后为1元每月；</li>
<li>内网穿透<br>腾讯云和阿里云去官网登录按照提示来就行，这里不再赘述。<br>内网穿透估计大多数人都搞不定，这里指一个方向——花生壳，  到花生壳的官网查找，用内网穿透拿到公网IP，这样朋友就能和自己连接上了。</li>
</ol>
<h2 id="开服神器推荐——McMyAdmin"><a href="#开服神器推荐——McMyAdmin" class="headerlink" title="开服神器推荐——McMyAdmin"></a>开服神器推荐——McMyAdmin</h2><p>由于普通开服后，管理服务器时涉及很多命令操作，许多纯白的小白还是搞不定，这里推荐一个操作简单的开服软件——<a href="http://www.mcmyadmin.com/">McMyAdmin</a></p>
<img src="/2016/07/03/Minecraft-server/mc-server-2.jpg" class="" title="Minecraft">

<img src="/2016/07/03/Minecraft-server/mc-server-3.jpg" class="" title="Minecraft">

<img src="/2016/07/03/Minecraft-server/mc-server-4.jpg" class="" title="Minecraft">

<p>PS：在运行linux的计算机上运行这个软件需要安装mono，由于在windows上运行这个McMyAdmin网上已经有很多教程了，这里不再累述。<br>我在安装mono时遇到不少麻烦，首先是cent OS自带源里面不包含mono，必须手动安装，然后百度，找了各种博客，按照叙述一步一步来，还是失败，最后在mono的<a href="http://www.mono-project.com/docs/getting-started/install/linux/#centos-7-fedora-19-and-later-and-derivatives">wiki</a>找到解决办法，如下</p>
<p>CentOS 7, Fedora 19 (and later), and derivatives(需要root权限)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install yum-utils</span><br><span class="line">rpm --import <span class="string">&quot;http://keyserver.ubuntu.com/pks/lookup?op=get&amp;search=0x3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF&quot;</span></span><br><span class="line">yum-config-manager --add-repo http://download.mono-project.com/repo/centos/</span><br><span class="line">yum update</span><br><span class="line">yum install mono-devel </span><br></pre></td></tr></table></figure>
<p>Debian, Ubuntu, and derivatives(root)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb http://download.mono-project.com/repo/debian wheezy main&quot;</span> | sudo tee /etc/apt/sources.list.d/mono-xamarin.list</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install mono-devel </span><br></pre></td></tr></table></figure>
<p>然后输入命令”mono -v”<br>出现如下信息则表示mono安装成功</p>
<img src="/2016/07/03/Minecraft-server/mc-server-mono.jpg" class="" title="MONO">
<h2 id="关于服务器的选择"><a href="#关于服务器的选择" class="headerlink" title="关于服务器的选择"></a>关于服务器的选择</h2><p>服务器系统，最好选择红帽或者Cent OS，红帽背后是企业级支持，虽然个人用不上，但是，可以用它的衍生版Cent OS，至于为什么不选择Ubuntu之类的，我在腾讯云的1core &amp; 1G RAM的VPS上，Ubuntu的表现远远不如Cent OS。</p>
]]></content>
      <tags>
        <tag>Minecraft</tag>
        <tag>Games</tag>
      </tags>
  </entry>
  <entry>
    <title>NOIP 2015 信息传递</title>
    <url>/2017/01/19/NOIP-2015-Message/</url>
    <content><![CDATA[<p>初探图论，这本来是大一就该学的，没想到拖到这个假期，感觉好懒啊。<br>尝试做了一下NOIP 2015 day1 的信息传递，整理如下。</p>
<a id="more"></a>
<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><img src="/2017/01/19/NOIP-2015-Message/1.jpg" class="">
<h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,i,j=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">int</span> circle[n+<span class="number">2</span>]=&#123;<span class="number">0</span>&#125;,status[n+<span class="number">2</span>]=&#123;<span class="number">0</span>&#125;,via[n+<span class="number">2</span>]=&#123;<span class="number">0</span>&#125;,flag[n+<span class="number">2</span>]=&#123;<span class="number">0</span>&#125;;<span class="comment">//circle用来存储输入的数据，status用来记录i个人有几个人会告诉他信息，via用来记录某个人是否被告诉过信息</span></span><br><span class="line">    <span class="keyword">for</span>( i = <span class="number">1</span> ; i &lt;= n ; i++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;circle[i];</span><br><span class="line">        status[circle[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>( i = <span class="number">1</span> ; i &lt;=  n; i++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(status[i]==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            flag[j++]=i;</span><br><span class="line">            via[i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>( i = <span class="number">0</span> ; i &lt; j ; i++ )</span><br><span class="line">    &#123;</span><br><span class="line">        status[circle[flag[i]]]--;</span><br><span class="line">        <span class="keyword">if</span>(status[circle[flag[i]]]==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            flag[j++]=circle[flag[i]];</span><br><span class="line">            via[circle[flag[i]]]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=n,temp;</span><br><span class="line">    <span class="keyword">for</span>( i = <span class="number">1</span> ; i &lt;= n ; i++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>( via[i]==<span class="number">0</span> &amp;&amp; circle[i]!=<span class="number">0</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            via[i]=<span class="number">1</span>;</span><br><span class="line">            temp=<span class="number">1</span>;</span><br><span class="line">            j=circle[i];</span><br><span class="line">            <span class="keyword">while</span>(!via[j])</span><br><span class="line">            &#123;</span><br><span class="line">                via[j]=<span class="number">1</span>;</span><br><span class="line">                j=circle[j];</span><br><span class="line">                temp++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(temp&lt;ans)</span><br><span class="line">                ans=temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><h3 id="题意说明"><a href="#题意说明" class="headerlink" title="题意说明"></a>题意说明</h3><p>代码大量参考了<a href="http://www.cnblogs.com/zbtrs/p/5762788.html">此文章</a><br>文中的没有给出详细解题信息，我看了之后整理了一下。<br>文中有这样一句话</p>
<blockquote>
<p>其实这道题题意非常明确，就是让我们寻找一个最小环的长度，怎么求呢？也很简单，先把<a href="http://baike.baidu.com/link?url=r3KqWUoNomP_vuWuIwtmI0cVz1oglvwYD99gDNTo6pDwJTZeey4OHOxFCxDV7ZbRZsIi9OA8tGhT_oB7Uro0HunPx8I7TweWgo-IeUcGoya">入度</a>为0的点删除，然后把这个点指向的点的入度-1，如果入度为0，也删去，这样就只保留有用的点，那么从任意一个点开始，用vis数组记录是否被访问过，访问到一个新节点就累加计数器，然后就做出来了.bfs和dfs都可以.</p>
</blockquote>
<p>把样例输入数据变成图，就成了这样：</p>
<img src="/2017/01/19/NOIP-2015-Message/2.jpg" class="">
<p>从图中可以看到，第一个人讲自己所知道的信息告诉第二个人，第二个人告诉第四个人，第三个人告诉第二个人，第四个人告诉第三个人，第五个人告诉第一个人。这样，仔细一看，2绝对不可能从1处获得自己的生日(游戏结束条件)</p>
<p>很容易看出，2将自己的生日告诉3，3告诉4，4告诉2，2获得了自己的生日，游戏结束，对于3和4来说也同样是这样。</p>
<p>所以，这个题简短来说，就是找到图中的最小环。</p>
<h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><p>首先，由于5—&gt;1—&gt;2并不构成圈，所以2不可能从1处获得自己的信息，所以干脆将5–&gt;1–&gt;2这条路去掉，这样，只需要统计形成圈的有几个人就行了，若有多个圈，找出最小的圈就好。</p>
<img src="/2017/01/19/NOIP-2015-Message/4.jpg" class="">

<h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><h4 id="存储数据，计算权值"><a href="#存储数据，计算权值" class="headerlink" title="存储数据，计算权值"></a>存储数据，计算权值</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>( i = <span class="number">1</span> ; i &lt;= n ; i++ )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;circle[i];</span><br><span class="line">    status[circle[i]]++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这一段意思很明显，输入数据，然后，记录每个人有几个人告诉他信息</p>
<h4 id="找到权值为0的人"><a href="#找到权值为0的人" class="headerlink" title="找到权值为0的人"></a>找到权值为0的人</h4><p>权值为0，也就是示范数据中的5号，没有任何人将自己的信息告诉他</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>( i = <span class="number">1</span> ; i &lt;=  n; i++ )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(status[i]==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        flag[j++]=i;</span><br><span class="line">        via[i]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>flag用于标记权值为0的人的编号</p>
<h4 id="去除权值为0的点"><a href="#去除权值为0的点" class="headerlink" title="去除权值为0的点"></a>去除权值为0的点</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>( i = <span class="number">0</span> ; i &lt; j ; i++ )</span><br><span class="line">&#123;</span><br><span class="line">    status[circle[flag[i]]]--;<span class="comment">//去掉某个权值为0的点之后，讲它所指向的人的权值减1</span></span><br><span class="line">    <span class="keyword">if</span>(status[circle[flag[i]]]==<span class="number">0</span>)<span class="comment">//若此人的权值减1之后，其权值为0，就将他的编号标记一下，同时更新j(x循环结束条件)的值</span></span><br><span class="line">    &#123;</span><br><span class="line">        flag[j++]=circle[flag[i]];</span><br><span class="line">        via[circle[flag[i]]]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="计算圈的成员数目，找到最小的圈"><a href="#计算圈的成员数目，找到最小的圈" class="headerlink" title="计算圈的成员数目，找到最小的圈"></a>计算圈的成员数目，找到最小的圈</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> ans=n,temp;</span><br><span class="line"><span class="keyword">for</span>( i = <span class="number">1</span> ; i &lt;= n ; i++ )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>( via[i]==<span class="number">0</span> &amp;&amp; circle[i]!=<span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        via[i]=<span class="number">1</span>;</span><br><span class="line">        temp=<span class="number">1</span>;</span><br><span class="line">        j=circle[i];</span><br><span class="line">        <span class="keyword">while</span>(!via[j])</span><br><span class="line">        &#123;</span><br><span class="line">            via[j]=<span class="number">1</span>;</span><br><span class="line">            j=circle[j];</span><br><span class="line">            temp++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(temp&lt;ans)</span><br><span class="line">            ans=temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="一点点小总结"><a href="#一点点小总结" class="headerlink" title="一点点小总结"></a>一点点小总结</h2><p>可能我的解析说得也并不比原文详细多少，<code>实际上我是跟着代码一步一步调试，才看懂原文的代码的</code>。</p>
<p>然后，我剔除了原文的队列，使用了一个数组代替，导致我不得不更新数组的有效长度，也就是文中的j值。反而让代码变得更加难以理解。不过，也照顾了一下不知道队列的小伙伴。<br>然后，原文使用了</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">memset</span>(to, <span class="number">0</span>, <span class="keyword">sizeof</span>(to));</span><br></pre></td></tr></table></figure>
<p>来将数组清零，有时候，会忘记这个函数的用法，所以我用了下面的办法</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">100</span>]=&#123;<span class="number">0</span>&#125;;</span><br></pre></td></tr></table></figure>
<p>这样，只要初始化数组的第一个元素为0，数组的其他元素会全都变成0。</p>
<blockquote class="blockquote-center">
            <p>生命重在折腾</p>

          </blockquote>]]></content>
      <tags>
        <tag>C</tag>
        <tag>C++</tag>
        <tag>NOIP</tag>
      </tags>
  </entry>
  <entry>
    <title>NOIP2016</title>
    <url>/2016/11/26/NOIP2016/</url>
    <content><![CDATA[<p>11月19和20号，NOIP2016竞赛复赛结束，抽空做了一下。</p>
<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>小南有一套可爱的玩具小人，它们有不同的职业。<br>有一天，这些小人把小南的眼镜藏了起来。小南发现玩具小人们围成了一个圈，它们有的面朝圈内，有的面朝圈外。如下图：</p>
<img src="/2016/11/26/NOIP2016/toy.jpg" class="">
<a id="more"></a>
<p>这时singer 告诉小南一个谜题：“眼镜藏在我左数第 3 个玩具小人的右数第 1 个玩<br>具小人的左数第 2 个玩具小人那里。 ”<br>小南发现，这个谜题中玩具小人的朝向非常关键，因为朝内和朝外的玩具小人的 左右方向是相反的：面朝圈内的玩具小人，它的左边是顺时针方向，右边是逆时针方向；而面向圈外的玩具小人，它的左边是逆时针方向，右边是顺时针方向。<br>小南一边艰难地辨认着玩具小人，一边数着：<br>“singer 朝内，左数第 3 个是archer。”<br>“archer 朝外，右数第 1 个是thinker。”<br>“thinker 朝外，左数第 2 个是writer。”<br>“所以眼镜藏在writer这里！”<br>虽然成功找回了眼镜，但小南并没有放心。如果下次有更多的玩具小人藏他的眼镜，或是谜题的长度更长，他可能就无法找到眼镜了。所以小南希望你写程序帮他解决类似的谜题。这样的谜题具体可以描述为：<br>有 n 个玩具小人围成一圈，己知它们的职业和朝向。 现在第 1 个玩具小人告诉小 南一个包含 m 条指令的谜题，其中第 i 条指令形如“左数/右数第 $s_i$ 个玩具小人”。 你需 要输出依次数完这些指令后，到达的玩具小人的职业。</p>
<h2 id="【输入格式说明】"><a href="#【输入格式说明】" class="headerlink" title="【输入格式说明】"></a>【输入格式说明】</h2><p>从文件 toy.in 中读入数据。 输入的第一行包含两个正整数 n, m ，表示玩具小人的个数和指令的条数。 接下来 n 行，每行包含一个整数和一个字符串，以逆时针为顺序给出每个玩具小 人的朝向和职业。其中 0 表示朝向圈内， 1 表示朝向圈外。保证不会出现其他的数。字 符串长度不超过 10 且仅由小写字母构成，字符串不为空，并且字符串两两不同。 整数 和字符串之间用一个空格隔开。 接下来 m 行，其中第 i 行包含两个整数 $a_i$, $s_i$ ，表示第 i 条指令。若 $a_i$ = 0 ，表示向 左数 $s_i$ 个人；若 $a_i$ = 1 ，表示向右数 $s_i$ 个人。保证 $a_i$ 不会出现其他的数， 1 ≤ $s_i$ &lt; n 。</p>
<h2 id="【输出格式说明】"><a href="#【输出格式说明】" class="headerlink" title="【输出格式说明】"></a>【输出格式说明】</h2><p>输出到文件 toy.out 中。 输出一个字符串，表示从第一个读入的小人开始，依次数 完 m 条指令后到达的小人的职业。</p>
<h2 id="样例数据"><a href="#样例数据" class="headerlink" title="样例数据"></a>样例数据</h2><p>样例数据1</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">输入数据：</span><br><span class="line">7 3 </span><br><span class="line">0 singer </span><br><span class="line">0 reader </span><br><span class="line">0 mengbier </span><br><span class="line">1 thinker </span><br><span class="line">1 archer </span><br><span class="line">0 writer </span><br><span class="line">1 mogician </span><br><span class="line">0 3 </span><br><span class="line">1 1 </span><br><span class="line">0 2</span><br><span class="line"></span><br><span class="line">输出数据:</span><br><span class="line">writer</span><br></pre></td></tr></table></figure>

<p>样例数据2</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">输入数据：</span><br><span class="line">10 10 </span><br><span class="line">1 c </span><br><span class="line">0 r </span><br><span class="line">0 p </span><br><span class="line">1 d </span><br><span class="line">1 e </span><br><span class="line">1 m </span><br><span class="line">1 t </span><br><span class="line">1 y </span><br><span class="line">1 u </span><br><span class="line">0 v </span><br><span class="line">1 7 </span><br><span class="line">1 1 </span><br><span class="line">1 4 </span><br><span class="line">0 5 </span><br><span class="line">0 3 </span><br><span class="line">0 1 </span><br><span class="line">1 6 </span><br><span class="line">1 2 </span><br><span class="line">0 8 </span><br><span class="line">0 4</span><br><span class="line"></span><br><span class="line">输出数据：</span><br><span class="line">y</span><br></pre></td></tr></table></figure>


<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Toy</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> pan;</span><br><span class="line">    <span class="keyword">char</span> job[<span class="number">10</span>];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Command</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> pan;</span><br><span class="line">    <span class="keyword">int</span> cursor;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,i=<span class="number">0</span>,x=<span class="number">0</span>,ans=<span class="number">0</span>,flag;</span><br><span class="line">    <span class="keyword">char</span> tmp;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Toy</span> <span class="title">toy</span>[<span class="title">n</span>];</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Command</span> <span class="title">command</span>[<span class="title">m</span>];</span></span><br><span class="line">    <span class="keyword">while</span>(i&lt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%c%s&quot;</span>,&amp;toy[i].pan,&amp;tmp,toy[i].job);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;command[i].pan&gt;&gt;command[i].cursor;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;m)</span><br><span class="line">    &#123;</span><br><span class="line">        flag=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(toy[x].pan==command[i].pan)</span><br><span class="line">        &#123;</span><br><span class="line">            flag=<span class="number">-1</span>;</span><br><span class="line">            ans=ans+command[i].cursor*(<span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            ans=ans+command[i].cursor;</span><br><span class="line">        x=x+command[i].cursor*flag;</span><br><span class="line">        x=x%n;</span><br><span class="line">        <span class="keyword">if</span>(x&lt;<span class="number">0</span>)</span><br><span class="line">            x=n+x;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    ans=ans%n;</span><br><span class="line">    <span class="keyword">if</span>(ans&lt;<span class="number">0</span>)</span><br><span class="line">        ans=n+ans;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;toy[ans].job&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>为了看起来复杂，我用了乱七八糟的东西(虽然实际上没什么大用)<br>所以又准备了下面的代码：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,i=<span class="number">0</span>,ans=<span class="number">0</span>,command_1,command_2,flag,x=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">int</span> pan[n];</span><br><span class="line">    <span class="keyword">char</span> job[n][<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">while</span>(i&lt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%s&quot;</span>,&amp;pan[i],job[i]);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;command_1,&amp;command_2);</span><br><span class="line">        flag=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(pan[x]==command_1)</span><br><span class="line">        &#123;</span><br><span class="line">            flag=<span class="number">-1</span>;</span><br><span class="line">            ans+=command_2*(<span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            ans+=command_2;</span><br><span class="line">        x=(x+command_2*flag)%n;</span><br><span class="line">        <span class="keyword">if</span>(x&lt;<span class="number">0</span>)</span><br><span class="line">            x=n+x;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    ans=ans%n;</span><br><span class="line">    <span class="keyword">if</span>(ans&lt;<span class="number">0</span>)</span><br><span class="line">        ans=n+ans;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,job[ans]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><p>这个嘛，暴力，顺着题目意思走一遍，不过不知道最后官方的测试数据拿来会不会超时。</p>
<blockquote class="blockquote-center">
            <p>生命在于折腾 </p>

          </blockquote>]]></content>
      <tags>
        <tag>C++</tag>
        <tag>竞赛</tag>
      </tags>
  </entry>
  <entry>
    <title>NOIP2016更改</title>
    <url>/2016/12/05/NOIP2016%E6%9B%B4%E6%94%B9/</url>
    <content><![CDATA[<p>12.07更新，全部测试数据通过。</p>
<p>在NOI官网拿到了NOIP2016的测试数据，顺便下载下来测试了一下之前写的代码。</p>
<a id="more"></a>
<p>在实际测试中遇到第十二组数据出错的情况，这个是我更改后的代码</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,i=<span class="number">0</span>,ans=<span class="number">0</span>,command_1,command_2,flag,x=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">int</span> pan[n];</span><br><span class="line">    <span class="keyword">char</span> job[n][<span class="number">15</span>];</span><br><span class="line">    <span class="keyword">while</span>(i&lt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%s&quot;</span>,&amp;pan[i],job[i]);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;command_1,&amp;command_2);</span><br><span class="line">        flag=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(pan[x]==command_1)</span><br><span class="line">        &#123;</span><br><span class="line">            flag=<span class="number">-1</span>;</span><br><span class="line">            ans+=command_2*(<span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            ans+=command_2;</span><br><span class="line">        x=(x+command_2*flag)%n;</span><br><span class="line">        <span class="keyword">if</span>(x&lt;<span class="number">0</span>)</span><br><span class="line">            x=n+x;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    ans=ans%n;</span><br><span class="line">    <span class="keyword">if</span>(ans&lt;<span class="number">0</span>)</span><br><span class="line">        ans=n+ans;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,job[ans]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>下面是原本的代码</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,i=<span class="number">0</span>,ans=<span class="number">0</span>,command_1,command_2,flag,x=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">int</span> pan[n];</span><br><span class="line">    <span class="keyword">char</span> job[n][<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">while</span>(i&lt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%s&quot;</span>,&amp;pan[i],job[i]);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;command_1,&amp;command_2);</span><br><span class="line">        flag=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(pan[x]==command_1)</span><br><span class="line">        &#123;</span><br><span class="line">            flag=<span class="number">-1</span>;</span><br><span class="line">            ans+=command_2*(<span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            ans+=command_2;</span><br><span class="line">        x=(x+command_2*flag)%n;</span><br><span class="line">        <span class="keyword">if</span>(x&lt;<span class="number">0</span>)</span><br><span class="line">            x=n+x;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    ans=ans%n;</span><br><span class="line">    <span class="keyword">if</span>(ans&lt;<span class="number">0</span>)</span><br><span class="line">        ans=n+ans;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,job[ans]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>把第九行job[n][10]变成了job[n][15]，解决第十二组数据的出错的问题，第十七组数据目前还未解决(有可能是数据本身是错的)。</p>
<p>第十二组的问题在于原本的字符数据太短，不足以储存“job”。  </p>
<p>这次是为了说明为什么数组短了之后为什么出错。</p>
<p>按照数组的定义，数组实际上是一串连续的变量；</p>
<p>若有这样一个数组char str[4][5];</p>
<p>当使用printf(“%s”,str[0]);输出二维数组，若数组内容如下</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">0</th>
<th align="center">1</th>
<th align="center">2</th>
<th align="center">3</th>
<th align="center">4</th>
</tr>
</thead>
<tbody><tr>
<td align="center">str[0]</td>
<td align="center">B</td>
<td align="center">D</td>
<td align="center">Z</td>
<td align="center">N</td>
<td align="center">\0</td>
</tr>
<tr>
<td align="center">str[1]</td>
<td align="center">X</td>
<td align="center">I</td>
<td align="center">D</td>
<td align="center">I</td>
<td align="center">\0</td>
</tr>
<tr>
<td align="center">str[2]</td>
<td align="center">A</td>
<td align="center">B</td>
<td align="center">C</td>
<td align="center">D</td>
<td align="center">\0</td>
</tr>
<tr>
<td align="center">str[3]</td>
<td align="center">H</td>
<td align="center">C</td>
<td align="center">X</td>
<td align="center">.</td>
<td align="center">\0</td>
</tr>
</tbody></table>
<p>输出内容自然是“BDZN”，若是二维数组内容如下</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">0</th>
<th align="center">1</th>
<th align="center">2</th>
<th align="center">3</th>
<th align="center">4</th>
</tr>
</thead>
<tbody><tr>
<td align="center">str[0]</td>
<td align="center">B</td>
<td align="center">D</td>
<td align="center">Z</td>
<td align="center">N</td>
<td align="center">H</td>
</tr>
<tr>
<td align="center">str[1]</td>
<td align="center">X</td>
<td align="center">I</td>
<td align="center">D</td>
<td align="center">I</td>
<td align="center">A</td>
</tr>
<tr>
<td align="center">str[2]</td>
<td align="center">A</td>
<td align="center">B</td>
<td align="center">C</td>
<td align="center">D</td>
<td align="center">E</td>
</tr>
<tr>
<td align="center">str[3]</td>
<td align="center">H</td>
<td align="center">C</td>
<td align="center">X</td>
<td align="center">.</td>
<td align="center">\0</td>
</tr>
</tbody></table>
<p>输出内容将会是”BDZNHXIDIAABCDEHCX.”，这个与格式化输出控制符”%s”有关系，函数判断一个字符数组的结尾是以“\0”来判断的，它会输出到第一个“\0”前面的那个字符，所以二维数组如果某行被占满，使用“%s”来输出这行内容时，会连带下一行也输出。解决办法是将数组长度增加，防止该行被非”\0”的字符占满。C++的cout与这个类似。</p>
<p>磨磨蹭蹭，12.7更新，调整了一下，发现第十七组的数据错误所在，直接贴出代码:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">&quot;toy.in&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">&quot;toy.out&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="built_in">stdout</span>);</span><br><span class="line">    <span class="keyword">int</span> n,m,i=<span class="number">0</span>,ans=<span class="number">0</span>,command_1,command_2;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">int</span> pan[n];</span><br><span class="line">    <span class="keyword">char</span> job[n][<span class="number">15</span>];</span><br><span class="line">    <span class="keyword">while</span>(i&lt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%s&quot;</span>,&amp;pan[i],job[i]);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;command_1,&amp;command_2);</span><br><span class="line">        command_2=command_2%n;</span><br><span class="line">        <span class="keyword">if</span>(pan[ans]==command_1) <span class="comment">//顺时针走</span></span><br><span class="line">        &#123;</span><br><span class="line">            ans-=command_2;</span><br><span class="line">            <span class="keyword">if</span>(ans&lt;=<span class="number">0</span>)</span><br><span class="line">                ans+=n;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>  <span class="comment">//逆时针针走</span></span><br><span class="line">        &#123;</span><br><span class="line">            ans+=command_2;</span><br><span class="line">            <span class="keyword">if</span>(ans&gt;=n)</span><br><span class="line">                ans-=n;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,job[ans]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>问题其实还是比较明显的，原本的代码:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(i&lt;m)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;command_1,&amp;command_2);</span><br><span class="line">    flag=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(pan[x]==command_1) <span class="comment">//顺时针</span></span><br><span class="line">    &#123;</span><br><span class="line">        flag=<span class="number">-1</span>;</span><br><span class="line">        ans+=command_2*(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="comment">//逆时针</span></span><br><span class="line">        ans+=command_2;</span><br><span class="line">    x=(x+command_2*flag)%n;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)</span><br><span class="line">        x=n+x;</span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>更改后的代码</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(i&lt;m)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;command_1,&amp;command_2);</span><br><span class="line">    command_2=command_2%n;</span><br><span class="line">    <span class="keyword">if</span>(pan[ans]==command_1) <span class="comment">//顺时针走</span></span><br><span class="line">    &#123;</span><br><span class="line">        ans-=command_2;</span><br><span class="line">        <span class="keyword">if</span>(ans&lt;=<span class="number">0</span>)</span><br><span class="line">            ans+=n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>  <span class="comment">//逆时针针走</span></span><br><span class="line">    &#123;</span><br><span class="line">        ans+=command_2;</span><br><span class="line">        <span class="keyword">if</span>(ans&gt;=n)</span><br><span class="line">            ans-=n;</span><br><span class="line">    &#125;</span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>问题在于<code>没有考虑越界问题</code>。</p>
<blockquote class="blockquote-center">
            <p>生命在于折腾 </p>

          </blockquote>]]></content>
  </entry>
  <entry>
    <title>POJ 1127</title>
    <url>/2017/12/03/POJ-1127/</url>
    <content><![CDATA[<p>从<code>《挑战程序设计竞赛》</code>里面扣了点东西(P250)</p>
<a id="more"></a>


<h2 id="Source-code"><a href="#Source-code" class="headerlink" title="Source code"></a>Source code</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> EPS = <span class="number">1e-10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">add</span><span class="params">(<span class="keyword">double</span> a, <span class="keyword">double</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">abs</span>(a + b) &lt; EPS * (<span class="built_in">abs</span>(a) + <span class="built_in">abs</span>(b))) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">double</span> x, y;</span><br><span class="line">	P() &#123;&#125;</span><br><span class="line">	P(<span class="keyword">double</span> x, <span class="keyword">double</span> y) : x(x), y(y) &#123;&#125;</span><br><span class="line"></span><br><span class="line">	P <span class="keyword">operator</span> + (P p)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> P(add(x, p.x), add(y, p.y));</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	P <span class="keyword">operator</span> - (P p)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> P(add(x, -p.x), add(y, -p.y));</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	P <span class="keyword">operator</span> * (<span class="keyword">double</span> d)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> P(x*d, y*d);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">double</span> <span class="title">dot</span><span class="params">(P p)</span>	<span class="comment">//内积</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> add(x*p.x, y*p.y);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">double</span> <span class="title">det</span><span class="params">(P p)</span>	<span class="comment">//外积</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> add(x*p.y, -y*p.x);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX_N = <span class="number">1000</span>;</span><br><span class="line">P p[MAX_N], q[MAX_N];</span><br><span class="line"><span class="keyword">int</span> m;</span><br><span class="line"><span class="keyword">int</span> a[MAX_N], b[MAX_N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> g[MAX_N][MAX_N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">on_seg</span><span class="params">(P p1, P p2, P q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> (p1 - q).det(p2 - q) == <span class="number">0</span> &amp;&amp; (p1 - q).dot(p2 - q) &lt;= <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">P <span class="title">intersection</span><span class="params">(P p1, P p2, P q1, P q2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> p1 + (p2 - p1) * ((q2 - q1).det(q1 - p1) / (q2 - q1).det(p2 - p1));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		g[i][i] = <span class="literal">true</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; ++j)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> ((p[i] - q[i]).det(p[j] - q[j]) == <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				g[i][j] = g[j][i] = on_seg(p[i], q[i], p[j]) </span><br><span class="line">						 || on_seg(p[i], q[i], q[j]) </span><br><span class="line">						 || on_seg(p[j], q[j], p[i]) </span><br><span class="line">						 || on_seg(p[j], q[j], q[i]);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				P r = intersection(p[i], q[i], p[j], q[j]);</span><br><span class="line">				g[i][j] = g[j][i] =on_seg(p[i], q[i], r) &amp;&amp; on_seg(p[j], q[j], r);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; n; ++k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; ++j)</span><br><span class="line">			&#123;</span><br><span class="line">				g[i][j] |= g[i][k] &amp;&amp; g[k][j];</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">puts</span>(g[a[i] - <span class="number">1</span>][b[i] - <span class="number">1</span>] ? <span class="string">&quot;CONNECTED&quot;</span> : <span class="string">&quot;NOT CONNECTED&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//freopen(&quot;data.txt&quot;, &quot;r&quot;, stdin);</span></span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; p[i].x &gt;&gt; p[i].y;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; q[i].x &gt;&gt; q[i].y;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; m;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; ++j)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; a[j] &gt;&gt; b[j];</span><br><span class="line">	&#125;</span><br><span class="line">	solve();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>里面引入的向量概念，使用向量有关的计算来判断两直线是否相交(on_seg)，算是和几何的一个应用吧。</p>
<h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">0 4 0 1 1 2 1 0</span><br><span class="line">4 1 2 3 3 4 2 1</span><br><span class="line">4</span><br><span class="line">1 2 1 4 2 3 2 4</span><br></pre></td></tr></table></figure>
<h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CONNECTED</span><br><span class="line">NOT CONNECTED</span><br><span class="line">CONNECTED</span><br><span class="line">NOT CONNECTED</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>PreArm:ACRO_BAL_ROLL/PITCH</title>
    <url>/2017/05/22/Pixhwak-error/</url>
    <content><![CDATA[<img src="/2017/05/22/Pixhwak-error/1.jpg" class="" title="A error">
<a id="more"></a>
<h2 id="症状"><a href="#症状" class="headerlink" title="症状"></a>症状</h2><p>开机之后闪黄灯(Pixhawk闪蓝灯或者绿灯表示可以解锁)，用数据线或者数传将电脑和飞控连接之后，在Mission Planner可以看到如下提示信息:</p>
<img src="/2017/05/22/Pixhwak-error/2.jpg" class="">
<h2 id="解决办法——Disabling-the-Pre-arm-Safety-Check"><a href="#解决办法——Disabling-the-Pre-arm-Safety-Check" class="headerlink" title="解决办法——Disabling the Pre-arm Safety Check"></a>解决办法——<a href="http://ardupilot.org/copter/docs/prearm_safety_check.html">Disabling the Pre-arm Safety Check</a></h2><p>在网页里面已经说了解决办法：</p>
<img src="/2017/05/22/Pixhwak-error/4.jpg" class="">
<p>可能是Mission Planner版本不一样，我所使用的版本要这样:</p>
<img src="/2017/05/22/Pixhwak-error/3.jpg" class="">
<p>将红圈位置的选项勾选成如图样子，点击<code>写入参数</code>就好了，可以解锁happy了。</p>
<blockquote class="blockquote-center">
            <p>生命重在折腾 </p>

          </blockquote>
]]></content>
      <tags>
        <tag>无人机</tag>
        <tag>tecnology</tag>
      </tags>
  </entry>
  <entry>
    <title>去掉Mx player的广告</title>
    <url>/2018/04/01/Remove-the-ads-of-Mx-player/</url>
    <content><![CDATA[<p>mx player就安卓端来说还是很棒的应用的，可是pro版本售价要6$，汇率一换过来就贵了。<br>想了想，手动给它去广告好了，网上的破解版还是不放心。<br>App展示广告，得有一个地方给它下载广告，阻止App连接相应广告站点就可以了，目标则是找出App用的广告站点。<br>找到的mx player广告站点用的是谷歌，把以下内容添加到手机hosts文件就可以了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1 googleads.g.doubleclick.net</span><br></pre></td></tr></table></figure>

<p>下面是找到站点的过程。</p>
<a id="more"></a>

<h2 id="配置-Fildder"><a href="#配置-Fildder" class="headerlink" title="配置 Fildder"></a>配置 Fildder</h2><p>到<a href="https://www.telerik.com/download/fiddler">https://www.telerik.com/download/fiddler</a>下载好Fiddler，打开之后，勾选Tools-&gt;&gt;Options-&gt;&gt;HTTPS允许https和Connetions下面的允许局域网远程连接，如下图</p>
<img src="/2018/04/01/Remove-the-ads-of-Mx-player/1.png" class="">
<img src="/2018/04/01/Remove-the-ads-of-Mx-player/2.png" class="">

<p>然后打开<code>http://localhost:8888</code>，下载证书，双击导入。</p>
<img src="/2018/04/01/Remove-the-ads-of-Mx-player/3.png" class="">

<h2 id="配置手机"><a href="#配置手机" class="headerlink" title="配置手机"></a>配置手机</h2><p>为了能对https进行抓包，还得在手机上安装证书，把证书拷贝或发送到手机内。<br>对于MIUI来说，在<code>设置--&gt;更多设置--&gt;系统安全--&gt;从存储设备安装</code>，然后找到相应的证书就可以安装了，安装后手机会提示网络受到监控。<br>如果提示需要启用文档，则在<code>设置--&gt;更多应用</code>，点一下右上角的三个点，选中显示所有应用，搜索文档，然后点进去就可以启用了。</p>
<img src="/2018/04/01/Remove-the-ads-of-Mx-player/4.png" class="">

<p>这个时候，打开WLAN设置，选中连接的wifi，将代理设置成电脑的IP地址，代理端口为8888</p>
<h2 id="开始抓包"><a href="#开始抓包" class="headerlink" title="开始抓包"></a>开始抓包</h2><p>这个时候，在手机上打开mx plyer，可以在Fiddler上看到很多信息</p>
<img src="/2018/04/01/Remove-the-ads-of-Mx-player/5.jpg" class="">

<p>仔细观看域名和访问的数据，在mx player上的广告是首屏幕启动广告、视频浏览界面的广告和播放视频时的广告。观察url中某些访问了jpg资源的域名，在电脑上屏蔽掉相应的域名，最后找到了<code>googleads.g.doubleclick.net</code>，把这个地址在hosts文件内定向到127.0.0.1，mx player的广告消除。（谷歌老大，对不起你了，我会愧疚的(。・∀・)ノ）</p>
<p>附一份手机上常用的用于屏蔽广告的hosts</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#by wenxibuding QQ410154425</span></span><br><span class="line"><span class="comment">#url=http://www.miui.com/thread-11958646-1-1.html</span></span><br><span class="line"></span><br><span class="line">127.0.0.1       localhost</span><br><span class="line">::1             ip6-localhost</span><br><span class="line"></span><br><span class="line"><span class="comment">#xiaomi/miui/qqtv/youku/pptv/letv/sohutv/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#mstat/report</span></span><br><span class="line">127.0.0.1 aeventlog.beacon.qq.com</span><br><span class="line">127.0.0.1 android.rqd.qq.com</span><br><span class="line">127.0.0.1 astrategy.beacon.qq.com</span><br><span class="line">127.0.0.1 eventlog.beacon.qq.com</span><br><span class="line">127.0.0.1 monitor.uu.qq.com</span><br><span class="line">127.0.0.1 omgmta.qq.com</span><br><span class="line">127.0.0.1 omgmta1.qq.com</span><br><span class="line">127.0.0.1 oth.eve.mdt.qq.com</span><br><span class="line">127.0.0.1 oth.str.mdt.qq.com</span><br><span class="line">127.0.0.1 oth.update.mdt.qq.com</span><br><span class="line">127.0.0.1 pingma.qq.com</span><br><span class="line">127.0.0.1 sngmta.qq.com</span><br><span class="line">127.0.0.1 strategy.beacon.qq.com</span><br><span class="line"><span class="comment">#qq-1</span></span><br><span class="line">127.0.0.1 dp3.qq.com</span><br><span class="line">127.0.0.1 imc.l.qq.com</span><br><span class="line"><span class="comment">#qq-ad</span></span><br><span class="line">127.0.0.1 ad.qq.com</span><br><span class="line">127.0.0.1 ad.qun.qq.com</span><br><span class="line">127.0.0.1 adping.qq.com</span><br><span class="line">127.0.0.1 adpm.app.qq.com</span><br><span class="line">127.0.0.1 adrdir.qq.com</span><br><span class="line">127.0.0.1 adsclick.qq.com</span><br><span class="line">127.0.0.1 adsfile.qq.com</span><br><span class="line">127.0.0.1 adsgroup.qq.com</span><br><span class="line">127.0.0.1 adshmct.qq.com</span><br><span class="line">127.0.0.1 adshmmsg.qq.com</span><br><span class="line">127.0.0.1 adslvfile.qq.com</span><br><span class="line">127.0.0.1 adslvseed.qq.com</span><br><span class="line">127.0.0.1 adsqqclick.qq.com</span><br><span class="line">127.0.0.1 adstextview.qq.com</span><br><span class="line">127.0.0.1 adsview.qq.com</span><br><span class="line">127.0.0.1 adsview2.qq.com</span><br><span class="line">127.0.0.1 adv.app.qq.com</span><br><span class="line">127.0.0.1 adver.qq.com</span><br><span class="line">127.0.0.1 analy.qq.com</span><br><span class="line">127.0.0.1 d3g.qq.com</span><br><span class="line">127.0.0.1 j.wit.qq.com</span><br><span class="line">127.0.0.1 jqmt.qq.com</span><br><span class="line">127.0.0.1 jsqmt.qq.com</span><br><span class="line">127.0.0.1 mini2015.qq.com</span><br><span class="line">127.0.0.1 qqshow2-item.qq.com</span><br><span class="line">127.0.0.1 setting.snswin.qq.com</span><br><span class="line">127.0.0.1 tj.video.qq.com</span><br><span class="line">127.0.0.1 updatecenter.qq.com</span><br><span class="line">127.0.0.1 video.ureport.push.qq.com</span><br><span class="line">127.0.0.1 video.wap.mpush.qq.com</span><br><span class="line">127.0.0.1 wap.mpush.qq.com</span><br><span class="line"><span class="comment">#qq-t</span></span><br><span class="line">127.0.0.1 ta.qq.com</span><br><span class="line">127.0.0.1 tajs.qq.com</span><br><span class="line">127.0.0.1 tcss.qq.com</span><br><span class="line">127.0.0.1 p.tencentmind.com</span><br><span class="line"><span class="comment">#qq-e</span></span><br><span class="line">127.0.0.1 e.qq.com</span><br><span class="line">127.0.0.1 cm.e.qq.com</span><br><span class="line">127.0.0.1 sdk.e.qq.com</span><br><span class="line"><span class="comment">#qq-gdt</span></span><br><span class="line">127.0.0.1 c.gdt.qq.com</span><br><span class="line">127.0.0.1 d.gdt.qq.com</span><br><span class="line">127.0.0.1 i.gdt.qq.com</span><br><span class="line">127.0.0.1 mi.gdt.qq.com</span><br><span class="line">127.0.0.1 q.i.gdt.qq.com</span><br><span class="line">127.0.0.1 rm.gdt.qq.com</span><br><span class="line">127.0.0.1 t.gdt.qq.com</span><br><span class="line">127.0.0.1 v.gdt.qq.com</span><br><span class="line">127.0.0.1 win.gdt.qq.com</span><br><span class="line"><span class="comment">#qq-gtimg</span></span><br><span class="line">127.0.0.1 beacon.gtimg.com</span><br><span class="line">127.0.0.1 bla.gtimg.com</span><br><span class="line">127.0.0.1 lb.gtimg.com</span><br><span class="line">127.0.0.1 pgdt.gtimg.cn</span><br><span class="line">127.0.0.1 ra.gtimg.com</span><br><span class="line">127.0.0.1 wa.gtimg.com</span><br><span class="line">127.0.0.1 wb.gtimg.com</span><br><span class="line"><span class="comment">#qq-l</span></span><br><span class="line">127.0.0.1 bs.l.qq.com</span><br><span class="line">127.0.0.1 c2.l.qq.com</span><br><span class="line">127.0.0.1 cb.l.qq.com</span><br><span class="line">127.0.0.1 cm.l.qq.com</span><br><span class="line">127.0.0.1 hm.l.qq.com</span><br><span class="line">127.0.0.1 l.qq.com</span><br><span class="line">127.0.0.1 l2.l.qq.com</span><br><span class="line">127.0.0.1 lb.l.qq.com</span><br><span class="line">127.0.0.1 livec.l.qq.com</span><br><span class="line">127.0.0.1 livem.l.qq.com</span><br><span class="line">127.0.0.1 livep.l.qq.com</span><br><span class="line">127.0.0.1 lives.l.qq.com</span><br><span class="line">127.0.0.1 ls.l.qq.com</span><br><span class="line">127.0.0.1 p2.l.qq.com</span><br><span class="line">127.0.0.1 p3.l.qq.com</span><br><span class="line">127.0.0.1 t.l.qq.com</span><br><span class="line">127.0.0.1 vd.l.qq.com</span><br><span class="line">127.0.0.1 w.l.qq.com</span><br><span class="line"><span class="comment">#down-</span></span><br><span class="line">127.0.0.1 scdown.qq.com</span><br><span class="line">127.0.0.1 download.sj.qq.com</span><br><span class="line">127.0.0.1 c.gj.qq.com</span><br><span class="line">127.0.0.1 t.sj.qq.com</span><br><span class="line">127.0.0.1 ws.sj.qq.com</span><br><span class="line"></span><br><span class="line"><span class="comment">#http://tv.qq.com/</span></span><br><span class="line">127.0.0.1 andrqd.play.aiseet.atianqi.com</span><br><span class="line">127.0.0.1 otheve.play.aiseet.atianqi.com</span><br><span class="line">127.0.0.1 othstr.play.aiseet.atianqi.com</span><br><span class="line">127.0.0.1 omgmta.play.aiseet.atianqi.com</span><br><span class="line">127.0.0.1 news-l.play.aiseet.atianqi.com</span><br><span class="line">127.0.0.1 p-l.play.aiseet.atianqi.com</span><br><span class="line">127.0.0.1 t-l.play.aiseet.atianqi.com</span><br><span class="line"><span class="comment">#v.qq.com</span></span><br><span class="line">127.0.0.1 news-l.play.ott.video.qq.com</span><br><span class="line">127.0.0.1 omgmta.play.ott.video.qq.com</span><br><span class="line">127.0.0.1 livep.l.ott.video.qq.com</span><br><span class="line">127.0.0.1 lives.l.ott.video.qq.com</span><br><span class="line"><span class="comment">#tv.qq.com</span></span><br><span class="line">127.0.0.1 aiseet.aa.atianqi.com</span><br><span class="line">127.0.0.1 dp3.play.aiseet.atianqi.com</span><br><span class="line">127.0.0.1 livep.l.aiseet.atianqi.com</span><br><span class="line">127.0.0.1 lives.l.aiseet.atianqi.com</span><br><span class="line">127.0.0.1 vmindhls.tc.qq.com</span><br><span class="line">127.0.0.1 monitor-uu.play.aiseet.atianqi.com</span><br><span class="line">127.0.0.1 sdkconfig.play.aiseet.atianqi.com</span><br><span class="line">127.0.0.1 livew.l.qq.com</span><br><span class="line">127.0.0.1 c.l.qq.com</span><br><span class="line">127.0.0.1 mdevstat.qqlive.qq.com</span><br><span class="line"></span><br><span class="line"><span class="comment">#http://pd.youku.com/CIBN</span></span><br><span class="line">127.0.0.1 g.dtv.cn.miaozhen.com</span><br><span class="line">127.0.0.1 xtrader-mipdx.cn.miaozhen.com</span><br><span class="line">127.0.0.1 ssv.admaster.com.cn</span><br><span class="line">127.0.0.1 vyk.admaster.com.cn</span><br><span class="line">127.0.0.1 ipm.atm.cp31.ott.cibntv.net</span><br><span class="line">127.0.0.1 val.atm.cp31.ott.cibntv.net</span><br><span class="line">127.0.0.1 valf.atm.cp31.ott.cibntv.net</span><br><span class="line"><span class="comment">#http://m.youku.com/</span></span><br><span class="line">127.0.0.1 adp.atm.youku.com</span><br><span class="line">127.0.0.1 iyes.youku.com</span><br><span class="line">127.0.0.1 m.atm.youku.com</span><br><span class="line">127.0.0.1 mf.atm.youku.com</span><br><span class="line">127.0.0.1 mobilemsg.youku.com</span><br><span class="line">127.0.0.1 push.m.youku.com</span><br><span class="line"><span class="comment">#http://www.youku.com/</span></span><br><span class="line">127.0.0.1 bsv.atm.youku.com</span><br><span class="line">127.0.0.1 count.atm.youku.com</span><br><span class="line">127.0.0.1 dmapp.youku.com</span><br><span class="line">127.0.0.1 html.atm.youku.com</span><br><span class="line">127.0.0.1 ipm.atm.youku.com</span><br><span class="line">127.0.0.1 myes.youku.com</span><br><span class="line">127.0.0.1 r.l.youku.com</span><br><span class="line">127.0.0.1 service.danmu.youku.com</span><br><span class="line">127.0.0.1 statis.mobile.youku.com</span><br><span class="line">127.0.0.1 v2html.atm.youku.com</span><br><span class="line">127.0.0.1 val.atm.youku.com</span><br><span class="line">127.0.0.1 valb.atm.youku.com</span><br><span class="line">127.0.0.1 valc.atm.youku.com</span><br><span class="line">127.0.0.1 valf.atm.youku.com</span><br><span class="line">127.0.0.1 valp.atm.youku.com</span><br><span class="line">127.0.0.1 valt.atm.youku.com</span><br><span class="line"><span class="comment">#youku</span></span><br><span class="line">127.0.0.1 ad.api.3g.tudou.com</span><br><span class="line">127.0.0.1 ad.api.3g.youku.com</span><br><span class="line">127.0.0.1 ad.api.mobile.youku.com</span><br><span class="line">127.0.0.1 b.smartvideo.youku.com</span><br><span class="line">127.0.0.1 c.yes.youku.com</span><br><span class="line">127.0.0.1 cm.atm.youku.com</span><br><span class="line">127.0.0.1 cm.miaozhen.atm.youku.com</span><br><span class="line">127.0.0.1 guanggaoad.youku.com</span><br><span class="line">127.0.0.1 lstat.youku.com</span><br><span class="line">127.0.0.1 m.yes.youku.com</span><br><span class="line">127.0.0.1 mb.atm.youku.com</span><br><span class="line">127.0.0.1 mi.atm.youku.com</span><br><span class="line">127.0.0.1 miaozhen.atm.youku.com</span><br><span class="line">127.0.0.1 mo.atm.youku.com</span><br><span class="line">127.0.0.1 mp.atm.youku.com</span><br><span class="line">127.0.0.1 notify.youku.com</span><br><span class="line">127.0.0.1 passport-log.youku.com</span><br><span class="line">127.0.0.1 player.lstat.youku.com</span><br><span class="line">127.0.0.1 s.p.youku.com</span><br><span class="line">127.0.0.1 sdk.api.gamex.mobile.youku.com</span><br><span class="line">127.0.0.1 static.atm.youku.com</span><br><span class="line">127.0.0.1 store.tv.api.3g.youku.com</span><br><span class="line">127.0.0.1 store.xl.api.3g.youku.com</span><br><span class="line">127.0.0.1 urchin.lstat.youku.com</span><br><span class="line">127.0.0.1 valo.atm.youku.com</span><br><span class="line">127.0.0.1 wan.youku.com</span><br><span class="line"><span class="comment">#youku-area</span></span><br><span class="line">127.0.0.1 cms.laifeng.com</span><br><span class="line">127.0.0.1 ld.kuaigames.com</span><br><span class="line">127.0.0.1 rd.kuaigames.com</span><br><span class="line">127.0.0.1 g.x.cn.majorserving.com</span><br><span class="line">127.0.0.1 mon.majorserving.com</span><br><span class="line">127.0.0.1 l.ftx.fancyapi.com</span><br><span class="line">127.0.0.1 w.fancyapi.com</span><br><span class="line">127.0.0.1 l.fancyapi.com</span><br><span class="line">127.0.0.1 api.shuzilm.cn</span><br><span class="line">127.0.0.1 daa.shuzilm.cn</span><br><span class="line">127.0.0.1 www.shuzilm.cn</span><br><span class="line">127.0.0.1 cb.lomark.cn</span><br><span class="line">127.0.0.1 reply.lomark.cn</span><br><span class="line">127.0.0.1 rm.lomark.cn</span><br><span class="line">127.0.0.1 p-cn.acxiom-online.com</span><br><span class="line">127.0.0.1 hp.smiler-ad.com</span><br><span class="line">127.0.0.1 static8.pmadx.com</span><br><span class="line">127.0.0.1 www.bfshan.cn</span><br><span class="line"></span><br><span class="line"><span class="comment">#miui-xiaomi</span></span><br><span class="line">127.0.0.1 api.ad.xiaomi.com</span><br><span class="line">127.0.0.1 cdn.ad.xiaomi.com</span><br><span class="line">127.0.0.1 e.ad.xiaomi.com</span><br><span class="line">127.0.0.1 log.ad.xiaomi.com</span><br><span class="line">127.0.0.1 new.api.ad.xiaomi.com</span><br><span class="line">127.0.0.1 sdkconfig.ad.xiaomi.com</span><br><span class="line">127.0.0.1 ssp.ad.xiaomi.com</span><br><span class="line">127.0.0.1 test.ad.xiaomi.com</span><br><span class="line">127.0.0.1 test.e.ad.xiaomi.com</span><br><span class="line">127.0.0.1 zeus.ad.xiaomi.com</span><br><span class="line">127.0.0.1 test.zeus.ad.xiaomi.com</span><br><span class="line"><span class="comment">#miui-stat</span></span><br><span class="line">127.0.0.1 a.stat.xiaomi.com</span><br><span class="line">127.0.0.1 abtest.mistat.xiaomi.com</span><br><span class="line">127.0.0.1 data.mistat.xiaomi.com</span><br><span class="line">127.0.0.1 storeconfig.mistat.xiaomi.com</span><br><span class="line"><span class="comment">#miui--1</span></span><br><span class="line">127.0.0.1 shenghuo.xiaomi.com</span><br><span class="line"><span class="comment">#miui-download</span></span><br><span class="line">127.0.0.1 etl.xlmc.sandai.net</span><br><span class="line"><span class="comment">#miui-file</span></span><br><span class="line">127.0.0.1 api.tw06.xlmc.sec.miui.com</span><br><span class="line">127.0.0.1 etl.xlmc.sec.miui.com</span><br><span class="line">127.0.0.1 fb.xk.miui.com</span><br><span class="line"><span class="comment">#miui-game</span></span><br><span class="line">127.0.0.1 notice.game.xiaomi.com</span><br><span class="line">127.0.0.1 ppurifier.game.xiaomi.com</span><br><span class="line"><span class="comment">#miui-sec</span></span><br><span class="line">127.0.0.1 adv.sec.miui.com</span><br><span class="line">127.0.0.1 tracking.miui.com</span><br><span class="line">127.0.0.1 beha.ksmobile.com</span><br><span class="line">127.0.0.1 up.cm.ksmobile.com</span><br><span class="line"><span class="comment">#miui-weather</span></span><br><span class="line">127.0.0.1 wtradv.market.xiaomi.com</span><br><span class="line"><span class="comment">#miui-wps</span></span><br><span class="line">127.0.0.1 cloudservice13.kingsoft-office-service.com</span><br><span class="line">127.0.0.1 counter.kingsoft.com</span><br><span class="line">127.0.0.1 event.ksosoft.com</span><br><span class="line">127.0.0.1 uid.ksosoft.com</span><br><span class="line">127.0.0.1 ups.ksmobile.net</span><br><span class="line">127.0.0.1 ws.ksmobile.net</span><br><span class="line"><span class="comment">#mitv</span></span><br><span class="line">127.0.0.1 bss.pandora.xiaomi.com</span><br><span class="line">127.0.0.1 de.pandora.xiaomi.com</span><br><span class="line">127.0.0.1 dvb.pandora.xiaomi.com</span><br><span class="line">127.0.0.1 jellyfish.pandora.xiaomi.com</span><br><span class="line">127.0.0.1 stat.pandora.xiaomi.com</span><br><span class="line">127.0.0.1 irs01.com</span><br><span class="line"></span><br><span class="line"><span class="comment">#http://app.pptv.com/pg_get_tv</span></span><br><span class="line">127.0.0.1 de.as.cp61.ott.cibntv.net</span><br><span class="line">127.0.0.1 clickc.admaster.com.cn</span><br><span class="line">127.0.0.1 vpptv.admaster.com.cn</span><br><span class="line">127.0.0.1 pptv.m.cn.miaozhen.com</span><br><span class="line">127.0.0.1 tpptv.ipdx.cn.miaozhen.com</span><br><span class="line">127.0.0.1 ads.aplus.pptv.com</span><br><span class="line">127.0.0.1 app.aplus.pptv.com</span><br><span class="line">127.0.0.1 as.aplus.pptv.com</span><br><span class="line">127.0.0.1 de.as.pptv.com</span><br><span class="line">127.0.0.1 img1.g.pptv.com</span><br><span class="line">127.0.0.1 img2.g.pptv.com</span><br><span class="line">127.0.0.1 img3.g.pptv.com</span><br><span class="line">127.0.0.1 jp.as.pptv.com</span><br><span class="line">127.0.0.1 static.g.pptv.com</span><br><span class="line">127.0.0.1 tj.g.pptv.com</span><br><span class="line">127.0.0.1 asimgs.pplive.cn</span><br><span class="line">127.0.0.1 ads.data.pplive.com</span><br><span class="line">127.0.0.1 gas.data.pplive.com</span><br><span class="line">127.0.0.1 plt.data.pplive.com</span><br><span class="line">127.0.0.1 web.data.pplive.com</span><br><span class="line">127.0.0.1 apm.suning.cn</span><br><span class="line">127.0.0.1 click.suning.cn</span><br><span class="line">127.0.0.1 dfp.suning.com</span><br><span class="line">127.0.0.1 ssac.suning.com</span><br><span class="line"></span><br><span class="line"><span class="comment">#letv</span></span><br><span class="line">127.0.0.1 api.game.letvstore.com</span><br><span class="line">127.0.0.1 dev.dc.letv.com</span><br><span class="line">127.0.0.1 msg.m.letv.com</span><br><span class="line">127.0.0.1 n.mark.letv.com</span><br><span class="line">127.0.0.1 static.app.m.letv.com</span><br><span class="line">127.0.0.1 test.ark.letv.com</span><br><span class="line"><span class="comment">#sohu-video</span></span><br><span class="line">127.0.0.1 agn.aty.sohu.com</span><br><span class="line">127.0.0.1 f.aty.sohu.com</span><br><span class="line">127.0.0.1 m.aty.sohu.com</span><br><span class="line">127.0.0.1 mmg.aty.sohu.com</span><br><span class="line">127.0.0.1 p.aty.sohu.com</span><br><span class="line">127.0.0.1 pg.aty.sohu.com</span><br><span class="line">127.0.0.1 pm.aty.sohu.com</span><br><span class="line">127.0.0.1 v.aty.sohu.com</span><br><span class="line">127.0.0.1 vg.aty.sohu.com</span><br><span class="line">127.0.0.1 vm.aty.sohu.com</span><br><span class="line">127.0.0.1 api.danmu.tv.sohu.com</span><br><span class="line">127.0.0.1 download.wan.sohu.com</span><br><span class="line">127.0.0.1 da.mmarket.com</span><br><span class="line">127.0.0.1 sohu.irs01.com</span><br><span class="line"></span><br><span class="line"><span class="comment">#google ads</span></span><br><span class="line">127.0.0.1 googleads.g.doubleclick.net</span><br><span class="line">127.0.0.1 ads.nexage.com</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Configure Git to use a proxy</title>
    <url>/2017/10/13/Set-proxy-for-git/</url>
    <content><![CDATA[<p>From: <a href="https://gist.github.com/evantoli/f8c23a37eb3558ab8765">https://gist.github.com/evantoli/f8c23a37eb3558ab8765</a></p>
<h2 id="In-Brief"><a href="#In-Brief" class="headerlink" title="In Brief"></a>In Brief</h2><p>You may need to configure a proxy server if you’re having trouble cloning<br>or fetching from a remote repository or getting an error<br>like <code>unable to access &#39;...&#39; Couldn&#39;t resolve host &#39;...&#39;</code>.</p>
<a id="more"></a>
<p>Consider something like:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global http.proxy http:&#x2F;&#x2F;proxyUsername:proxyPassword@proxy.server.com:port</span><br></pre></td></tr></table></figure>

<p>Or for a specific domain, something like:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global http.https:&#x2F;&#x2F;domain.com.proxy http:&#x2F;&#x2F;proxyUsername:proxyPassword@proxy.server.com:port</span><br><span class="line">git config --global http.https:&#x2F;&#x2F;domain.com.sslVerify false</span><br></pre></td></tr></table></figure>

<p>Setting <code>http.&lt;url&gt;.sslVerify</code> to <code>false</code> may help you quickly get going if your workplace<br>employs man-in-the-middle HTTPS proxying. Longer term, you could get the<br>root CA that they are applying to the certificate chain<br>and specify it with either <code>http.sslCAInfo</code> or <code>http.sslCAPath</code>.</p>
<p>See also the <a href="https://git-scm.com/docs/git-config">git-config</a> documentation, especially the following<br>sections if you’re having HTTPS/SSL issues</p>
<ul>
<li><code>http.sslVerify</code></li>
<li><code>http.sslCAInfo</code></li>
<li><code>http.sslCAPath</code></li>
<li><code>http.sslCert</code></li>
<li><code>http.sslKey</code></li>
<li><code>http.sslCertPasswordProtected</code></li>
</ul>
<h2 id="In-Detail"><a href="#In-Detail" class="headerlink" title="In Detail"></a>In Detail</h2><h3 id="Configure-the-proxy"><a href="#Configure-the-proxy" class="headerlink" title="Configure the proxy"></a>Configure the proxy</h3><p>You can configure these globally in your user <code>~/.gitconfig</code> file using the <code>--global</code> switch, or local to a repository in its <code>.git/config</code> file.</p>
<h4 id="Setting-a-global-proxy"><a href="#Setting-a-global-proxy" class="headerlink" title="Setting a global proxy"></a>Setting a global proxy</h4><p>Configure a global proxy if all access to all repos require this proxy</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global http.proxy http:&#x2F;&#x2F;proxyUsername:proxyPassword@proxy.server.com:port</span><br></pre></td></tr></table></figure>
<h4 id="Setting-a-global-socks5-proxy"><a href="#Setting-a-global-socks5-proxy" class="headerlink" title="Setting a global socks5 proxy"></a>Setting a global socks5 proxy</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global http.proxy &#39;socks5:&#x2F;&#x2F;server:port&#39;</span><br></pre></td></tr></table></figure>
<h4 id="URL-specific-proxy"><a href="#URL-specific-proxy" class="headerlink" title="URL specific proxy"></a>URL specific proxy</h4><p>If you wish to specify that a proxy should be used for just<br>some URLs that specify the URL as a git config subsection<br>using <code>http.&lt;url&gt;.key</code> notation:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global http.https:&#x2F;&#x2F;domain.com.proxy http:&#x2F;&#x2F;proxyUsername:proxyPassword@proxy.server.com:port</span><br></pre></td></tr></table></figure>

<p>Which will result in the following in the <code>~/.gitconfig</code> file:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[http]</span><br><span class="line">[http &quot;https:&#x2F;&#x2F;domain.com&quot;]</span><br><span class="line">	proxy &#x3D; http:&#x2F;&#x2F;proxyUsername:proxyPassword@proxy.server.com:port</span><br></pre></td></tr></table></figure>

<h4 id="Handle-subsequent-SSL-protocol-errors"><a href="#Handle-subsequent-SSL-protocol-errors" class="headerlink" title="Handle subsequent SSL protocol errors"></a>Handle subsequent SSL protocol errors</h4><p>If you’re still having trouble cloning or fetching and are now getting<br>an <code>unable to access &#39;https://...&#39;: Unknown SSL protocol error in connection to ...:443</code> then<br>you may decide to switch off SSL verification for the single operation<br>by using the <code>-c http.sslVerify=false</code> option</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git -c http.sslVerify&#x3D;false clone https:&#x2F;&#x2F;domain.com&#x2F;path&#x2F;to&#x2F;git</span><br></pre></td></tr></table></figure>

<p>Once cloned, you may decide set this for just this cloned<br>repository’s <code>.git/config</code> by doing. Notice the absence of the <code>--global</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config http.sslVerify false</span><br></pre></td></tr></table></figure>

<p>If you choose to make it global then limit it to a URL using<br>the <code>http.&lt;url&gt;.sslVerify</code> notation: </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global http.https:&#x2F;&#x2F;domain.com.sslVerify false</span><br></pre></td></tr></table></figure>

<p>Which will result in the following in the <code>~/.gitconfig</code> file:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[http]</span><br><span class="line">[http &quot;https:&#x2F;&#x2F;domain.com&quot;]</span><br><span class="line">	proxy &#x3D; http:&#x2F;&#x2F;proxyUsername:proxyPassword@proxy.server.com:port</span><br><span class="line">	sslVerify &#x3D; false</span><br></pre></td></tr></table></figure>

<h3 id="Show-current-configuration"><a href="#Show-current-configuration" class="headerlink" title="Show current configuration"></a>Show current configuration</h3><p>To show the current configuration of all <code>http</code> sections</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global --get-regexp http.*</span><br></pre></td></tr></table></figure>

<p>If you are in a locally cloned repository folder then you drop<br>the <code>--global</code> and see all current config:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --get-regexp http.*</span><br></pre></td></tr></table></figure>

<h3 id="Unset-a-proxy-or-SSL-verification"><a href="#Unset-a-proxy-or-SSL-verification" class="headerlink" title="Unset a proxy or SSL verification"></a>Unset a proxy or SSL verification</h3><p>Use the <code>--unset</code> flag to remove configuration being specific about the<br>property – for example whether it was <code>http.proxy</code> or <code>http.&lt;url&gt;.proxy</code>.<br>Consider using any of the following:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global --unset http.proxy</span><br><span class="line">git config --global --unset http.https:&#x2F;&#x2F;domain.com.proxy</span><br><span class="line"></span><br><span class="line">git config --global --unset http.sslVerify</span><br><span class="line">git config --global --unset http.https:&#x2F;&#x2F;domain.com.sslVerify</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Visual Code</title>
    <url>/2017/05/14/Visual-Code/</url>
    <content><![CDATA[<img src="/2017/05/14/Visual-Code/1.jpg" class="" title="帮巨硬打个广告">
<a id="more"></a>
<p>Visual Code，一个优秀的编辑器。<br>当然了，编辑器很多，从Windows内置的nodepad，到Atom，再到notepad++，都是不错的，但是，我觉得Visual Code好看啊。<br>来张照骗</p>
<img src="/2017/05/14/Visual-Code/visual_code.jpg" class="" title="实时渲染Markdown">
<p>当然了，好事做到底，丢一个编辑器的<a href="http://suppermary.cc/src/visual%20code/keyboard-shortcuts-visual-code.pdf">快捷键表</a>，丢掉鼠标，啪啪啪敲键盘吧！</p>
]]></content>
  </entry>
  <entry>
    <title>安卓 tinycap 的一个 bug</title>
    <url>/2020/10/09/a-bug-of-tinycap/</url>
    <content><![CDATA[<p>在安卓9.0之前，安卓的 tinycap 有一个 bug 是录音生成的文件头部标志错误，这个会导致生成的文件在某些播放器上无法识别。</p>
<img src="/2020/10/09/a-bug-of-tinycap/andorid.jpg" class="">

<a id="more"></a>

<h2 id="从-WAV-说起"><a href="#从-WAV-说起" class="headerlink" title="从 WAV 说起"></a>从 WAV 说起</h2><p>默认情况下，tinyucap 生成的录音文件是以 pcm 格式存储的。常见的文件扩展名是 <code>.wav</code>。文件格式定义如下</p>
<img src="/2020/10/09/a-bug-of-tinycap/wave-file-format.png" class="">

<p>这个时候我们把 wav 文件当作二进制数据流来看就好。wav文件头部的44字节是这个文件的一些标志信息。这里我们不深究各个字节的含义。我们重点关注 <code>SubChunk2Size</code> 。这四个字节表示后边的 <code>data</code> 有多长。</p>
<h2 id="tinycap"><a href="#tinycap" class="headerlink" title="tinycap"></a>tinycap</h2><p>tinycap 的源码可以从这里下载<a href="https://android.googlesource.com/platform/external/tinyalsa/">https://android.googlesource.com/platform/external/tinyalsa/</a>。<br>下面我也贴出当前的 tinycap 的源码</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* tinycap.c</span></span><br><span class="line"><span class="comment">**</span></span><br><span class="line"><span class="comment">** Copyright 2011, The Android Open Source Project</span></span><br><span class="line"><span class="comment">**</span></span><br><span class="line"><span class="comment">** Redistribution and use in source and binary forms, with or without</span></span><br><span class="line"><span class="comment">** modification, are permitted provided that the following conditions are met:</span></span><br><span class="line"><span class="comment">**     * Redistributions of source code must retain the above copyright</span></span><br><span class="line"><span class="comment">**       notice, this list of conditions and the following disclaimer.</span></span><br><span class="line"><span class="comment">**     * Redistributions in binary form must reproduce the above copyright</span></span><br><span class="line"><span class="comment">**       notice, this list of conditions and the following disclaimer in the</span></span><br><span class="line"><span class="comment">**       documentation and/or other materials provided with the distribution.</span></span><br><span class="line"><span class="comment">**     * Neither the name of The Android Open Source Project nor the names of</span></span><br><span class="line"><span class="comment">**       its contributors may be used to endorse or promote products derived</span></span><br><span class="line"><span class="comment">**       from this software without specific prior written permission.</span></span><br><span class="line"><span class="comment">**</span></span><br><span class="line"><span class="comment">** THIS SOFTWARE IS PROVIDED BY The Android Open Source Project ``AS IS&#x27;&#x27; AND</span></span><br><span class="line"><span class="comment">** ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</span></span><br><span class="line"><span class="comment">** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE</span></span><br><span class="line"><span class="comment">** ARE DISCLAIMED. IN NO EVENT SHALL The Android Open Source Project BE LIABLE</span></span><br><span class="line"><span class="comment">** FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</span></span><br><span class="line"><span class="comment">** DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR</span></span><br><span class="line"><span class="comment">** SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER</span></span><br><span class="line"><span class="comment">** CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT</span></span><br><span class="line"><span class="comment">** LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY</span></span><br><span class="line"><span class="comment">** OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH</span></span><br><span class="line"><span class="comment">** DAMAGE.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;tinyalsa/asoundlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;signal.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ID_RIFF 0x46464952</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ID_WAVE 0x45564157</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ID_FMT  0x20746d66</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ID_DATA 0x61746164</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FORMAT_PCM 1</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">wav_header</span> &#123;</span></span><br><span class="line">    <span class="keyword">uint32_t</span> riff_id;</span><br><span class="line">    <span class="keyword">uint32_t</span> riff_sz;</span><br><span class="line">    <span class="keyword">uint32_t</span> riff_fmt;</span><br><span class="line">    <span class="keyword">uint32_t</span> fmt_id;</span><br><span class="line">    <span class="keyword">uint32_t</span> fmt_sz;</span><br><span class="line">    <span class="keyword">uint16_t</span> audio_format;</span><br><span class="line">    <span class="keyword">uint16_t</span> num_channels;</span><br><span class="line">    <span class="keyword">uint32_t</span> sample_rate;</span><br><span class="line">    <span class="keyword">uint32_t</span> byte_rate;</span><br><span class="line">    <span class="keyword">uint16_t</span> block_align;</span><br><span class="line">    <span class="keyword">uint16_t</span> bits_per_sample;</span><br><span class="line">    <span class="keyword">uint32_t</span> data_id;</span><br><span class="line">    <span class="keyword">uint32_t</span> data_sz;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> capturing = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">capture_sample</span><span class="params">(FILE *file, <span class="keyword">unsigned</span> <span class="keyword">int</span> card, <span class="keyword">unsigned</span> <span class="keyword">int</span> device,</span></span></span><br><span class="line"><span class="function"><span class="params">                            <span class="keyword">unsigned</span> <span class="keyword">int</span> channels, <span class="keyword">unsigned</span> <span class="keyword">int</span> rate,</span></span></span><br><span class="line"><span class="function"><span class="params">                            <span class="keyword">enum</span> pcm_format format, <span class="keyword">unsigned</span> <span class="keyword">int</span> period_size,</span></span></span><br><span class="line"><span class="function"><span class="params">                            <span class="keyword">unsigned</span> <span class="keyword">int</span> period_count, <span class="keyword">unsigned</span> <span class="keyword">int</span> cap_time)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sigint_handler</span><span class="params">(<span class="keyword">int</span> sig __unused)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    capturing = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *file;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">wav_header</span> <span class="title">header</span>;</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> card = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> device = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> channels = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> rate = <span class="number">44100</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> bits = <span class="number">16</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> frames;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> period_size = <span class="number">1024</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> period_count = <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> cap_time = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">enum</span> pcm_format format;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (argc &lt; <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Usage: %s file.wav [-D card] [-d device]&quot;</span></span><br><span class="line">                <span class="string">&quot; [-c channels] [-r rate] [-b bits] [-p period_size]&quot;</span></span><br><span class="line">                <span class="string">&quot; [-n n_periods] [-T capture time]\n&quot;</span>, argv[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    file = fopen(argv[<span class="number">1</span>], <span class="string">&quot;wb&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!file) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Unable to create file &#x27;%s&#x27;\n&quot;</span>, argv[<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* parse command line arguments */</span></span><br><span class="line">    argv += <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span> (*argv) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(*argv, <span class="string">&quot;-d&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">            argv++;</span><br><span class="line">            <span class="keyword">if</span> (*argv)</span><br><span class="line">                device = atoi(*argv);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(*argv, <span class="string">&quot;-c&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">            argv++;</span><br><span class="line">            <span class="keyword">if</span> (*argv)</span><br><span class="line">                channels = atoi(*argv);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(*argv, <span class="string">&quot;-r&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">            argv++;</span><br><span class="line">            <span class="keyword">if</span> (*argv)</span><br><span class="line">                rate = atoi(*argv);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(*argv, <span class="string">&quot;-b&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">            argv++;</span><br><span class="line">            <span class="keyword">if</span> (*argv)</span><br><span class="line">                bits = atoi(*argv);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(*argv, <span class="string">&quot;-D&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">            argv++;</span><br><span class="line">            <span class="keyword">if</span> (*argv)</span><br><span class="line">                card = atoi(*argv);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(*argv, <span class="string">&quot;-p&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">            argv++;</span><br><span class="line">            <span class="keyword">if</span> (*argv)</span><br><span class="line">                period_size = atoi(*argv);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(*argv, <span class="string">&quot;-n&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">            argv++;</span><br><span class="line">            <span class="keyword">if</span> (*argv)</span><br><span class="line">                period_count = atoi(*argv);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(*argv, <span class="string">&quot;-T&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">            argv++;</span><br><span class="line">            <span class="keyword">if</span> (*argv)</span><br><span class="line">                cap_time = atoi(*argv);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (*argv)</span><br><span class="line">            argv++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    header.riff_id = ID_RIFF;</span><br><span class="line">    header.riff_sz = <span class="number">0</span>;</span><br><span class="line">    header.riff_fmt = ID_WAVE;</span><br><span class="line">    header.fmt_id = ID_FMT;</span><br><span class="line">    header.fmt_sz = <span class="number">16</span>;</span><br><span class="line">    header.audio_format = FORMAT_PCM;</span><br><span class="line">    header.num_channels = channels;</span><br><span class="line">    header.sample_rate = rate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (bits) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">32</span>:</span><br><span class="line">        format = PCM_FORMAT_S32_LE;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">24</span>:</span><br><span class="line">        format = PCM_FORMAT_S24_LE;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">16</span>:</span><br><span class="line">        format = PCM_FORMAT_S16_LE;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;%u bits is not supported.\n&quot;</span>, bits);</span><br><span class="line">        fclose(file);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    header.bits_per_sample = pcm_format_to_bits(format);</span><br><span class="line">    header.byte_rate = (header.bits_per_sample / <span class="number">8</span>) * channels * rate;</span><br><span class="line">    header.block_align = channels * (header.bits_per_sample / <span class="number">8</span>);</span><br><span class="line">    header.data_id = ID_DATA;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* leave enough room for header */</span></span><br><span class="line">    fseek(file, <span class="keyword">sizeof</span>(struct wav_header), SEEK_SET);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* install signal handler and begin capturing */</span></span><br><span class="line">    signal(SIGINT, sigint_handler);</span><br><span class="line">    signal(SIGHUP, sigint_handler);</span><br><span class="line">    signal(SIGTERM, sigint_handler);</span><br><span class="line">    frames = capture_sample(file, card, device, header.num_channels,</span><br><span class="line">                            header.sample_rate, format,</span><br><span class="line">                            period_size, period_count, cap_time);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Captured %u frames\n&quot;</span>, frames);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* write header now all information is known */</span></span><br><span class="line">    header.data_sz = frames * header.block_align;</span><br><span class="line">    header.riff_sz = header.data_sz + <span class="keyword">sizeof</span>(header) - <span class="number">8</span>;</span><br><span class="line">    fseek(file, <span class="number">0</span>, SEEK_SET);</span><br><span class="line">    fwrite(&amp;header, <span class="keyword">sizeof</span>(struct wav_header), <span class="number">1</span>, file);</span><br><span class="line"></span><br><span class="line">    fclose(file);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">capture_sample</span><span class="params">(FILE *file, <span class="keyword">unsigned</span> <span class="keyword">int</span> card, <span class="keyword">unsigned</span> <span class="keyword">int</span> device,</span></span></span><br><span class="line"><span class="function"><span class="params">                            <span class="keyword">unsigned</span> <span class="keyword">int</span> channels, <span class="keyword">unsigned</span> <span class="keyword">int</span> rate,</span></span></span><br><span class="line"><span class="function"><span class="params">                            <span class="keyword">enum</span> pcm_format format, <span class="keyword">unsigned</span> <span class="keyword">int</span> period_size,</span></span></span><br><span class="line"><span class="function"><span class="params">                            <span class="keyword">unsigned</span> <span class="keyword">int</span> period_count, <span class="keyword">unsigned</span> <span class="keyword">int</span> cap_time)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">pcm_config</span> <span class="title">config</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">pcm</span> *<span class="title">pcm</span>;</span></span><br><span class="line">    <span class="keyword">char</span> *buffer;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> size;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> bytes_read = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> frames = <span class="number">0</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">timespec</span> <span class="title">end</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">timespec</span> <span class="title">now</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(&amp;config, <span class="number">0</span>, <span class="keyword">sizeof</span>(config));</span><br><span class="line">    config.channels = channels;</span><br><span class="line">    config.rate = rate;</span><br><span class="line">    config.period_size = period_size;</span><br><span class="line">    config.period_count = period_count;</span><br><span class="line">    config.format = format;</span><br><span class="line">    config.start_threshold = <span class="number">0</span>;</span><br><span class="line">    config.stop_threshold = <span class="number">0</span>;</span><br><span class="line">    config.silence_threshold = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    pcm = pcm_open(card, device, PCM_IN, &amp;config);</span><br><span class="line">    <span class="keyword">if</span> (!pcm || !pcm_is_ready(pcm)) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Unable to open PCM device (%s)\n&quot;</span>,</span><br><span class="line">                pcm_get_error(pcm));</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    size = pcm_frames_to_bytes(pcm, pcm_get_buffer_size(pcm));</span><br><span class="line">    buffer = <span class="built_in">malloc</span>(size);</span><br><span class="line">    <span class="keyword">if</span> (!buffer) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Unable to allocate %u bytes\n&quot;</span>, size);</span><br><span class="line">        <span class="built_in">free</span>(buffer);</span><br><span class="line">        pcm_close(pcm);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Capturing sample: %u ch, %u hz, %u bit\n&quot;</span>, channels, rate,</span><br><span class="line">           pcm_format_to_bits(format));</span><br><span class="line"></span><br><span class="line">    clock_gettime(CLOCK_MONOTONIC, &amp;now);</span><br><span class="line">    end.tv_sec = now.tv_sec + cap_time;</span><br><span class="line">    end.tv_nsec = now.tv_nsec;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (capturing &amp;&amp; !pcm_read(pcm, buffer, size)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (fwrite(buffer, <span class="number">1</span>, size, file) != size) &#123;</span><br><span class="line">            <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">&quot;Error capturing sample\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        bytes_read += size;</span><br><span class="line">        <span class="keyword">if</span> (cap_time) &#123;</span><br><span class="line">            clock_gettime(CLOCK_MONOTONIC, &amp;now);</span><br><span class="line">            <span class="keyword">if</span> (now.tv_sec &gt; end.tv_sec ||</span><br><span class="line">                (now.tv_sec == end.tv_sec &amp;&amp; now.tv_nsec &gt;= end.tv_nsec))</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    frames = pcm_bytes_to_frames(pcm, bytes_read);</span><br><span class="line">    <span class="built_in">free</span>(buffer);</span><br><span class="line">    pcm_close(pcm);</span><br><span class="line">    <span class="keyword">return</span> frames;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>我们看第44到58行</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">wav_header</span> &#123;</span></span><br><span class="line">    <span class="keyword">uint32_t</span> riff_id;</span><br><span class="line">    <span class="keyword">uint32_t</span> riff_sz;</span><br><span class="line">    <span class="keyword">uint32_t</span> riff_fmt;</span><br><span class="line">    <span class="keyword">uint32_t</span> fmt_id;</span><br><span class="line">    <span class="keyword">uint32_t</span> fmt_sz;</span><br><span class="line">    <span class="keyword">uint16_t</span> audio_format;</span><br><span class="line">    <span class="keyword">uint16_t</span> num_channels;</span><br><span class="line">    <span class="keyword">uint32_t</span> sample_rate;</span><br><span class="line">    <span class="keyword">uint32_t</span> byte_rate;</span><br><span class="line">    <span class="keyword">uint16_t</span> block_align;</span><br><span class="line">    <span class="keyword">uint16_t</span> bits_per_sample;</span><br><span class="line">    <span class="keyword">uint32_t</span> data_id;</span><br><span class="line">    <span class="keyword">uint32_t</span> data_sz;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>仔细看这里是和上图中的wav文件头一一对应的。</p>
<p>然后再看177到188行</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">frames = capture_sample(file, card, device, header.num_channels,</span><br><span class="line">                        header.sample_rate, format,</span><br><span class="line">                        period_size, period_count, cap_time);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Captured %u frames\n&quot;</span>, frames);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* write header now all information is known */</span></span><br><span class="line">header.data_sz = frames * header.block_align;</span><br><span class="line">header.riff_sz = header.data_sz + <span class="keyword">sizeof</span>(header) - <span class="number">8</span>;</span><br><span class="line">fseek(file, <span class="number">0</span>, SEEK_SET);</span><br><span class="line">fwrite(&amp;header, <span class="keyword">sizeof</span>(struct wav_header), <span class="number">1</span>, file);</span><br><span class="line"></span><br><span class="line">fclose(file);</span><br></pre></td></tr></table></figure>
<p>这里我们能看到最后通过<code>fseek(file, 0, SEEK_SET);</code>和 <code>fwrite(&amp;header, sizeof(struct wav_header), 1, file);</code>把 header 信息写入了 file 。这里的file自然就是tinycap生成录音的目标文件。这里的 header 就是上边的结构体的一个实例。并且我们可以看到 <code>header.data_sz = frames * header.block_align;</code> 而 <code>frames = capture_sample(xxxxxxx</code>。这里的frames和data的值有关。然后我们看一下下面的提交记录</p>
<img src="/2020/10/09/a-bug-of-tinycap/modify-history.png" class="">

<p>我们可以看到这次修改记录中。原本的</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">free</span>(buffer);</span><br><span class="line">pcm_close(pcm);</span><br><span class="line"><span class="keyword">return</span> pcm_bytes_to_frames(pcm, bytes_read);</span><br></pre></td></tr></table></figure>
<p>变成了</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">frames = pcm_bytes_to_frames(pcm, bytes_read);</span><br><span class="line"><span class="built_in">free</span>(buffer);</span><br><span class="line">pcm_close(pcm);</span><br><span class="line"><span class="keyword">return</span> frames;</span><br></pre></td></tr></table></figure>
<p>当然如果我们继续深入的看 <code>pcm_close(pcm)</code> 确实能出来这里做了一些内存释放的操作。这里就不展示相应的代码了。<br>到这里就已经明显了，修改之前，这个函数的返回值将是 0 ，这里也会导致生成的 wav 文件的头部用于标志 data 长度的 4 字节为 0，如果播放器按照标准的wav文件去读取，则会发现这是一个没有数据的wav文件。不过我们也能看到，这个bug已经在 2018.03.19 修复。所以本文开头才说这是安卓 9.0 之前的版本有的问题。</p>
]]></content>
  </entry>
  <entry>
    <title>【转载】探寻C++最快的读取文件的方案</title>
    <url>/2017/03/18/about-C/</url>
    <content><![CDATA[<p>在竞赛中，遇到大数据时，往往读文件成了程序运行速度的瓶颈，需要更快的读取方式。相信几乎所有的C++学习者都在cin机器缓慢的速度上栽过跟头，于是从此以后发誓不用cin读数据。还有人说Pascal的read语句的速度是C/C++中scanf比不上的，C++选手只能干着急。难道C++真的低Pascal一等吗？答案是不言而喻的。一个进阶的方法是把数据一下子读进来，然后再转化字符串，这种方法传说中很不错，但具体如何从没试过，因此今天就索性把能想到的所有的读数据的方式都测试了一边，结果是惊人的。</p>
<a id="more"></a>
<p>竞赛中读数据的情况最多的莫过于读一大堆整数了，于是我写了一个程序，生成一千万个随机数到data.txt中，一共55MB。然后我写了个程序主干计算运行时间，代码如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> start = clock();</span><br><span class="line">    <span class="comment">//DO SOMETHING</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.3lf\n&quot;</span>,<span class="keyword">double</span>(clock()-start)/CLOCKS_PER_SEC);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>最简单的方法就算写一个循环scanf了，代码如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">10000000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> numbers[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">scanf_read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">&quot;data.txt&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;MAXN;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;numbers[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可是效率如何呢？在我的电脑Linux平台上测试结果为2.01秒。接下来是cin，代码如下</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">10000000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> numbers[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cin_read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">&quot;data.txt&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;MAXN;i++)</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cin</span> &gt;&gt; numbers[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>出乎我的意料，cin仅仅用了6.38秒，比我想象的要快。cin慢是有原因的，其实默认的时候，cin与stdin总是保持同步的，也就是说这两种方法可以混用，而不必担心文件指针混乱，同时cout和stdout也一样，两者混用不会输出顺序错乱。正因为这个兼容性的特性，导致cin有许多额外的开销，如何禁用这个特性呢？只需一个语句std::ios::sync_with_stdio(false);，这样就可以取消cin于stdin的同步了。程序如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">10000000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> numbers[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cin_read_nosync</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">&quot;data.txt&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">std</span>::ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;MAXN;i++)</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cin</span> &gt;&gt; numbers[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>取消同步后效率究竟如何？经测试运行时间锐减到了2.05秒，与scanf效率相差无几了！有了这个以后可以放心使用cin和cout了。</p>
<p>接下来让我们测试一下读入整个文件再处理的方法，首先要写一个字符串转化为数组的函数，代码如下</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXS = <span class="number">60</span>*<span class="number">1024</span>*<span class="number">1024</span>;</span><br><span class="line"><span class="keyword">char</span> buf[MAXS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">analyse</span><span class="params">(<span class="keyword">char</span> *buf,<span class="keyword">int</span> len = MAXS)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    numbers[i=<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">char</span> *p=buf;*p &amp;&amp; p-buf&lt;len;p++)</span><br><span class="line">        <span class="keyword">if</span> (*p == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">            numbers[++i]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            numbers[i] = numbers[i] * <span class="number">10</span> + *p - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>把整个文件读入一个字符串最常用的方法是用fread，代码如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">10000000</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXS = <span class="number">60</span>*<span class="number">1024</span>*<span class="number">1024</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> numbers[MAXN];</span><br><span class="line"><span class="keyword">char</span> buf[MAXS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fread_analyse</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">&quot;data.txt&quot;</span>,<span class="string">&quot;rb&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">int</span> len = fread(buf,<span class="number">1</span>,MAXS,<span class="built_in">stdin</span>);</span><br><span class="line">    buf[len] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    analyse(buf,len);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上述代码有着惊人的效率，经测试读取这10000000个数只用了0.29秒，效率提高了几乎10倍！掌握这种方法简直无敌了，不过，我记得fread是封装过的read，如果直接使用read，是不是更快呢？代码如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">10000000</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXS = <span class="number">60</span>*<span class="number">1024</span>*<span class="number">1024</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> numbers[MAXN];</span><br><span class="line"><span class="keyword">char</span> buf[MAXS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read_analyse</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> fd = open(<span class="string">&quot;data.txt&quot;</span>,O_RDONLY);</span><br><span class="line">    <span class="keyword">int</span> len = read(fd,buf,MAXS);</span><br><span class="line">    buf[len] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    analyse(buf,len);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>测试发现运行时间仍然是0.29秒，可见read不具备特殊的优势。到此已经结束了吗？不，我可以调用Linux的底层函数mmap，这个函数的功能是将文件映射到内存，是所有读文件方法都要封装的基础方法，直接使用mmap会怎样呢？代码如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">10000000</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXS = <span class="number">60</span>*<span class="number">1024</span>*<span class="number">1024</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> numbers[MAXN];</span><br><span class="line"><span class="keyword">char</span> buf[MAXS];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mmap_analyse</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> fd = open(<span class="string">&quot;data.txt&quot;</span>,O_RDONLY);</span><br><span class="line">    <span class="keyword">int</span> len = lseek(fd,<span class="number">0</span>,SEEK_END);</span><br><span class="line">    <span class="keyword">char</span> *mbuf = (<span class="keyword">char</span> *) mmap(<span class="literal">NULL</span>,len,PROT_READ,MAP_PRIVATE,fd,<span class="number">0</span>);    </span><br><span class="line">    analyse(mbuf,len);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>经测试，运行时间缩短到了0.25秒，效率继续提高了14%。到此为止我已经没有更好的方法继续提高读文件的速度了。回头测一下Pascal的速度如何？结果令人大跌眼镜，居然运行了2.16秒之多。程序如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span></span><br><span class="line">    MAXN = <span class="number">10000000</span>;</span><br><span class="line">var</span><br><span class="line">    numbers :<span class="built_in">array</span>[<span class="number">0.</span>.MAXN] of longint;</span><br><span class="line">    i :longint;</span><br><span class="line">begin</span><br><span class="line">    assign(input,&#x27;data.txt&#x27;);</span><br><span class="line">    reset(input);</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">0</span> to MAXN <span class="keyword">do</span></span><br><span class="line">        read(numbers[i]);</span><br><span class="line">end.</span><br></pre></td></tr></table></figure>
<p>为确保准确性，我又换到Windows平台上测试了一下。结果如下表：</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>方法/平台/时间(秒)</td>
<td>Linux gcc</td>
<td>Windows mingw</td>
<td>Windows VC2008</td>
</tr>
<tr>
<td>scanf</td>
<td>2.010</td>
<td>3.704</td>
<td>3.425</td>
</tr>
<tr>
<td>cin</td>
<td>6.380</td>
<td>64.003</td>
<td>19.208</td>
</tr>
<tr>
<td>cin取消同步</td>
<td>2.050</td>
<td>6.004</td>
<td>19.616</td>
</tr>
<tr>
<td>fread</td>
<td>0.290</td>
<td>0.241</td>
<td>0.304</td>
</tr>
<tr>
<td>read</td>
<td>0.290</td>
<td>0.398</td>
<td>不支持</td>
</tr>
<tr>
<td>mmap</td>
<td>0.250</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>Pascal read</td>
<td>2.160</td>
<td>4.668</td>
<td>NULL</td>
</tr>
</tbody></table>
<p>从上面可以看出几个问题:</p>
<ol>
<li>Linux平台上运行程序普遍比Windows上快。</li>
<li>Windows下VC编译的程序一般运行比MINGW（MINimal Gcc for Windows）快。</li>
<li>VC对cin取消同步与否不敏感，前后效率相同。反过来MINGW则非常敏感，前后效率相差8倍。</li>
<li>read本是linux系统函数，MINGW可能采用了某种模拟方式，read比fread更慢。</li>
<li>Pascal程序运行速度实在令人不敢恭维。</li>
</ol>
<p>原文链接:<a href="https://www.byvoid.com/zhs/blog/fast-readfile">BYVoid原创 转载请注明</a></p>
]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>为 putty 添加保存log文件时写入时间的选项</title>
    <url>/2020/06/21/add-new-config-into-putty/</url>
    <content><![CDATA[<p>putty 几乎是我用过的远程工具里面的最好的了。目前感觉还有的缺憾有</p>
<ol>
<li>缺少标签页切换</li>
<li>没有命令窗口</li>
<li>log文件保存时没有保存时间线的选项</li>
</ol>
<p>今天来动手为putty增加在保存的log的前面打上时间标签。</p>
<a id="more"></a>

<p>下载putty的源代码，假设你把它解压到<code>putty</code>这个文件夹内。我们主要更改以下几个文件</p>
<ol>
<li>putty\windows\winhelp.h</li>
<li>putty\putty.h</li>
<li>putty\config.c</li>
</ol>
<h1 id="添加UI选项"><a href="#添加UI选项" class="headerlink" title="添加UI选项"></a>添加UI选项</h1><h2 id="winhelp-h"><a href="#winhelp-h" class="headerlink" title="winhelp.h"></a>winhelp.h</h2><p>在 WINHELP_CTX_xxxxx 字段新增一条。这里我新增了一条</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WINHELP_CTX_logging_timeheader <span class="meta-string">&quot;config-logtimeheader&quot;</span></span></span><br></pre></td></tr></table></figure>
<p>CTX 后面的 <code>logging_timeheader</code> 等下会用到。</p>
<h2 id="putty-h"><a href="#putty-h" class="headerlink" title="putty.h"></a>putty.h</h2><p>在 <code>#define CONFIG_OPTIONS(X) \</code>字段新增一条，这里我新增的是</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">X(BOOL, NONE, logtimeheader) \</span><br></pre></td></tr></table></figure>
<p>位置大概是1389行。</p>
<h2 id="config-c"><a href="#config-c" class="headerlink" title="config.c"></a>config.c</h2><p>位置大概 1667 行，仿造原有的代码，添加一个checkbox。这里我写成</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ctrl_checkbox(s, <span class="string">&quot;Include time header of line&quot;</span>, <span class="string">&#x27;j&#x27;</span>,HELPCTX(logging_timeheader),conf_checkbox_handler, I(CONF_logtimeheader));</span><br></pre></td></tr></table></figure>
<p>上面的代码中，<code>HELPCTX(logging_timeheader)</code> 里面的 <code>logging_timeheader</code> 是在 putty\windows\winhelp.h 新增的条目。<br><code>I(CONF_logtimeheader)</code>中的 <code>logtimeheader</code>是在 putty\putty.h 中新增的条目。</p>
<img src="/2020/06/21/add-new-config-into-putty/putty-logging.png" class="">

<h1 id="功能实现"><a href="#功能实现" class="headerlink" title="功能实现"></a>功能实现</h1><p>这一步的主逻辑是在 putty\logging.c 这个文件内添加的。修改位置为大概 54 行。<code>static void logwrite(LogContext *ctx, ptrlen data)</code> 这个函数体内。修改后如下所示</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">logwrite</span><span class="params">(LogContext *ctx, ptrlen data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * In state L_CLOSED, we call logfopen, which will set the state</span></span><br><span class="line"><span class="comment">     * to one of L_OPENING, L_OPEN or L_ERROR. Hence we process all of</span></span><br><span class="line"><span class="comment">     * those three _after_ processing L_CLOSED.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span> (ctx-&gt;state == L_CLOSED)</span><br><span class="line">        logfopen(ctx);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ctx-&gt;state == L_OPENING) &#123;</span><br><span class="line">        bufchain_add(&amp;ctx-&gt;<span class="built_in">queue</span>, data.ptr, data.len);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ctx-&gt;state == L_OPEN) &#123;</span><br><span class="line">        assert(ctx-&gt;lgfp);</span><br><span class="line">        <span class="keyword">if</span> (fwrite(data.ptr, <span class="number">1</span>, data.len, ctx-&gt;lgfp) &lt; data.len) &#123;</span><br><span class="line">            logfclose(ctx);</span><br><span class="line">            ctx-&gt;state = L_ERROR;</span><br><span class="line">            lp_eventlog(ctx-&gt;lp, <span class="string">&quot;Disabled writing session log &quot;</span></span><br><span class="line">                <span class="string">&quot;due to error while writing&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/************** 新增开始 **************/</span></span><br><span class="line">        <span class="keyword">if</span> ((<span class="built_in">strcmp</span>(data.ptr, <span class="string">&quot;\n&quot;</span>) == <span class="number">0</span>) &amp;&amp; (conf_get_bool(ctx-&gt;conf, CONF_logtimeheader))) &#123;</span><br><span class="line">            <span class="keyword">char</span> buf[<span class="number">256</span>];</span><br><span class="line">            <span class="class"><span class="keyword">struct</span> <span class="title">tm</span> <span class="title">tm</span>;</span></span><br><span class="line">            tm = ltime();</span><br><span class="line">            strftime(buf, <span class="number">24</span>, <span class="string">&quot;%Y.%m.%d %H:%M:%S   &quot;</span>, &amp;tm);</span><br><span class="line">            fwrite(buf, <span class="number">1</span>, <span class="built_in">strlen</span>(buf), ctx-&gt;lgfp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*************** 新增结束 *************/</span></span><br><span class="line">    &#125;   <span class="comment">/* else L_ERROR, so ignore the write */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>logwrite 这个函数是用来将putty窗口内显示的字符输出到log文件内的。<br>如果调用这个函数的地方是一行一行传进来的的话，修改的地方应该是在调用这个函数的地方。但是根据调用的情况来看，多数情况下是一个字符一个字符写的。<br>所以我的做法是检查到输出的字符是 <code>\n</code> 时，就输出一个时间，这样下一行再输出的内容就是跟在这个时间后面的。<br>最后实现的效果大概是下面这个样子</p>
<img src="/2020/06/21/add-new-config-into-putty/putty-log.png" class="">
]]></content>
  </entry>
  <entry>
    <title>安卓app如何从剪贴板获取图片</title>
    <url>/2020/08/16/android-app-load-image-from-clipboard/</url>
    <content><![CDATA[<p>在比较新的Chrome浏览器中，长按图片的时候会有复制图片的选项，那么这个图片如何获取到呢。</p>
<a id="more"></a>

<img src="/2020/08/16/android-app-load-image-from-clipboard/picture1.png" class="">

<p>尝试了一下似乎手机上没有应用支持粘贴图片。</p>
<p>我们来写一个小小demo来看看粘贴图片如何实现。<br>首先可以参考官方文档 <a href="https://developer.android.google.cn/guide/topics/text/copy-paste">https://developer.android.google.cn/guide/topics/text/copy-paste</a></p>
<p>可以从官方的文档内知道，剪贴板支持 Text，URI，Intent三种类型的对象。可以先给结论，Chrome浏览器复制的一个URI对象。<br>下面是一个简单的用来获取剪贴板图片的代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 先获取一个剪贴板操作实例</span></span><br><span class="line">ClipboardManager clipboard = (ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);</span><br><span class="line"><span class="comment">//取到剪贴板里面的数据</span></span><br><span class="line">ClipData.Item item = clipboard.getPrimaryClip().getItemAt(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//从剪贴板获取一个uri对象</span></span><br><span class="line">Uri pasteUri = item.getUri();</span><br><span class="line"><span class="comment">//用这个uri对象获取一个bitmap实例</span></span><br><span class="line">Bitmap bitmap = MediaStore.Images.Media.getBitmap(getContentResolver(), pasteUri);</span><br></pre></td></tr></table></figure>

<p>上面的代码并没有刻意写得很简短，其中一部分可以在官方的文档内找到。<br>最后我们拿到一个bitmap，这个时候可以拿这个bitmap去放在想要使用的地方。<br>通常到这里读者就可以去尝试了。</p>
<p>下面是一个完整的简单小示范：<br><code>Activity</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.ClipData;</span><br><span class="line"><span class="keyword">import</span> android.content.ClipboardManager;</span><br><span class="line"><span class="keyword">import</span> android.content.ContentResolver;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Bitmap;</span><br><span class="line"><span class="keyword">import</span> android.net.Uri;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.provider.MediaStore;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">&quot;pasteimage&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clickbutton</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Gets a handle to the Clipboard Manager</span></span><br><span class="line">        ClipboardManager clipboard = (ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);</span><br><span class="line">        Log.d(TAG,<span class="string">&quot;get clipboard&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Gets a content resolver instance</span></span><br><span class="line">        ContentResolver cr = getContentResolver();</span><br><span class="line">        Log.d(TAG,<span class="string">&quot;cr&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Gets the clipboard data from the clipboard</span></span><br><span class="line">        ClipData clip = clipboard.getPrimaryClip();</span><br><span class="line">        Log.d(TAG,<span class="string">&quot;getprimaryclip&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (clip != <span class="keyword">null</span>) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Gets the first item from the clipboard data</span></span><br><span class="line">            ClipData.Item item = clipboard.getPrimaryClip().getItemAt(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(item == <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> ;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Tries to get the item&#x27;s contents as a URI</span></span><br><span class="line">            String pasteData = (String) item.getText();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(pasteData != <span class="keyword">null</span>)&#123;</span><br><span class="line">                Log.d(TAG,pasteData);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                Uri pasteUri = item.getUri();</span><br><span class="line">                <span class="keyword">if</span>(pasteUri != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    Log.d(TAG,pasteUri.toString());</span><br><span class="line">                    String uriMimeType = cr.getType(pasteUri);</span><br><span class="line">                    Log.d(TAG,uriMimeType);</span><br><span class="line">                    <span class="keyword">if</span>(uriMimeType!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(uriMimeType.contains(<span class="string">&quot;image&quot;</span>))&#123;</span><br><span class="line">                            Log.d(TAG,<span class="string">&quot;find a image in clipboard&quot;</span>);</span><br><span class="line">                            <span class="keyword">try</span>&#123;</span><br><span class="line">                                Bitmap bitmap = MediaStore.Images.Media.getBitmap(cr, pasteUri);</span><br><span class="line">                                ImageView image = findViewById(R.id.imageview);</span><br><span class="line">                                <span class="comment">//image.setImageURI(pasteUri);</span></span><br><span class="line">                                image.setImageBitmap(bitmap);</span><br><span class="line">                            &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                                e.printStackTrace();</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            Log.d(TAG,<span class="string">&quot;null&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>布局文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;PasteImage&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:onClick</span>=<span class="string">&quot;clickbutton&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:layout_editor_absoluteX</span>=<span class="string">&quot;17dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:layout_editor_absoluteY</span>=<span class="string">&quot;15dp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/imageview&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintStart_toStartOf</span>=<span class="string">&quot;parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">&quot;@+id/button&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>使用方法，在Chrome浏览器里面复制一张图片之后，打开用上面的代码编译的app，点击<code>PASTEIMAGE</code>，就读取剪贴板的图片并显示，如下图</p>
<img src="/2020/08/16/android-app-load-image-from-clipboard/picture2.png" class="">]]></content>
  </entry>
  <entry>
    <title>也许是一个特性</title>
    <url>/2017/07/02/an-error/</url>
    <content><![CDATA[<img src="/2017/07/02/an-error/1.jpg" class="">
<a id="more"></a>
<p>遇到一个神奇的现象，仅作记录，如下代码：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;啊哈哈&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>一眼看过去，肯定会编译错误，<code>printf</code>的头文件<code>cstdio</code>都没有包含进去，事实证明，确实如此：</p>
<img src="/2017/07/02/an-error/2.jpg" class="" title="compile with g++ 5.4.0">
<p>那么，再来一张如何:</p>
<img src="/2017/07/02/an-error/3.jpg" class="" title="compile with g++ 7.1.0">
<p>这几日折腾putty，下载了gcc-7.1.0，顺手把Code::Blocks的编译器换了，结果出这么个岔子，也许7.1.0版本的<code>iostream</code>已经包含了<code>printf</code>了吧，某天应该会被这个“特性”坑一把吧!</p>
<blockquote class="blockquote-center">
            <p>生命重在折腾</p>

          </blockquote>]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Studio启用IPv6支持</title>
    <url>/2017/09/30/android-studio-ipv6/</url>
    <content><![CDATA[<img src="/2017/09/30/android-studio-ipv6/1.png" class="">
<a id="more"></a>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>打开AndroidStudio主程序所在目录，右键编辑文件“studio64.exe.vmoptions”，将第19行的<code>-Djava.net.preferIPv4Stack=true</code>改成<code>-Djava.net.preferIPv4Stack=false</code>。见<a href="https://zhuanlan.zhihu.com/p/20125685">文章</a></p>
<img src="/2017/09/30/android-studio-ipv6/2.png" class="">
<h2 id="一些说明"><a href="#一些说明" class="headerlink" title="一些说明"></a>一些说明</h2><p>原本的配置文件中的<code>-Djava.net.preferIPv4Stack</code>应该是开启<code>唯IPv4</code>，也就是说，Android stdio只会从IPv4通道连接网络。在默认情况下，我屏蔽掉IPv4网络，也就是仅仅留下IPv6，并且，Android Studio无法更新SDK，在连接上IPv4的情况下，可以看到Android Studio连接了<code>dl.google.com</code>，并且此站点可以通过IPv6连接，但是Android Studio在纯IPv6网络情况下无法连接网络，那么问题就出在Android Studio身上了，更改主程序的配置文件可以使用IPv6网络。</p>
<p>原文作者将配置文件改为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-Djava.net.preferIPv4Stack&#x3D;false</span><br><span class="line">-Djava.net.preferIPv6Addresses&#x3D;true</span><br></pre></td></tr></table></figure>

<p>开启了<code>唯IPv6</code>，那么切换到IPv4环境时又需要再改一次配置文件，那么倒不如把<code>唯IPv4</code>关掉，这样到底是使用IPv6还是IPv4，就由主机所连接的网络来决定了，而不是由Android Studio和网络环境来决定。</p>
<p>学校的网络同时支持IPv6和IPv4，能走IPv6的时候，就不走IPv4了，毕竟更新一个SDK也是好多GB流量。</p>
<h2 id="网络环境更改办法"><a href="#网络环境更改办法" class="headerlink" title="网络环境更改办法"></a>网络环境更改办法</h2><h3 id="For-Windows"><a href="#For-Windows" class="headerlink" title="For Windows"></a>For Windows</h3><p>将以下内容添加到<code>C:\Windows\System32\drivers\etc\hosts</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2401:3800:4001:806::1009 dl.google.com</span><br><span class="line">2401:3800:4001:806::1009 dl.l.google.com</span><br></pre></td></tr></table></figure>

<p>在电脑能连接上IPv6网络的情况下，连接<code>dl.google.com</code>的流量会被引向IPv6通道，即使电脑连接了IPv4网络。若电脑仅连接了IPv4，则此规则不生效。</p>
<h3 id="For-Linux"><a href="#For-Linux" class="headerlink" title="For Linux"></a>For Linux</h3><p>Linux的hosts文件在<code>/etc/hosts</code>，同样把上面的地址添加就好，但是这样有一个弊端——在电脑处于纯IPv4网络时，规则仍然生效，于是Android Studio又连不上网络了。</p>
<p>最优的解决办法是更改电脑所连接的网络环境的hosts文件，比如路由器的，在能连接上IPv6的路由器上，更改其<code>hosts</code>文件，这样电脑连接这个路由器的时候，就能走IPv6，电脑连接上其他仅支持IPv4的网络时，走IPv4，不用更改本机的hosts环境，就不用在切换网络之后，还要更改本机的hosts文件。感觉这点Linux就不如Windows了。</p>
<h2 id="其他的一些想法"><a href="#其他的一些想法" class="headerlink" title="其他的一些想法"></a>其他的一些想法</h2><p>在很久很久以前，Android_SDK的源还在国外，这可把国内的开发者弄得苦不堪言，SDK就足够折腾一番了，现在的<code>dl.google.com</code>主机位于北京，速度还不错，延迟也很低。对于谷歌来说，在国内多部署几个服务器并不算什么，但是，口碑一下子涨了好多吧，毕竟方便了那么多，而且支持IPv6，真是要给谷歌老大几朵花了。</p>
<p>其实吧，说到底，还是为了钱，大陆毕竟是一块大蛋糕，谷歌也想来分一块，不知道什么时候来呢？<br>And，和Android 8一块来的，谷歌也带来<a href="https://www.zhihu.com/topic/20008824/hot">Kotlin对安卓的支持</a>，这是不是对Oracle的一点警示呢。</p>
]]></content>
  </entry>
  <entry>
    <title>从零开始建立PuTTY工程</title>
    <url>/2018/05/20/build-putty-step-by-step/</url>
    <content><![CDATA[<p>PuTTY的源码下载之后，里面已经带有Visual Studio 2010和Visual Studio 2012的解决方案，但是惊奇的发现，用这个两个解决方案编译出来的putty居然是xp风格的，和官网下载到的不一样。(如果只是要单纯的解决这个xp风格，可以参考<a href="#MANIFEST">MANIFEST</a>)</p>
<img src="/2018/05/20/build-putty-step-by-step/25.png" class="">

<p>所以，从零开始建立putty的Viusal Studio2017解决方案。</p>
<a id="more"></a>

<p>首先，建立一个空项目(记得勾选为解决方案创建目录)</p>
<img src="/2018/05/20/build-putty-step-by-step/1.png" class="">

<p>这个时候，在你的putty源码目录的windows文件夹内会有一个putty文件夹，里面会有一个<code>putty.sln</code>和一个<code>putty</code>文件夹，将windows文件夹内的putty文件夹更名为VS2017(仅仅是为了与已有的解决方案统一风格而已，名字随意)，这个时候，你可以对着解决方案的putty项目，点击右键，移动到添加，然后点击添加现有现有项，或者可以直接按下<code>Shift + Alt +A</code>，对着原本就有的PuTTY项目，分别添加源文件、头文件、资源文件:</p>
<img src="/2018/05/20/build-putty-step-by-step/2.png" class="">
<p>添加完成之后，putty项目看起来应该是这个样子的</p>
<img src="/2018/05/20/build-putty-step-by-step/3.png" class="">

<h2 id="无法打开包括文件-“unix-h”"><a href="#无法打开包括文件-“unix-h”" class="headerlink" title="无法打开包括文件: “unix.h”"></a>无法打开包括文件: “unix.h”</h2><p>按下<code>Ctrl+Shift+B</code>，你就会看到这样的画面：</p>
<img src="/2018/05/20/build-putty-step-by-step/4.png" class="">
<p>错误</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">严重性	代码	说明	项目	文件	行	禁止显示状态</span><br><span class="line">错误	C1083	无法打开包括文件: “unix.h”: No such file or directory	putty	d:\desktop\putty-en\puttyps.h	14	</span><br></pre></td></tr></table></figure>
<p>原因很明显，它们找不到头文件在哪儿，右击项目，点击属性，选中C/C++，在附加包含目录内填入<code>..\..\..\./;..\..\..\unix/;..\..\..\charset/;..\..\..\windows/;</code></p>
<img src="/2018/05/20/build-putty-step-by-step/5.png" class="">
<p>这个是用来指定编译器搜索头文件的目录的，这里用的是相对路径(相对于putty解决方案内putty项目的路径，也就是putty源码的根目录，unix目录，charset目录和windows目录)，这个附加目录也可以在<code>VC++目录</code>的包含目录里面填写，如下图</p>
<img src="/2018/05/20/build-putty-step-by-step/6.png" class="">
<p>库目录在putty项目的建立过程中不用填写，putty没有用到第三方库，这里不用填写。</p>
<h2 id="无法打开包括文件-“dlfcn-h”"><a href="#无法打开包括文件-“dlfcn-h”" class="headerlink" title="无法打开包括文件: “dlfcn.h”"></a>无法打开包括文件: “dlfcn.h”</h2><p>再次生成解决方案，你会遇到第二个问题</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">严重性	代码	说明	项目	文件	行	禁止显示状态</span><br><span class="line">错误	C1083	无法打开包括文件: “dlfcn.h”: No such file or directory	putty	d:\desktop\putty-en\unix\unix.h	11	</span><br></pre></td></tr></table></figure>

<img src="/2018/05/20/build-putty-step-by-step/7.png" class="">
<p>依旧打开项目属性，点击<code>C/C++</code>，预处理器,预处理器定义</p>
<img src="/2018/05/20/build-putty-step-by-step/8.png" class="">
<p>点击右边的下拉箭头，点击编辑，填入以下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">WIN32</span><br><span class="line">_WINDOWS</span><br><span class="line">_CRT_SECURE_NO_WARNINGS</span><br></pre></td></tr></table></figure>
<p>这个时候，看起来应该是这个样子的(“dlfcn.h”是Linux系统的头文件，猜测加预处理参数是为了让编译器知道不去试图查找这个文件)</p>
<img src="/2018/05/20/build-putty-step-by-step/9.png" class="">

<h2 id="case-表达式不是常量"><a href="#case-表达式不是常量" class="headerlink" title="case 表达式不是常量"></a>case 表达式不是常量</h2><p>再次生成解决方案，你会遇到第三个问题</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">严重性	代码	说明	项目	文件	行	禁止显示状态</span><br><span class="line">错误	C2051	case 表达式不是常量	putty	d:\desktop\putty-en\ssh.c	1372	</span><br></pre></td></tr></table></figure>

<img src="/2018/05/20/build-putty-step-by-step/10.png" class="">

<p>打开项目属性，选中<code>C/C++</code>，将调试信息格式更改为“程序数据库”，</p>
<img src="/2018/05/20/build-putty-step-by-step/11.png" class="">

<h2 id="使用了可能未初始化的本地指针变量"><a href="#使用了可能未初始化的本地指针变量" class="headerlink" title="使用了可能未初始化的本地指针变量"></a>使用了可能未初始化的本地指针变量</h2><p>再次生成解决方案，你会遇到第四个问题</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">严重性	代码	说明	项目	文件	行	禁止显示状态</span><br><span class="line">错误	C4703	使用了可能未初始化的本地指针变量“oev”	putty	d:\desktop\putty-en\windows\winhandl.c	342	</span><br></pre></td></tr></table></figure>
<img src="/2018/05/20/build-putty-step-by-step/12.png" class="">
<p>打开项目属性，选中<code>C/C++</code>，将SDL检查改为否</p>
<img src="/2018/05/20/build-putty-step-by-step/13.png" class="">

<h2 id="noshare-obj-amp-winshare-obj"><a href="#noshare-obj-amp-winshare-obj" class="headerlink" title="noshare.obj &amp; winshare.obj"></a>noshare.obj &amp; winshare.obj</h2><p>再次生成解决方案，好了，你成功的将错误减少到了四个</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">错误	LNK2005	_platform_ssh_share 已经在 noshare.obj 中定义	putty	D:\Desktop\putty-en\windows\VS2017\putty\winshare.obj	1	</span><br><span class="line"></span><br><span class="line">错误	LNK2005	_platform_ssh_share_cleanup 已经在 noshare.obj 中定义	putty	D:\Desktop\putty-en\windows\VS2017\putty\winshare.obj	1	</span><br><span class="line"></span><br><span class="line">错误	CVT1100	资源重复。类型: MANIFEST，名称: 1，语言: 0x0409	putty	D:\Desktop\putty-en\windows\VS2017\putty\CVTRES	1	</span><br><span class="line"></span><br><span class="line">错误	LNK1123	转换到 COFF 期间失败: 文件无效或损坏	putty	D:\Desktop\putty-en\windows\VS2017\putty\LINK	1	</span><br></pre></td></tr></table></figure>

<img src="/2018/05/20/build-putty-step-by-step/14.png" class="">

<p>对于错误1和错误2，我只能说，可能原本设计项目的人比较神奇，这两个错误花了我相当长的时间才排查掉，原因说得很清楚了，在连接<code>winshare.obj</code>的时候，发现函数<code>_platform_ssh_share</code>和<code>_platform_ssh_share_cleanup</code>已经在<code> noshare.obj</code>内定义过，<code>noshare.c</code>文件内的内容如下 </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Stub implementation of SSH connection-sharing IPC, for any</span></span><br><span class="line"><span class="comment"> * platform which can&#x27;t support it at all.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;errno.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;tree234.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;putty.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ssh.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;network.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">platform_ssh_share</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *name, Conf *conf,</span></span></span><br><span class="line"><span class="function"><span class="params">                       Plug downplug, Plug upplug, Socket *sock,</span></span></span><br><span class="line"><span class="function"><span class="params">                       <span class="keyword">char</span> **logtext, <span class="keyword">char</span> **ds_err, <span class="keyword">char</span> **us_err,</span></span></span><br><span class="line"><span class="function"><span class="params">                       <span class="keyword">int</span> can_upstream, <span class="keyword">int</span> can_downstream)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> SHARE_NONE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">platform_ssh_share_cleanup</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>大致上看起来就是重定义了，BUT，为什么原本有的putty项目可以编译？，尝试将<code>noshare.c</code>从项目中移除之后，再次编译，这两错误不见了，但是，为什么原本的项目可以编译呢，好生奇怪，两天之后，偶然发现，原本项目内的<code>noshare.c</code>文件前面的图标和其他源文件长得不一样，仿佛发现了什么，点开属性一看，原来如此:<br>右击<code>noshare.c</code>点击属性，选中常规，点击“项类型”右边的下拉箭头，改成<code>C/C++标头</code>，</p>
<img src="/2018/05/20/build-putty-step-by-step/15.png" class="">

<h2 id="MANIFEST"><a href="#MANIFEST" class="headerlink" title="MANIFEST"></a>MANIFEST</h2><p>再次生成解决方案，好了，这次你只能看到两个问题了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">错误	CVT1100	资源重复。类型: MANIFEST，名称: 1，语言: 0x0409	putty	D:\Desktop\putty-en\windows\VS2017\putty\CVTRES	1	</span><br><span class="line"></span><br><span class="line">错误	LNK1123	转换到 COFF 期间失败: 文件无效或损坏	putty	D:\Desktop\putty-en\windows\VS2017\putty\LINK	1	</span><br></pre></td></tr></table></figure>

<p>但是这两个问题都不是源代码的问题(其实用源码内原本就有的解决方案能编译成功，就说明代码没问题了(PS:严格来说也不是没有可能)),对于<code>错误    CVT1100    资源重复。类型: MANIFEST，名称: 1，语言: 0x0409    putty    D:\Desktop\putty-en\windows\VS2017\putty\CVTRES    1    </code>，右击项目，点击属性，点击清单工具，选中输入和输出，将嵌入清单改成“否”</p>
<img src="/2018/05/20/build-putty-step-by-step/16.png" class="">

<p>再次生成解决方案，错误变成了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">严重性	代码	说明	项目	文件	行	禁止显示状态</span><br><span class="line">错误	LNK2019	无法解析的外部符号 _ImmGetContext@4，该符号在函数 _WndProc@16 中被引用	putty	D:\Desktop\putty-en\windows\VS2017\putty\window.obj	1	</span><br><span class="line">错误	LNK2019	无法解析的外部符号 _ImmReleaseContext@8，该符号在函数 _WndProc@16 中被引用	putty	D:\Desktop\putty-en\windows\VS2017\putty\window.obj	1	</span><br><span class="line">错误	LNK2019	无法解析的外部符号 _ImmGetCompositionStringW@16，该符号在函数 _WndProc@16 中被引用	putty	D:\Desktop\putty-en\windows\VS2017\putty\window.obj	1	</span><br><span class="line">错误	LNK2019	无法解析的外部符号 _ImmSetCompositionFontA@8，该符号在函数 _WndProc@16 中被引用	putty	D:\Desktop\putty-en\windows\VS2017\putty\window.obj	1	</span><br><span class="line">错误	LNK2019	无法解析的外部符号 _ImmSetCompositionWindow@8，该符号在函数 _sys_cursor_update 中被引用	putty	D:\Desktop\putty-en\windows\VS2017\putty\window.obj	1	</span><br><span class="line">错误	LNK1120	5 个无法解析的外部命令	putty	D:\Desktop\putty-en\windows\VS2017\Debug\putty.exe	1	</span><br></pre></td></tr></table></figure>

<img src="/2018/05/20/build-putty-step-by-step/17.png" class="">

<p>熟悉的话，很容易就知道这个是因为缺了静态库<br>右击项目，点击属性，点击链接器，选中输入，点击附加依赖项右边的下拉箭头，点击编辑，</p>
<img src="/2018/05/20/build-putty-step-by-step/18.png" class="">

<p>填入imm32.lib，它看起来就是这样子的</p>
<img src="/2018/05/20/build-putty-step-by-step/19.png" class="">

<p>再次编译，哈哈哈，终于成功了</p>
<img src="/2018/05/20/build-putty-step-by-step/20.png" class="">

<img src="/2018/05/20/build-putty-step-by-step/21.png" class="">

<h2 id="其他可能遇到的问题"><a href="#其他可能遇到的问题" class="headerlink" title="其他可能遇到的问题"></a>其他可能遇到的问题</h2><h3 id="cannot-open-include-file-‘version-h’"><a href="#cannot-open-include-file-‘version-h’" class="headerlink" title="cannot open include file ‘version.h’"></a>cannot open include file ‘version.h’</h3><p>不过你也有可能遇到这个问题</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">严重性	代码	说明	项目	文件	行	禁止显示状态</span><br><span class="line">错误	RC1015	cannot open include file &#39;version.h&#39;.	putty	D:\Desktop\putty-en\windows\version.rc2	9	</span><br></pre></td></tr></table></figure>
<img src="/2018/05/20/build-putty-step-by-step/22.png" class="">
<p>如果你在<a href="#%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80%E5%8C%85%E6%8B%AC%E6%96%87%E4%BB%B6-%E2%80%9Cunix-h%E2%80%9D">第一步</a>中，填写附加包含目录的时候，填在了<code>VC++目录</code>里面，则不会遇到此问题，若是填到了<code>C/C++</code>则会遇到，一个办法是更改到<code>VC++</code>目录去，另外一个办法是在项目属性的资源选项下面，附加目录里面填上<code>..\..\..\./;</code></p>
<img src="/2018/05/20/build-putty-step-by-step/23.png" class="">

<h3 id="关于依赖库"><a href="#关于依赖库" class="headerlink" title="关于依赖库"></a>关于依赖库</h3><p>在putty原本带的解决方案内的附加依赖项是下面这些</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">advapi32.lib</span><br><span class="line">comdlg32.lib</span><br><span class="line">gdi32.lib</span><br><span class="line">imm32.lib</span><br><span class="line">ole32.lib</span><br><span class="line">shell32.lib</span><br><span class="line">user32.lib</span><br></pre></td></tr></table></figure>

<p>在Windows 10 1803上，Visual Studio 2017 的预先包含的静态库里面已经包含了除去<code>imm32.lib</code>之外的所有今天库，所以我只添加了它。有关Visual Studio的各种报错，查看巨硬(微软)的文档是一个好办法，百度得到的办法虽说更为简洁明了一些，但是因为复现环境不一样，有时候并没有效果。</p>
<h3 id="调整项目属性之后不生效"><a href="#调整项目属性之后不生效" class="headerlink" title="调整项目属性之后不生效"></a>调整项目属性之后不生效</h3><p>PS：若是调整项目属性之后不生效，请留意调整的项目和生成解决方案的是否是同一个编译选项</p>
<img src="/2018/05/20/build-putty-step-by-step/24.png" class="">

<h3 id="让其他项目用同样的属性"><a href="#让其他项目用同样的属性" class="headerlink" title="让其他项目用同样的属性"></a>让其他项目用同样的属性</h3><p>按照上一个描述的问题，对于一个工程，在win32和x86的Release和Debug模式都需要调整属性，就整整四个了，整个PuTTY解决方案其实包括了 <code>pageant plink pscp psftp putty puttygen puttytel testbn</code>,其它七个再来一次，简直爽歪歪，这个时候项目属性表就有用了，可以参考<a href="https://www.cnblogs.com/haomiao/p/5812860.html">https://www.cnblogs.com/haomiao/p/5812860.html</a>，若是找不到属性管理器，可以点击视图下的其他窗口的“属性管理器”。</p>
<h3 id="懒人包"><a href="#懒人包" class="headerlink" title="懒人包"></a>懒人包</h3><p>GitHub上有已经汉化完成的版本——<a href="https://github.com/larryli/PuTTY">https://github.com/larryli/PuTTY</a><br>下载搭建好的PuTTY的Visual Studio 2017解决方案，可以前往<a href="https://github.com/BDZNH/PuTTY">https://github.com/BDZNH/PuTTY</a></p>
]]></content>
  </entry>
  <entry>
    <title>手动编译shadowsocks-libev</title>
    <url>/2018/03/16/build-shadowsocks-libev/</url>
    <content><![CDATA[<p>把树莓派的系统刷掉了，重新装了一些环境，shadowsocks-libev是比较活跃的分支，更新得较为频繁，在树莓派的官方源内的版本较低，这里记录一下安装过程。</p>
<a id="more"></a>

<h2 id="为Linux编译"><a href="#为Linux编译" class="headerlink" title="为Linux编译"></a>为Linux编译</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/shadowsocks/shadowsocks-libev.git</span><br><span class="line"><span class="built_in">cd</span> shadowsocks-libev</span><br><span class="line">git submodule update --init --recursive</span><br></pre></td></tr></table></figure>

<h3 id="编译准备"><a href="#编译准备" class="headerlink" title="编译准备"></a>编译准备</h3><h4 id="安装基本依赖环境"><a href="#安装基本依赖环境" class="headerlink" title="安装基本依赖环境"></a>安装基本依赖环境</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install --no-install-recommends gettext build-essential autoconf libtool libpcre3-dev  xmlto libev-dev libc-ares-dev automake</span><br></pre></td></tr></table></figure>

<p>这里本该装<code>asciidoc</code>，但是它有1GB+，这对于树莓派来说已经是一个巨型软件了，所以没有装。</p>
<h4 id="安装加密协议依赖包"><a href="#安装加密协议依赖包" class="headerlink" title="安装加密协议依赖包"></a>安装加密协议依赖包</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Installation of Libsodium</span></span><br><span class="line"><span class="built_in">export</span> LIBSODIUM_VER=1.0.17</span><br><span class="line">wget https://download.libsodium.org/libsodium/releases/libsodium-<span class="variable">$LIBSODIUM_VER</span>.tar.gz</span><br><span class="line">tar xvf libsodium-<span class="variable">$LIBSODIUM_VER</span>.tar.gz</span><br><span class="line"><span class="built_in">pushd</span> libsodium-<span class="variable">$LIBSODIUM_VER</span></span><br><span class="line">./configure --prefix=/usr &amp;&amp; make</span><br><span class="line">sudo make install</span><br><span class="line"><span class="built_in">popd</span></span><br><span class="line">sudo ldconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># Installation of MbedTLS</span></span><br><span class="line"><span class="built_in">export</span> MBEDTLS_VER=2.16.0</span><br><span class="line">wget https://tls.mbed.org/download/mbedtls-<span class="variable">$MBEDTLS_VER</span>-gpl.tgz</span><br><span class="line">tar xvf mbedtls-<span class="variable">$MBEDTLS_VER</span>-gpl.tgz</span><br><span class="line"><span class="built_in">pushd</span> mbedtls-<span class="variable">$MBEDTLS_VER</span></span><br><span class="line">make SHARED=1 CFLAGS=-fPIC</span><br><span class="line">sudo make DESTDIR=/usr install</span><br><span class="line"><span class="built_in">popd</span></span><br><span class="line">sudo ldconfig</span><br></pre></td></tr></table></figure>

<h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure --disable-documentation</span><br><span class="line">make -j4</span><br></pre></td></tr></table></figure>

<p>参数<code>--disable-documentation</code>是在没有安装<code>asciidoc</code>的情况下使用的，编译完成后可以在<code>src</code>目录里面找到它们。</p>
<h2 id="为-Windows-编译"><a href="#为-Windows-编译" class="headerlink" title="为 Windows 编译"></a>为 Windows 编译</h2><h3 id="在Windows上编译"><a href="#在Windows上编译" class="headerlink" title="在Windows上编译"></a>在Windows上编译</h3><p>在 Windows 上的编译步骤很少，但是不太好实现。很多时候都会因为网络原因中断。方法如下：<br>到<a href="https://www.docker.com/">https://www.docker.com/</a>下载Docker安装。<br>然后将shadowsocks项目克隆到本地，再双击<code>docker\mingw</code>内的<code>make.bat</code>，等待编译完成就好。不过得实现配置好MinGW的环境。<br>这里提供已经编译好的Windows程序<a href="https://github.com/BDZNH/shadowsocks-libev/releases">https://github.com/BDZNH/shadowsocks-libev/releases</a></p>
<h3 id="在Linux上编译"><a href="#在Linux上编译" class="headerlink" title="在Linux上编译"></a>在Linux上编译</h3><p>docker在Windows上的安装步骤稍微麻烦一些，在Linux上安装就方便得多了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install docker</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install docker.io</span><br></pre></td></tr></table></figure>

<p>安装好docker之后，使用命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service docker start</span><br></pre></td></tr></table></figure>

<p>启动docker，然后到Shaodwoskcs的<code>docker/mingw</code>目录下面运行make命令，等待完成就好，优势在于可以在VPS上运行，不用顾及网络。</p>
]]></content>
  </entry>
  <entry>
    <title>启用树莓派摄像头</title>
    <url>/2017/08/01/camera-on-raspberry/</url>
    <content><![CDATA[<p>树莓派有很多官方出品的配件，虽然很多配件比树莓派自己还贵，但是总有一些值得玩的小物件，比如“camera”</p>
<img src="/2017/08/01/camera-on-raspberry/1.jpg" class="" title="Camera">
<a id="more"></a>

<h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><blockquote class="blockquote-center">
            <p>用这个摄像头做监控</p>

          </blockquote>

<h2 id="实施过程"><a href="#实施过程" class="headerlink" title="实施过程"></a>实施过程</h2><p>首先的首先，确保你已经通过putty或者什么软件之类的，或者键盘什么的能连接上树莓派，并且打开了终端。</p>
<h3 id="raspivid-amp-vlc"><a href="#raspivid-amp-vlc" class="headerlink" title="raspivid &amp; vlc"></a>raspivid &amp; vlc</h3><p>使用命令安装所需软件包：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install raspivid vlc -y</span><br></pre></td></tr></table></figure>

<p><code>raspivid</code>是官方的调用树莓派摄像头的软件包，若树莓派上安装的不是<code>raspbian</code>，则需要用其他软件了。</p>
<p>现在你可以输入</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">raspivid -t 0 -hf</span><br></pre></td></tr></table></figure>

<p>来显示图像了，如果树莓派上插了显示器，你就能在显示器上看到摄像头的画面了。但是最终目标可不是把显示器插在树莓派上，而是要将画面显示在电脑显示器上。</p>
<p>输入以下命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">raspivid -o - -t 0 -hf -w 1280 -h 720 -fps 30 |cvlc -vvv stream:///dev/stdin --sout &#x27;#standard&#123;access=http,mux=ts,dst=:8160&#125;&#x27; :demux=h264</span><br></pre></td></tr></table></figure>

<p>然后，需要在电脑上安装支持流媒体的播放器，这里推荐<a href="http://potplayer.daum.net/?lang=zh_CN">potplayer</a> 和 <a href="http://www.videolan.org/">VLC media player</a> 按下<code>ctrl u(for potplayer)</code> 或者<code>ctrl N(for vlc media palyer)</code>，将树莓派的ip地址给贴进去，这里我的树莓派的地址是<code>192.168.100.109</code>，你也可以输入</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ifconfig | grep &quot;inet addr&quot;</span><br></pre></td></tr></table></figure>

<p>来查看树莓派的IP地址，然后以<code>http://x.x.x.x:8160</code>的格式粘贴到播放器的框里面去，确定就OK了。</p>
<img src="/2017/08/01/camera-on-raspberry/2.jpg" class="" title="给我的小风扇来张特写">

<p>用这个方法简单一些，但是延迟非常高，图像质量也不怎么样，所以提供第二个办法</p>
<h3 id="mjpg-stream"><a href="#mjpg-stream" class="headerlink" title="mjpg-stream"></a>mjpg-stream</h3><p>用这个的话，延迟低了很多，并且质量也不错，极力推荐。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd ~</span><br><span class="line">sudo apt-get install cmake libjpeg8-dev git-core</span><br><span class="line">git clone https://github.com/jacksonliam/mjpg-streamer</span><br><span class="line">cd mjpg-streamer-master/mjpg-streamer-experimental/</span><br><span class="line">make</span><br></pre></td></tr></table></figure>

<p>这个时候可执行程序已经编译好了，可以选择执行<code>make install</code>来将软件安装到系统，也可以不安装，直接执行。</p>
<p>然后：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./mjpg_streamer -i &quot;./input_raspicam.so -fps 30 -x 854 -y 480&quot; -o &quot;./output_http.so -w ./www&quot;</span><br></pre></td></tr></table></figure>

<p>这个时候，在谷歌浏览器或者火狐浏览器(IE和Edge浏览器不行)打开<code>http://x.x.x.x:8080/?action=stream</code>即可看到树莓派摄像头的画面。</p>
<p>或者将上面的地址粘贴到vlc media player里面去也可以看(potplayer不可以)。</p>
<h3 id="参数调整"><a href="#参数调整" class="headerlink" title="参数调整"></a>参数调整</h3><p>对于第一种办法，可以通过调整<code>-w -h -fps</code>来调整画面质量，还可以通过添加<code>-rot</code>参数来调整画面旋转角度。</p>
<p>对于第二种办法，可以通过调整<code>-x -y -fps</code>来调整画面质量，也可以通过添加<code>-rot</code>参数来调整画面旋转角度。</p>
<p>PS：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MJPG Streamer Version.: 2.0</span><br><span class="line"> i: Using V4L2 device.: &#x2F;dev&#x2F;video0</span><br><span class="line"> i: Desired Resolution: 640 x 480</span><br><span class="line"> i: Frames Per Second.: -1</span><br><span class="line"> i: Format............: JPEG</span><br><span class="line"> i: TV-Norm...........: DEFAULT</span><br><span class="line">ERROR opening V4L interface: No such file or directory</span><br><span class="line"> Init v4L2 failed !! exit fatal</span><br><span class="line"> i: init_VideoIn failed</span><br></pre></td></tr></table></figure>

<p>这个错误是因为使用了不对等的输入文件，<code>input_raspicam.so</code>对应的是树莓派官方摄像头，而<code>input_uvc.so</code>对应的是USB摄像头。</p>
<p>对于两种命令的更多使用方法，查看文档咯。</p>
<blockquote class="blockquote-center">
            <p>生命重在折腾</p>

          </blockquote>]]></content>
  </entry>
  <entry>
    <title>关闭Chrome的“推荐的文章”</title>
    <url>/2017/08/31/close-suggested-article/</url>
    <content><![CDATA[<img src="/2017/08/31/close-suggested-article/1.png" class="">

<a id="more"></a>

<p>手机版的Chrome打开会显示<code>推荐的文章</code>，<code>下载的内容</code>，<code>最近使用的书签</code>，作为资深强迫症，肯定是要把它去掉的。先放解决办法，在地址栏分别输入以下内容：</p>
<blockquote class="blockquote-center">
            <p><del>chrome://flags/#enable-ntp-popular-sites</del></p>
<p>chrome://flags/#enable-ntp-remote-suggestions</p>

          </blockquote>

<p>然后改成“禁用”或者“disable”，Chrome会提示重启，重启后就没有了。</p>
<img src="/2017/08/31/close-suggested-article/2.png" class="" title="chrome:&#x2F;&#x2F;flags&#x2F;#enable-ntp-popular-sites">

<img src="/2017/08/31/close-suggested-article/3.png" class="" title="chrome:&#x2F;&#x2F;flags&#x2F;#enable-ntp-remote-suggestions">

<p>如上图，若要把<code>最近使用的书签</code>，<code>下载内容</code>也去掉，就在地址栏输入:</p>
<blockquote class="blockquote-center">
            <p>chrome://flags/#enable-ntp-bookmark-suggestion</p>
<p>chrome://flags/#enable-ntp-offline-page-download-suggestions</p>
<p>chrome://flags/#enable-ntp-asset-download-suggetons</p>

          </blockquote>

<p>本来没有必要说的，百度一搜一大把，然而<code>其实百度得到的解决办法都是同一个，而且不生效</code>，或者说百度的办法已经失效，比如<a href="https://www.anfensi.com/news/127700.html">此文</a>。默默的吐槽一下，转人家的文章转就转吧，不验证是否有用就算吧，还不标明文章出处，翻遍百度无果，求助谷歌，参考<code>https://www.reddit.com/r/Android/comments/6b3ubd/how_to_disable_in_chrome_58_new_tab_page_ntp/</code>，然而，其实此文也有误，去掉下载的内容的办法也不生效，所以写下此文。</p>
<p>都去掉之后，chrome打开就变成这样了</p>
<img src="/2017/08/31/close-suggested-article/4.png" class="">

<blockquote class="blockquote-center">
            <p>生命重在折腾</p>

          </blockquote>
]]></content>
  </entry>
  <entry>
    <title>CSGO联机的小事儿</title>
    <url>/2019/10/07/create-a-own-csgo-public-server/</url>
    <content><![CDATA[<h2 id="CS-GO-联机的那些事儿"><a href="#CS-GO-联机的那些事儿" class="headerlink" title="CS:GO 联机的那些事儿"></a>CS:GO 联机的那些事儿</h2><p>CS也是一款相当经典的枪战游戏了，这几天琢磨了一些联机的事情，这里汇总一下。</p>
<h2 id="局域网联机"><a href="#局域网联机" class="headerlink" title="局域网联机"></a>局域网联机</h2><p>搜到的资料大都不太全，并且是很老很老版本的CSGO，甚至是CS1.6版本，若是硬件条件满足的话，CSGO的体验会好一些。</p>
<p>局域网联机需要一个人打开“机器人练习赛”，然后打开任意地图，另外一个人在控制台输入 “connect x.x.x.x”，x.x.x.x 为先打开地图的人电脑的IP。</p>
<p>打开控制台需要在 设置/游戏设置/游戏/启用开发者控制台/是 ，然后按下 “`”，就是波浪线上的那个键。</p>
<a id="more"></a>

<h2 id="远程联机"><a href="#远程联机" class="headerlink" title="远程联机"></a>远程联机</h2><p>远程联机最方便的应该是官方匹配，不过我等菜鸡打官服总是一露面就被打死，对新手不太友好。那么我想与某个好友远程联机打机器人的话需要怎么办？</p>
<p>V 社官方提供了搭建CSGO服务器的办法：<a href="https://developer.valvesoftware.com/wiki/Counter-Strike:_Global_Offensive_Dedicated_Servers">https://developer.valvesoftware.com/wiki/Counter-Strike:_Global_Offensive_Dedicated_Servers</a></p>
<p>大多数时候按照这个链接做就可以了。建议先看官方的文档，我这里可能没有遇到某些问题。下面分为Windows和Linux两个平台讲述。</p>
<h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>无论是Windows还是Linux，首先我们都需要安装 <a href="https://developer.valvesoftware.com/wiki/SteamCMD#Downloading_SteamCMD">steamcmd</a> ,对于Windows，可以直接下载<a href="https://steamcdn-a.akamaihd.net/client/installer/steamcmd.zip">https://steamcdn-a.akamaihd.net/client/installer/steamcmd.zip</a>，解压到任意非Steam目录的文件夹，这里用D:\steamcmd做示范。<br>使用命令提示符(CMD),切到这个文件夹，直接输入 <code>steamcmd</code> ，然后输入 <code>login anonymous</code> ，也就是匿名登录，steamcmd 实际上是用来下载CSGO服务端（实际上也是Steamapps目录里面的客户端，猜测是服务端添加了某些启动参数），然后输入<code>force_install_dir D:\csgo\</code>，接着输入<code>app_update 740 validate</code>，这里的740指的就是CSGO，V设还提供了其他游戏的服务端，找对应的appid就可以。输完这个命令之后steamcmd就会把服务端下载到<code>D:\csgo\</code>，大小约20GB，用时看网速。</p>
<p>下载好之后输入<code>quit</code>即可退出当前终端。</p>
<p>然后进入<code>D:\csgo\</code>，输入<code>srcds -game csgo -console -usercon +game_type 0 +game_mode 0 +mapgroup mg_active +map de_dust2</code>即可开启一个服务器，这个时候局域网已经可以连接了，但是我们的目标是远程联机的话，还需要更多的参数。</p>
<p>这里参考了另外一个网站:<a href="https://steamcn.com/t372733-1-1">https://steamcn.com/t372733-1-1</a>，但是这个链接的内容有误，按照里面给出的参数输入后没法连接。</p>
<p>上面的命令行仅支持LAN(局域网)连接，服务端判断局域网的条件是IP段为10.0.0.0-10.255.255.255,172.16.0.0-172.31.255.255,192.168.0.0-192.168.255.255。远程联机的时候，服务器需要运行在一台能在公网访问的电脑上，那么IP并不是这一段。我们需要更多的参数。</p>
<p>这里我们需要前往<a href="https://steamcommunity.com/dev/managegameservers">https://steamcommunity.com/dev/managegameservers</a>申请一个用于验证的密钥，或者token，或者令牌，指的都是那一长串字母。</p>
<p>拿到令牌之后，输入<code>./srcds_run -game csgo -console -usercon +game_type 0 +game_mode 0 +mapgroup mg_active +map de_dust2 +sv_setsteamaccount XXXXXXXXXXXXXXXXXXXXXXXXXXXX -net_port_try 1 -nomaster -port 1234</code>，这里的 XXXXXXXXXXXXXX就是你申请到的令牌。这个时候在游戏内通过控制台输入<code>connect x.x.x.x:1234</code>就可以连接了。</p>
<p>需要留意的是，使用Windows时，开服务器的电脑不能启动CSGO游戏实例，原因自然也是服务端实际上只是特殊形式的客户端，或者说客户端只是特殊形式的服务端，V社应该没有做双开。</p>
<h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><p>Linux 相对 Windows 来说，可能是更多人会面临的搭建公网服务器的选择。<br>对于 Linux 系统，个人更加推荐首先阅读官方的教程。这里仅仅说一下大概的流程，先安装steamcmd，然后登陆steamcmd之后安装csgo的客户端（实际上也就是服户端，服务端的文件在steam里面直接安装的csgo的文件绝大部分是相同的，启动方式不太一样）。在启动的时候输入相应的启动参数，比如服务端的地图，难度，限制人数之类的快就可以启动了。</p>
<p>如果你有一个公网上运行的电脑倒是相当方便，和Windows几乎一样，如果没有的话，你需要弄一些端口转发之类的操作。</p>
]]></content>
  </entry>
  <entry>
    <title>Linux的中文乱码问题</title>
    <url>/2017/05/27/encoding-on-linux/</url>
    <content><![CDATA[<img src="/2017/05/27/encoding-on-linux/1.jpg" class="" title="当当当">
<a id="more"></a>
<h2 id="乱语"><a href="#乱语" class="headerlink" title="乱语"></a>乱语</h2><p>在Linux经常遇到中文乱码的情况，整理一下:</p>
<ol>
<li>字符集不能显示中文;</li>
<li>终端不能正常显示中文;</li>
<li>文件名本身便是乱码的(多见于 Windows 下拷贝文件到 Linux )。</li>
</ol>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><ol>
<li>字符集的问题，大多数情况下，在终端里面输入<code>locale</code>,查看当前系统所支持的字符集，改变当前用户或者系统的字符集，就可以了。如图<img src="/2017/05/27/encoding-on-linux/2.jpg" class="">带<code>utf-8</code>的都可以显示中文，在终端输入<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="built_in">export</span> LANG=zh-CN.UTF-8 &gt;&gt; .bashrc</span><br><span class="line"><span class="built_in">source</span> .bashrc</span><br></pre></td></tr></table></figure>
来改变当前用户所使用的字符集就可以了；</li>
<li>第二种，终端问题，症状表现为，在GUI界面或者Windows的xshell、putty、cmder远程ssh登录Linux可以正常显示中文，但是Linux主机连接显示器之后，在tty界面(亦称纯字符界面，按ctrl + Alt + F1/2/3/4/5/6可以打开)中文显示为方框或者问号。百度得到的答案有两种——安装zhcon或者fbterm，经试验，<a href="https://zh.opensuse.org/SDB:Fbterm">fbterm</a>表现效果较佳；</li>
<li>第三种的话，给文件名的编码方式改一下就好，可参考<a href="http://blog.sina.com.cn/s/blog_7842b12b01018pzl.html">此文章</a>。</li>
</ol>
<h2 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h2><p>为了兼容各种语言，生出了N多字符集，若是能够大一统，自然最好了，省得折腾。不过由于各种纠纷，就算有一个字符集能够显示所有文字，还是没办法统一起来。<br>至于tty界面下无法正常显示中文，是因为内核上不支持，可以通过为内核安装补丁解决，也可以通过安装<code>fbterm</code>这样的类终端软件解决，能搞定就好了，管他呢。</p>
<blockquote class="blockquote-center">
            <p>生命重在折腾 </p>

          </blockquote>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 系统中，gets函数出错</title>
    <url>/2017/01/08/error-in-Linux-when-use-C-language/</url>
    <content><![CDATA[<p>其实这是在很早之前就遇到的问题，这样一个简单的程序</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">char</span> str[<span class="number">100</span>];</span><br><span class="line">        gets(str);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>在Linux中使用<code>gcc</code>编译这段代码的时候，出现如下错误</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">warning: <span class="string">&#x27;gets&#x27;</span> is deprecated (declared at /usr/include/stdio.h:638) [-Wdeprecated-declarations]</span><br><span class="line">  gets(str);</span><br><span class="line">  ^</span><br><span class="line">/tmp/ccf5cnfv.o: In <span class="keyword">function</span> `main<span class="string">&#x27;:</span></span><br><span class="line"><span class="string">test.c:(.text+0x10): warning: the `gets&#x27;</span> <span class="keyword">function</span> is dangerous and should not be used.</span><br></pre></td></tr></table></figure>
<p>最后一行说了，gets函数是危险的，不应该被使用。<br>当初人比较二的时候，用了这样一个<a href="http://www.cnblogs.com/hushuangpu/p/5271464.html">办法</a>,发在了博客园。<br>现在感觉有诸多漏洞，还是补一下比较好。<br>求助google，在stackoverflow找到了<a href="http://stackoverflow.com/questions/2843073/warninggets-function-is-dangerous">解决办法</a><br>这样做</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">char</span> str[<span class="number">100</span>];</span><br><span class="line">        fgets(str,<span class="number">100</span>,<span class="built_in">stdin</span> );</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用<code>fgets</code>函数来代替<code>gets</code>函数，但是实际上这里仍然有局限性，fgets函数中的第二个参数限制了能输入的字符数目，似乎我比较二的时候，想出来的解决办法更好呢^_^</p>
<h2 id="原因说明"><a href="#原因说明" class="headerlink" title="原因说明"></a>原因说明</h2><p><em>If you have code like this:</em></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> s[<span class="number">10</span>];</span><br><span class="line">gets( s );</span><br></pre></td></tr></table></figure>
<p><em>and you type in more than 10 characters when the program is run, you will overflow the buffer, causing undefined behaviour. The gets() function has no means of preventing you typing the characters and so should be avoided. Instead you should use fgets(), which allows you to limit the number of characters read, so that the buffer does not overflow.:</em></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> s[<span class="number">10</span>];</span><br><span class="line">fgets( s, <span class="number">10</span>, <span class="built_in">stdin</span> );</span><br></pre></td></tr></table></figure>
<p><em>The puts() function is perfectly safe, provided the string that you are outputting is null-terminated.</em><br>不想用机翻的来给你看，将就一下 =_=</p>
<blockquote class="blockquote-center">
            <p>生命重在折腾 </p>

          </blockquote>]]></content>
      <tags>
        <tag>C</tag>
        <tag>C++</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Minecraft正版服无法登录</title>
    <url>/2018/05/26/error-of-minecraft/</url>
    <content><![CDATA[<img src="/2018/05/26/error-of-minecraft/1.jpg" class="">

<a id="more"></a>

<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><ul>
<li>西电的校园网和翼讯环境均无法成功登录客户端</li>
<li>电脑开启代理之后，客户端能登录成功，游戏内仍然无法连接正版服</li>
<li>手机（联通）开热点之后，能连接正版服，本地开启的服务器（开启了正版验证）也能登录了</li>
</ul>
<p>排除被mojang ban掉，更换dns无效，推测是西电的网络环境的锅。</p>
<p>经常跨地域更换IP，账号有可能会被Mojang ban掉，所以不想总是开着vps得代理，并且远程的vps很干扰正常使用。</p>
<p>解决办法如下，开启系统代理，客户端成功登录之后，给jvm设置代理参数，让Minecraft运行的时候走代理，这样就不用在电脑上常开代理了。</p>
<p>在启动选项里，填入jvm的代理参数，代理参数有如下几种</p>
<h3 id="http"><a href="#http" class="headerlink" title="http"></a>http</h3><ul>
<li>-DhttpProxyHost=x.x.x.x</li>
<li>-DhttpProxyPort=xxx<h3 id="https"><a href="#https" class="headerlink" title="https"></a>https</h3></li>
<li>-DhttpsProxyHost=x.x.x.x</li>
<li>-DhttpsProxyPort=xxx<h3 id="socks"><a href="#socks" class="headerlink" title="socks"></a>socks</h3></li>
<li>-DsocksProxyHost=x.x.x.x</li>
<li>-DsocksProxyPort=xxx</li>
</ul>
<img src="/2018/05/26/error-of-minecraft/2.png" class="">]]></content>
  </entry>
  <entry>
    <title>Gcc静态编译</title>
    <url>/2017/08/25/gcc-static/</url>
    <content><![CDATA[<img src="/2017/08/25/gcc-static/5.png" class="">

<a id="more"></a>

<p>用Gcc(G++)编译一个小程序的时候，本地主机配置好了环境，默认的编译命令使用了动态链接库，这样编译出来的程序在本地主机上是可以直接运行的，并且这样的小程序有另外一个好处——体积特别小，因为动态链接库已经在本地主机上了，不必另外安装，可是把这个小程序拷贝到另外一个电脑上去的话，问题就来了，总是提示缺少”***.dll”文件，解决办法是将动态链接库一起拷贝过去，缺哪一个就拷贝哪一个，另外一个问题又来了，有时候动态链接库还挺大的，数目还不少，对于一些仅有几MB的文件来说，带着一大堆”.dll”文件简直可以逼死强迫症，然后，静态编译就派上用场啦。</p>
<h2 id="情景再现"><a href="#情景再现" class="headerlink" title="情景再现"></a>情景再现</h2><img src="/2017/08/25/gcc-static/1.png" class="">

<p>如图，用默认的动态编译命令，生成的debug版本可执行文件仅有212KB，Release版本仅有157KB，若没有配置环境变量，运行这个程序则会得到如下提示：</p>
<img src="/2017/08/25/gcc-static/2.png" class="">

<p>并不一定是缺少图中的”libstdc++-6.dll”文件，具体缺少哪些文件是源代码确定的，一劳永逸的办法是使用静态编译命令，这样用到的动态链接库可以集成到可执行文件里面去，直接拷贝到另外一台电脑就可以用了，方法是，最后生成可执行文件时，加上<code>-static</code>参数</p>
<h2 id="CodeBlocks实现"><a href="#CodeBlocks实现" class="headerlink" title="CodeBlocks实现"></a>CodeBlocks实现</h2><p>依次点击<code>Setting</code>—&gt;<code>Complier settings</code>—&gt;<code>Linker Settings</code>，将参数填在如图的框里面：</p>
<img src="/2017/08/25/gcc-static/3.png" class="">

<p>静态编译生成的可执行文件体积较大，这里生成的debug版本的可执行文件体积已经达到<code>1540KB</code>，差不多变大了六倍吧，Release版本的达到<code>798KB</code>，对于数MB的小程序来说，用静态编译很合适，免去了各种”.dll”文件缺失的麻烦，把静态编译生成的Release版本的可执行文件拷贝给别人就好了，dll文件可以不用管。</p>
<img src="/2017/08/25/gcc-static/4.png" class="">

<p>动态编译还是有好处的，链接库只用安装一次，所有用到该链接库的程序就不用自带链接库，程序的体积会变得小一点。</p>
<p>_似乎说了一大堆废话_╮(╯-╰)╭</p>
<blockquote class="blockquote-center">
            <p>生命重在折腾</p>

          </blockquote>]]></content>
      <tags>
        <tag>gcc</tag>
      </tags>
  </entry>
  <entry>
    <title>在Linux中获取可更新软件的下载地址</title>
    <url>/2017/03/12/get-the-download-link-of-the-upgradeble-software-on-Linux/</url>
    <content><![CDATA[<img src="/2017/03/12/get-the-download-link-of-the-upgradeble-software-on-Linux/1.jpg" class="" title="啊哈哈哈哈哈~~~~~">
<a id="more"></a>
<h2 id="背景描述"><a href="#背景描述" class="headerlink" title="背景描述:"></a>背景描述:</h2><p>依旧是之前遇到的问题————更新软件超级慢。<br>虽然之前在之前的<a href="https://bdznh.github.io/2017/01/25/use-proxy-in-terminal/">文章</a>中提及过，可以使用代理来更新软件源，但是有时候就算代理了速度也很慢，区区几M的软件需要花费数个小时才能下载好。<br>所以有了此文。</p>
<h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p>获取到想要更新的软件的下载地址，然后用IDM、迅雷、aria2c之类的下载工具来下载，速度会快很多。</p>
<h2 id="实施步骤"><a href="#实施步骤" class="headerlink" title="实施步骤"></a>实施步骤</h2><h3 id="原理说明"><a href="#原理说明" class="headerlink" title="原理说明"></a>原理说明</h3><p>在文章<a href="http://www.cnblogs.com/hushuangpu/p/5247084.html">http://www.cnblogs.com/hushuangpu/p/5247084.html</a>中提到过一点。根据当初我编写该文时的状况来看，在更新软件的时候，若遇到网络故障(比如该文中的IPv4不能联网或者干脆断网的情况下)，则<code>apt-get</code>会报错，我们便能在报错信息里面看到软件的下载地址了。</p>
<h3 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h3><p>为了能让Linux网络正常的情况下，使用<code>apt-get</code>时无法正常连接网络，我们还需要动一些小手段。<br>我是这么干的：<br><a href="https://bdznh.github.io/2017/01/25/use-proxy-in-terminal/">安装Proxychains</a>，但是不开启本地的socks5代理端口，这样Proxychains将<code>apt-get</code>的网络访问劫持到该端口的时候，发现没有网络，便会报错，方便我们拿到软件的下载地址。</p>
<h3 id="下载软件"><a href="#下载软件" class="headerlink" title="下载软件"></a>下载软件</h3><p>得到了软件的下载链接之后，直接用下载工具下载好之后，把文件复制到<code>/var/cache/apt/archives/</code>，再通过<code>sudo apt-get upgrade</code>即可飞速更新软件。</p>
<p>通过此法，我成功的把原本需要一个半小时才能更新完软件的时间缩短到10分钟。此处脑补一个得瑟表情。</p>
<blockquote class="blockquote-center">
            <p>生命重在折腾</p>

          </blockquote>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>一个在线的文件浏览器</title>
    <url>/2018/03/30/h5ai/</url>
    <content><![CDATA[<p>之前租的VPS过期了，折折腾腾，修修补补又换回搬瓦工，用上了久负盛名的CN2路线，表现比之前的digitalocean好多了，digitalocean的优势在于同时支持BBR和IPv6，搬瓦工这边BBR和IPv6只能二选一，虽然已经有在openVz上安装BBR的方法，但是效果并不是很好，今年翼讯升级了一下，比以往好用得多，于是选了有BBR的版本。<br>有这样一个长期开机的东西，自然不会让它吃灰，，目前的打算是让它作为一个下载中转站，aria2开服下载，h5ai作为在线文件浏览器，抽空可以从VPS上高速把文件弄回来。</p>
<img src="/2018/03/30/h5ai/1.png" class="" title="h5ai show">

<a id="more"></a>

<h2 id="安装h5ai"><a href="#安装h5ai" class="headerlink" title="安装h5ai"></a>安装<a href="https://larsjung.de/h5ai/">h5ai</a></h2><p><a href="https://larsjung.de/h5ai/">h5ai</a>是一个非常美观的目录列表程序，如上图，安装h5ai之后，可以实现在线的文件浏览，安装相应的依赖之后，可以在线预览文件，包括图片、视频和压缩包，可以说是相当的方便了，装在树莓派上的话，就可以让树莓派把视频下载好，直接观看了，不用传回电脑来。</p>
<h3 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h3><p>提前安装好nginx（其实在装好PHP之后安装也是可以的）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install nginx -y <span class="comment">#for CentOS</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># OR</span></span><br><span class="line"></span><br><span class="line">sudo apt install nginx <span class="comment">#for Ubuntu/debian</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h3 id="安装PHP"><a href="#安装PHP" class="headerlink" title="安装PHP"></a>安装PHP</h3><p>h5ai依赖于PHP运行，h5ai本身的安装并不复杂，就整个过程而言，复杂的是安装PHP，CentOS 7.4 所携带的PHP版本最高到 PHP 5.4， h5ai要求的PHP为5.5+，刚好不符合要求，下面先放安装PHP的过程。</p>
<h4 id="在CentOS上安装PHP"><a href="#在CentOS上安装PHP" class="headerlink" title="在CentOS上安装PHP"></a>在CentOS上安装PHP</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br><span class="line">rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm</span><br><span class="line">yum --enablerepo=remi,remi-php72 install nginx php-fpm php-common</span><br><span class="line">yum --enablerepo=remi,remi-php72 install php-opcache php-pecl-apcu php-cli php-pear php-pdo php-mysqlnd php-pgsql php-pecl-mongodb php-pecl-redis php-pecl-memcache php-pecl-memcached php-gd php-mbstring php-mcrypt php-xml</span><br><span class="line">service php-fpm start</span><br></pre></td></tr></table></figure>

<p>这里使用了第三方库，自行编译有很多需要配置的地方，很容易出错，尝试了很多次，总是有点毛病，还是回头用了这个办法。</p>
<h4 id="在Ubuntu-debian上安装PHP"><a href="#在Ubuntu-debian上安装PHP" class="headerlink" title="在Ubuntu/debian上安装PHP"></a>在Ubuntu/debian上安装PHP</h4><p>在Ubuntu/debian上安装PHP相对来说方便得多了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update </span><br><span class="line">sudo apt install php-fpm -y</span><br></pre></td></tr></table></figure>

<h3 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h3><p>向nginx的配置内的server段写入以下内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">location ~ \.php$ &#123;</span><br><span class="line">        include /etc/nginx/fastcgi_params;</span><br><span class="line">        fastcgi_pass  127.0.0.1:9000;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>并且更改<code>index</code>段内容为<code>index  index.html  index.php  /_h5ai/public/index.php;</code><br>然后</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo nginx -t</span><br><span class="line">sudo nginx -s reload</span><br></pre></td></tr></table></figure>

<p><code>-t</code>提示都OK的话，这个时候nginx已经能识别PHP了。</p>
<p>如果出现错误<code>nginx: [error] invalid PID number &quot;&quot; in &quot;/usr/local/var/run/nginx/nginx.pid&quot;</code>,那么使用命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo nginx -c /etc/nginx/nginx.conf</span><br><span class="line">sudo nginx -s reload</span><br></pre></td></tr></table></figure>

<p>这个时候PHP应该已经安装好并且已经启动了，到nginx的工作目录<code>/var/www/html/</code>或者<code>/usr/share/nginx/html/</code>（一般在这两个位置，），新建一个php文件，比如<code>vim /usr/share/nginx/html/index.php</code>，按<code>I</code>键进入编辑模式，添加以下内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    phpinfo();</span><br></pre></td></tr></table></figure>

<p>这个时候，打开如下链接<code>http://x.x.x.x/index.php</code>(x.x.x.x是VPS的公网IP地址)，出现如下画面表示安装成功</p>
<img src="/2018/03/30/h5ai/2.png" class="" title="PHP is OK.">

<h3 id="安装h5ai-1"><a href="#安装h5ai-1" class="headerlink" title="安装h5ai"></a>安装h5ai</h3><p>到<a href="https://larsjung.de/h5ai/">作者的网站</a>下载源码包到nginx的工作目录并解压</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html #or use: cd &#x2F;var&#x2F;www&#x2F;html&#x2F;</span><br><span class="line">wget https:&#x2F;&#x2F;release.larsjung.de&#x2F;h5ai&#x2F;h5ai-0.29.0.zip</span><br><span class="line">unzip h5ai-0.29.0.zip</span><br></pre></td></tr></table></figure>

<p>这个时候，访问<code>http://x.x.x.x/_h5ai/public/index.php</code>，出现如下画面表示<code>h5ai</code>安装成功</p>
<img src="/2018/03/30/h5ai/4.jpg" class="">

<img src="/2018/03/30/h5ai/3.jpg" class="">

<p>访问<code>http://x.x.x.x/</code>，可以看到nginx的工作目录里面的文件（PS：不能含有index.html,index.php）</p>
<img src="/2018/03/30/h5ai/5.jpg" class="">

<h2 id="安装aria2"><a href="#安装aria2" class="headerlink" title="安装aria2"></a>安装aria2</h2><p>在Debian/Ubuntu上直接执行<code>sudo apt-get install aria2</code>就能安装好了，版本相对来说也较新，在Cent OS上可以执行<code>sudo yum install aria2</code>来安装，然而，一如既往的是老掉牙的版本，虽然说一味追求新版并无实在的意义，但是某些功能旧版本是没有的啊啊啊~~<br>可以自己编译安装aria2</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install build-essential libgnutls-dev nettle-dev libgmp-dev libssh2-1-dev libc-ares-dev libxml2-dev zlib1g-dev libsqlite3-dev pkg-config -y <span class="comment"># For Debian/Ubuntu</span></span><br><span class="line"><span class="comment"># OR</span></span><br><span class="line">sudo yum groupinstall <span class="string">&quot;Development Tools&quot;</span> -y &amp;&amp; yum install gettext-devel gnutls-devel nettle-devel gmp-devel libssh2-devel c-ares-devel libxml2-devel zlib-devel sqlite-devel pkgconfig libgcrypt-devel libssl-devel libtool autoconf automake autotools autopoint <span class="comment">#For Centos</span></span><br><span class="line">wget https://github.com/aria2/aria2/releases/download/release-1.33.1/aria2-1.33.1.tar.gz</span><br><span class="line">tar -zxf aria2-1.33.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> aria2-1.33.1</span><br><span class="line">autoreconf -i</span><br><span class="line">./configure </span><br><span class="line">make </span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>

<p>在执行<code>./configure</code>的时候报的错误基本上都是缺少依赖，少谁装谁就好。<br>静态编译参数<code>./configure ARIA2_STATIC=yes</code>编译出来的程序体积巨大，动态链接的程序只有2M+，静态编译出来之后达到75M+。</p>
<h3 id="配置aria2"><a href="#配置aria2" class="headerlink" title="配置aria2"></a>配置aria2</h3><p>可以参考<a href="https://blog.icehoney.me/posts/2015-01-31-Aria2-download">https://blog.icehoney.me/posts/2015-01-31-Aria2-download</a>，新建配置文件<code>vim aria2c.conf</code>，添加以下内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#用户名</span></span><br><span class="line"><span class="comment">#rpc-user=user</span></span><br><span class="line"><span class="comment">#密码</span></span><br><span class="line"><span class="comment">#rpc-passwd=passwd</span></span><br><span class="line"><span class="comment">#上面的认证方式不建议使用,建议使用下面的token方式</span></span><br><span class="line"><span class="comment">#设置加密的密钥</span></span><br><span class="line"><span class="comment">#rpc-secret=token</span></span><br><span class="line"><span class="comment">#允许rpc</span></span><br><span class="line">enable-rpc=<span class="literal">true</span></span><br><span class="line"><span class="comment">#允许所有来源, web界面跨域权限需要</span></span><br><span class="line">rpc-allow-origin-all=<span class="literal">true</span></span><br><span class="line"><span class="comment">#允许外部访问，false的话只监听本地端口</span></span><br><span class="line">rpc-listen-all=<span class="literal">true</span></span><br><span class="line"><span class="comment">#RPC端口, 仅当默认端口被占用时修改</span></span><br><span class="line"><span class="comment">#rpc-listen-port=6800</span></span><br><span class="line"><span class="comment">#最大同时下载数(任务数), 路由建议值: 3</span></span><br><span class="line">max-concurrent-downloads=5</span><br><span class="line"><span class="comment">#断点续传</span></span><br><span class="line"><span class="built_in">continue</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment">#同服务器连接数</span></span><br><span class="line">max-connection-per-server=5</span><br><span class="line"><span class="comment">#最小文件分片大小, 下载线程数上限取决于能分出多少片, 对于小文件重要</span></span><br><span class="line">min-split-size=10M</span><br><span class="line"><span class="comment">#单文件最大线程数, 路由建议值: 5</span></span><br><span class="line">split=10</span><br><span class="line"><span class="comment">#下载速度限制</span></span><br><span class="line">max-overall-download-limit=0</span><br><span class="line"><span class="comment">#单文件速度限制</span></span><br><span class="line">max-download-limit=0</span><br><span class="line"><span class="comment">#上传速度限制</span></span><br><span class="line">max-overall-upload-limit=0</span><br><span class="line"><span class="comment">#单文件速度限制</span></span><br><span class="line">max-upload-limit=0</span><br><span class="line"><span class="comment">#断开速度过慢的连接</span></span><br><span class="line"><span class="comment">#lowest-speed-limit=0</span></span><br><span class="line"><span class="comment">#验证用，需要1.16.1之后的release版本</span></span><br><span class="line"><span class="comment">#referer=*</span></span><br><span class="line"><span class="comment">#文件保存路径, 默认为当前启动位置</span></span><br><span class="line">dir=/home/acgotaku/Downloads</span><br><span class="line"><span class="comment">#文件缓存, 使用内置的文件缓存, 如果你不相信Linux内核文件缓存和磁盘内置缓存时使用, 需要1.16及以上版本</span></span><br><span class="line"><span class="comment">#disk-cache=0</span></span><br><span class="line"><span class="comment">#另一种Linux文件缓存方式, 使用前确保您使用的内核支持此选项, 需要1.15及以上版本(?)</span></span><br><span class="line"><span class="comment">#enable-mmap=true</span></span><br><span class="line"><span class="comment">#文件预分配, 能有效降低文件碎片, 提高磁盘性能. 缺点是预分配时间较长</span></span><br><span class="line"><span class="comment">#所需时间 none &lt; falloc ? trunc &lt;&lt; prealloc, falloc和trunc需要文件系统和内核支持</span></span><br><span class="line">file-allocation=prealloc</span><br></pre></td></tr></table></figure>

<p>使用命令<code>aria2c --conf-path aria2c.conf -D</code>让aria2c后台运行，然后去往<a href="https://github.com/ziahamza/webui-aria2">https://github.com/ziahamza/webui-aria2</a>下载好整个仓库，双击<code>indel.html</code>，然后将<code>设置/连接设置</code>里面的主机设置为VPS的IP地址。</p>
<p>整个思路就是aria2c后台运行，本地的webui可以直接向VPS发出下载命令，下载好之后，打开h5ai的的页面查看文件，然后再从VPS上下载回本地。</p>
]]></content>
  </entry>
  <entry>
    <title>安卓应用崩溃的时候发生了什么</title>
    <url>/2021/03/27/how-does-android-app-crash/</url>
    <content><![CDATA[<p>安卓应用崩溃大致上可以分为java调用时的崩溃和native代码调用时的崩溃（我个人这样分）。下面我们分别看看这两种情况下，具体是如何崩溃的。</p>
<a id="more"></a>

<h2 id="java-调用崩溃"><a href="#java-调用崩溃" class="headerlink" title="java 调用崩溃"></a>java 调用崩溃</h2><p>我们看下面这样一段代码，在没有为 mButton 绑定view的情况下，为他设置一个 onClickListener</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class MainActivity extends AppCompatActivity &#123;</span><br><span class="line"></span><br><span class="line">    private static final String TAG &#x3D; &quot;testapp&quot;;</span><br><span class="line">    Button mButton &#x3D; null;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        Log.d(TAG,&quot;onCreate&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void click(View view) &#123;</span><br><span class="line">        mButton.setOnClickListener(new View.OnClickListener()&#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void onClick(View v) &#123;</span><br><span class="line">                Log.d(TAG,&quot;clicked&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>调用到 click 这个函数，正如预期的那样，应用崩溃了。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">03-27 23:36:32.936 32641 32641 D testapp : onCreate</span><br><span class="line">03-27 23:36:55.858 32641 32641 E AndroidRuntime: FATAL EXCEPTION: main</span><br><span class="line">03-27 23:36:55.858 32641 32641 E AndroidRuntime: Process: com.example.crashinfo, PID: 32641</span><br><span class="line">03-27 23:36:55.858 32641 32641 E AndroidRuntime: java.lang.IllegalStateException: Could not execute method for android:onClick</span><br><span class="line">03-27 23:36:55.858 32641 32641 E AndroidRuntime: 	at androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener.onClick(AppCompatViewInflater.java:414)</span><br><span class="line">03-27 23:36:55.858 32641 32641 E AndroidRuntime: 	at android.view.View.performClick(View.java:7448)</span><br><span class="line">03-27 23:36:55.858 32641 32641 E AndroidRuntime: 	at com.google.android.material.button.MaterialButton.performClick(MaterialButton.java:992)</span><br><span class="line">03-27 23:36:55.858 32641 32641 E AndroidRuntime: 	at android.view.View.performClickInternal(View.java:7425)</span><br><span class="line">03-27 23:36:55.858 32641 32641 E AndroidRuntime: 	at android.view.View.access$3600(View.java:810)</span><br><span class="line">03-27 23:36:55.858 32641 32641 E AndroidRuntime: 	at android.view.View$PerformClick.run(View.java:28305)</span><br><span class="line">03-27 23:36:55.858 32641 32641 E AndroidRuntime: 	at android.os.Handler.handleCallback(Handler.java:938)</span><br><span class="line">03-27 23:36:55.858 32641 32641 E AndroidRuntime: 	at android.os.Handler.dispatchMessage(Handler.java:99)</span><br><span class="line">03-27 23:36:55.858 32641 32641 E AndroidRuntime: 	at android.os.Looper.loop(Looper.java:223)</span><br><span class="line">03-27 23:36:55.858 32641 32641 E AndroidRuntime: 	at android.app.ActivityThread.main(ActivityThread.java:7656)</span><br><span class="line">03-27 23:36:55.858 32641 32641 E AndroidRuntime: 	at java.lang.reflect.Method.invoke(Native Method)</span><br><span class="line">03-27 23:36:55.858 32641 32641 E AndroidRuntime: 	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:592)</span><br><span class="line">03-27 23:36:55.858 32641 32641 E AndroidRuntime: 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:947)</span><br><span class="line">03-27 23:36:55.858 32641 32641 E AndroidRuntime: Caused by: java.lang.reflect.InvocationTargetException</span><br><span class="line">03-27 23:36:55.858 32641 32641 E AndroidRuntime: 	at java.lang.reflect.Method.invoke(Native Method)</span><br><span class="line">03-27 23:36:55.858 32641 32641 E AndroidRuntime: 	at androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener.onClick(AppCompatViewInflater.java:409)</span><br><span class="line">03-27 23:36:55.858 32641 32641 E AndroidRuntime: 	... 12 more</span><br><span class="line">03-27 23:36:55.858 32641 32641 E AndroidRuntime: Caused by: java.lang.NullPointerException: Attempt to invoke virtual method &#39;void android.widget.Button.setOnClickListener(android.view.View$OnClickListener)&#39; on a null object reference</span><br><span class="line">03-27 23:36:55.858 32641 32641 E AndroidRuntime: 	at com.example.crashinfo.MainActivity.click(MainActivity.java:23)</span><br><span class="line">03-27 23:36:55.858 32641 32641 E AndroidRuntime: 	... 14 more</span><br></pre></td></tr></table></figure>

<p>通过前面的 PID 可以知道，实际上这些崩溃信息是应用的进程打出来的。也就是说，崩溃信息打印出来的时候，应用的进程还没有退出。</p>
<p>通过在系统里面加log可以看到，崩溃的信息是这里打印出来的</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ANDROID_ROOT/frameworks/base/core/java/com/android/internal/os/RuntimeInit.java</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Logs a message when a thread encounters an uncaught exception. By</span></span><br><span class="line"><span class="comment"> * default, &#123;<span class="doctag">@link</span> KillApplicationHandler&#125; will terminate this process later,</span></span><br><span class="line"><span class="comment"> * but apps can override that behavior.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">LoggingHandler</span> <span class="keyword">implements</span> <span class="title">Thread</span>.<span class="title">UncaughtExceptionHandler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">volatile</span> <span class="keyword">boolean</span> mTriggered = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">uncaughtException</span><span class="params">(Thread t, Throwable e)</span> </span>&#123;</span><br><span class="line">        mTriggered = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Don&#x27;t re-enter if KillApplicationHandler has already run</span></span><br><span class="line">        <span class="keyword">if</span> (mCrashing) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// mApplicationObject is null for non-zygote java programs (e.g. &quot;am&quot;)</span></span><br><span class="line">        <span class="comment">// There are also apps running with the system UID. We don&#x27;t want the</span></span><br><span class="line">        <span class="comment">// first clause in either of these two cases, only for system_server.</span></span><br><span class="line">        <span class="keyword">if</span> (mApplicationObject == <span class="keyword">null</span> &amp;&amp; (Process.SYSTEM_UID == Process.myUid())) &#123;</span><br><span class="line">            Clog_e(TAG, <span class="string">&quot;*** FATAL EXCEPTION IN SYSTEM PROCESS: &quot;</span> + t.getName(), e);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            StringBuilder message = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            <span class="comment">// The &quot;FATAL EXCEPTION&quot; string is still used on Android even though</span></span><br><span class="line">            <span class="comment">// apps can set a custom UncaughtExceptionHandler that renders uncaught</span></span><br><span class="line">            <span class="comment">// exceptions non-fatal.</span></span><br><span class="line">            message.append(<span class="string">&quot;FATAL EXCEPTION: &quot;</span>).append(t.getName()).append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            <span class="keyword">final</span> String processName = ActivityThread.currentProcessName();</span><br><span class="line">            <span class="keyword">if</span> (processName != <span class="keyword">null</span>) &#123;</span><br><span class="line">                message.append(<span class="string">&quot;Process: &quot;</span>).append(processName).append(<span class="string">&quot;, &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            message.append(<span class="string">&quot;PID: &quot;</span>).append(Process.myPid());</span><br><span class="line">            Clog_e(TAG, message.toString(), e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>并且我们在同一个文件下面不远处可以看到这样一段代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">uncaughtException</span><span class="params">(Thread t, Throwable e)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        ......</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable t2) &#123;</span><br><span class="line">        ......</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="comment">// Try everything to make sure this process goes away.</span></span><br><span class="line">        Process.killProcess(Process.myPid());</span><br><span class="line">        System.exit(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>Process.killProcess(Process.myPid());</code>这样传入了当前进程的 PID ，查看 <code>Process.killProcess();</code> 的实现</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks/base/core/java/android/os/Process.java</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Kill the process with the given PID.</span></span><br><span class="line"><span class="comment">    * Note that, though this API allows us to request to</span></span><br><span class="line"><span class="comment">    * kill any process based on its PID, the kernel will</span></span><br><span class="line"><span class="comment">    * still impose standard restrictions on which PIDs you</span></span><br><span class="line"><span class="comment">    * are actually able to kill.  Typically this means only</span></span><br><span class="line"><span class="comment">    * the process running the caller&#x27;s packages/application</span></span><br><span class="line"><span class="comment">    * and any additional processes created by that app; packages</span></span><br><span class="line"><span class="comment">    * sharing a common UID will also be able to kill each</span></span><br><span class="line"><span class="comment">    * other&#x27;s processes.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">killProcess</span><span class="params">(<span class="keyword">int</span> pid)</span> </span>&#123;</span><br><span class="line">    sendSignal(pid, SIGNAL_KILL);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里的<code>SIGNAL_KILL</code>的值是9。到这里其实我们大概能猜出来了，给当前的 PID 的进程发送了信号 9 。kernel接受到这个信号之后将会直接杀死对应的进程。<br>sendSignal的实现如下</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks/base/core/java/android/os/Process.java</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Send a signal to the given process.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> pid The pid of the target process.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> signal The signal to send.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title">sendSignal</span><span class="params">(<span class="keyword">int</span> pid, <span class="keyword">int</span> signal)</span></span>;</span><br></pre></td></tr></table></figure>
<p>可以看到这里实际上通过jni调用到了一个native上的接口，顺着找下去，可以看到</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//frameworks/base/core/jni/android_util_Process.cpp</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">android_os_Process_sendSignal</span><span class="params">(JNIEnv* env, jobject clazz, jint pid, jint sig)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pid &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        ALOGI(<span class="string">&quot;Sending signal. PID: %&quot;</span> PRId32 <span class="string">&quot; SIG: %&quot;</span> PRId32, pid, sig);</span><br><span class="line">        kill(pid, sig);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>kill</code>的原型是<code>int kill(int pid,int sig);</code>，是Linux的一个用于向指定 PID 的进程或进程组发送信号的函数。</p>
<p>综上所述，安卓应用调用java代码发生异常而崩溃时，实际上是应用自己调用 kill 来使应用所在的进程直接被杀死。相应的，应用可以自己捕捉到java代码上的异常来防止应用崩溃(闪退)。</p>
<h2 id="native-调用时的崩溃"><a href="#native-调用时的崩溃" class="headerlink" title="native 调用时的崩溃"></a>native 调用时的崩溃</h2><p>native调用时的崩溃与Linux上的C/C++程序崩溃的行为很像，我们写这样一个简单的jni调用来让安卓应用崩溃</p>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2016/03/25/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>how to control Yeelight</title>
    <url>/2019/04/13/how-to-control-Yeelight/</url>
    <content><![CDATA[<img src="/2019/04/13/how-to-control-Yeelight/1.jpg" class="">

<p>其实 Yeelight 官方描述已经足够，但是对于入门的人来说并不够详细，官方对于 Yeelight 产品的局域网控制功能在这里有说明 <a href="https://www.yeelight.com/zh_CN/developer">https://www.yeelight.com/zh_CN/developer</a>，同样也有详细的<a href="https://www.yeelight.com/download/Yeelight_Inter-Operation_Spec.pdf">文档</a>。本文只是略微做一些说明。</p>
<a id="more"></a>

<p>Yeelight 产品的局域网控制分为两步</p>
<ul>
<li>发送 ssdp 消息，获取产品的信息；(这里是通过udp发送一个特定字符串，接收yeelight发回的消息，其内包含这个设备的IP地址和TCP端口)</li>
<li>根据信息，发送控制信息。(通过上一个步骤拿到的地址和端口使用tcp连接到yeelight设备，然后通过tcp连接发送控制消息，控制消息的具体格式在官方文档中有说明)</li>
</ul>
<p>向239.255.255.250:1982 发送一条消息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">M-SEARCH * HTTP&#x2F;1.1\r\nHOST: 239.255.255.250:1982\r\nMAN: &quot;ssdp:discover&quot;\r\nST: wifi_bulb</span><br></pre></td></tr></table></figure>

<p>在本例中，米家智能台灯会返回一下消息：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HTTP&#x2F;1.1 200 OK</span><br><span class="line">Cache-Control: max-age&#x3D;3600</span><br><span class="line">Date:</span><br><span class="line">Ext:</span><br><span class="line">Location: yeelight:&#x2F;&#x2F;192.168.100.100:55443</span><br><span class="line">Server: POSIX UPnP&#x2F;1.0 YGLC&#x2F;1</span><br><span class="line">id: 0x0000000002c5343e</span><br><span class="line">model: desklamp</span><br><span class="line">fw_ver: 58</span><br><span class="line">support: get_prop set_default set_power toggle set_ct_abx set_bright start_cf stop_cf set_scene cron_add cron_get cron_del set_adjust adjust_bright adjust_ct set_name</span><br><span class="line">power: on</span><br><span class="line">bright: 60</span><br><span class="line">color_mode: 2</span><br><span class="line">ct: 4000</span><br><span class="line">rgb: 0</span><br><span class="line">hue: 0</span><br><span class="line">sat: 0</span><br><span class="line">name:</span><br></pre></td></tr></table></figure>

<p>以上信息中，”Location: yeelight://192.168.100.100:55443”是比较关键的信息，这里包含了米家智能台灯的IP地址和tcp控制端口，通过tcp连接台灯之后，向台灯发送控制消息即可。下面是一些示范。</p>
<h2 id="扫描-Yeelight-设备"><a href="#扫描-Yeelight-设备" class="headerlink" title="扫描 Yeelight 设备"></a>扫描 Yeelight 设备</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;winsock2.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;WS2tcpip.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;ws2_32.lib&quot;</span>) </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	WORD socketVersion = MAKEWORD(<span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line">	WSADATA wsaData;</span><br><span class="line">	<span class="keyword">if</span> (WSAStartup(socketVersion, &amp;wsaData) != <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	SOCKET sclient = socket(AF_INET, SOCK_DGRAM, IPPROTO_UDP);</span><br><span class="line"></span><br><span class="line">	sockaddr_in <span class="built_in">sin</span>;</span><br><span class="line">	<span class="built_in">sin</span>.sin_family = AF_INET;</span><br><span class="line">	<span class="built_in">sin</span>.sin_port = htons(<span class="number">1982</span>);</span><br><span class="line">	inet_pton(AF_INET, <span class="string">&quot;239.255.255.250&quot;</span> ,&amp;<span class="built_in">sin</span>.sin_addr.S_un.S_addr);</span><br><span class="line">	<span class="keyword">int</span> len = <span class="keyword">sizeof</span>(<span class="built_in">sin</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">const</span> <span class="keyword">char</span> * sendData = <span class="string">&quot;M-SEARCH * HTTP/1.1\r\nHOST: 239.255.255.250:1982\r\nMAN: \&quot;ssdp:discover\&quot;\r\nST: wifi_bulb&quot;</span>;</span><br><span class="line">	<span class="keyword">int</span> result = sendto(sclient, sendData, <span class="built_in">strlen</span>(sendData), <span class="number">0</span>, (sockaddr *)&amp;<span class="built_in">sin</span>, len);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;send data size: %d\n&quot;</span>, result);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">char</span> recvData[<span class="number">1024</span>];</span><br><span class="line">	<span class="keyword">int</span> ret = recvfrom(sclient, recvData, <span class="number">1024</span>, <span class="number">0</span>, (sockaddr *)&amp;<span class="built_in">sin</span>, &amp;len);</span><br><span class="line">	<span class="keyword">if</span> (ret &gt; <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		recvData[ret] = <span class="number">0x00</span>;</span><br><span class="line">		<span class="built_in">printf</span>(recvData);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	closesocket(sclient);</span><br><span class="line">	WSACleanup();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>需要注意的是，发送扫描信息需要使用udp方式，并且发送扫描信息和接收响应信息需要通过同一个sockt。</p>
<h2 id="控制-Yeelight-设备"><a href="#控制-Yeelight-设备" class="headerlink" title="控制 Yeelight 设备"></a>控制 Yeelight 设备</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _WINSOCK_DEPRECATED_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;WinSock2.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;ws2_32.lib&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> REMOTE_IP <span class="meta-string">&quot;127.0.0.1&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> REMOTE_PORT 8080</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//初始化winsock服务</span></span><br><span class="line">	WSADATA wsaData;</span><br><span class="line">	WSAStartup(MAKEWORD(<span class="number">2</span>, <span class="number">2</span>), &amp;wsaData);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//创建socket</span></span><br><span class="line">	SOCKET sock = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);</span><br><span class="line"></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">svraddr</span>;</span></span><br><span class="line">	svraddr.sin_family = AF_INET;</span><br><span class="line">	svraddr.sin_port = htons(<span class="number">55443</span>);</span><br><span class="line">	svraddr.sin_addr.s_addr = inet_addr(<span class="string">&quot;192.168.100.100&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//连接socket</span></span><br><span class="line">	<span class="keyword">if</span> (connect(sock, (struct sockaddr*)&amp;svraddr, <span class="keyword">sizeof</span>(svraddr)) != <span class="number">-1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//发送数据给服务端</span></span><br><span class="line">		Sleep(<span class="number">1000</span>);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//printf(&quot;%s&quot;, sendbuf);</span></span><br><span class="line">		<span class="keyword">int</span> sw = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">char</span> sendbuf1[] = <span class="string">&quot;&#123;\&quot;id\&quot;:1,\&quot;method\&quot;:\&quot;set_bright\&quot;,\&quot;params\&quot;:[100,\&quot;smooth\&quot;,500]&#125;\r\n&quot;</span>;</span><br><span class="line">		<span class="keyword">char</span> sendbuf2[] = <span class="string">&quot;&#123;\&quot;id\&quot;:1,\&quot;method\&quot;:\&quot;set_bright\&quot;,\&quot;params\&quot;:[10,\&quot;smooth\&quot;,500]&#125;\r\n&quot;</span>;</span><br><span class="line">		<span class="keyword">char</span> buf[<span class="number">1024</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">		<span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;sw)!=<span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">switch</span> (sw) &#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">				</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, sendbuf1);</span><br><span class="line">				<span class="keyword">if</span> (send(sock, sendbuf1, <span class="built_in">strlen</span>(sendbuf1), <span class="number">0</span>) != <span class="number">-1</span>)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="comment">//接收服务端数据</span></span><br><span class="line">					<span class="comment">//Sleep(1000);</span></span><br><span class="line">					</span><br><span class="line">					<span class="keyword">if</span> (recv(sock, buf, <span class="number">1024</span>, <span class="number">0</span>) &gt; <span class="number">0</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						<span class="built_in">printf</span>(<span class="string">&quot;recv server: \r\n %s\r\n&quot;</span>, buf);</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="built_in">memset</span>(buf, <span class="number">0</span>, <span class="number">1024</span>);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">				</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, sendbuf2);</span><br><span class="line">				<span class="keyword">if</span> (send(sock, sendbuf2, <span class="built_in">strlen</span>(sendbuf2), <span class="number">0</span>) != <span class="number">-1</span>)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="comment">//接收服务端数据</span></span><br><span class="line">					<span class="comment">//Sleep(1000);</span></span><br><span class="line">					<span class="comment">//char buf[1024] = &#123; 0 &#125;;</span></span><br><span class="line">					<span class="keyword">if</span> (recv(sock, buf, <span class="number">1024</span>, <span class="number">0</span>) &gt; <span class="number">0</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						<span class="built_in">printf</span>(<span class="string">&quot;recv server: \n %s\n&quot;</span>, buf);</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="built_in">memset</span>(buf, <span class="number">0</span>, <span class="number">1024</span>);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (sw == <span class="number">3</span>)</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;can not connect server\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//关闭socket</span></span><br><span class="line">	closesocket(sock);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//关闭winsock服务</span></span><br><span class="line">	WSACleanup();</span><br><span class="line">	getchar();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="/2019/04/13/how-to-control-Yeelight/2.jpg" class="">

<p>在台灯开启的情况下，输入1或者2进行亮度调节，输入3退出。</p>
<p>更多更详细的控制信息可以阅读<a href="https://www.yeelight.com/download/Yeelight_Inter-Operation_Spec.pdf">官方文档</a>。</p>
]]></content>
  </entry>
  <entry>
    <title>在 Centos 7.4 上安装Gcc 7.3</title>
    <url>/2018/04/16/install-gcc-7-3-on-centos-7-4/</url>
    <content><![CDATA[<p>依旧是那个老生常谈的问题，Cent OS上的软件包大都很老，比如常用的Gcc，在最新的Cent OS 7.4上，gcc的版本才到4.8.5，虽说一味追求新版并无大用，但是有些特性老版本不支持啊，很坑的有木有。<br>下面记录一下安装过程。</p>
<a id="more"></a>

<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>系统为Cent OS7.4，全新安装，更新全部软件至最新版。</p>
<h2 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum update -y</span><br><span class="line">yum install gcc gcc-c++ gcc-gnat zlib-devel glibc-devel glibc-devel.i686 libgcc libgcc.i686 -y</span><br></pre></td></tr></table></figure>

<p>安装 glibc-devel.i686 是为了安装32位的头文件和库，否则在配置的时候就会出现下面的错误</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">configure: error: I suspect your system does not have 32-bit developement libraries (libc and headers). If you have them, rerun configure with --enable-multilib. If you <span class="keyword">do</span> not have them, and want to build a 64-bit-only compiler, rerun configure with --disable-multilib.</span><br></pre></td></tr></table></figure>

<p>网络上清一色的叫你加入参数<code>--disable-multilib</code>，然而，这样的话就少了32位的支持了。</p>
<h2 id="动手"><a href="#动手" class="headerlink" title="动手"></a>动手</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;gnu&#x2F;gcc&#x2F;gcc-7.3.0&#x2F;gcc-7.3.0.tar.gz</span><br><span class="line">tar -zxf gcc-7.3.0.tar.gz</span><br><span class="line">cd gcc-7.3.0</span><br><span class="line">.&#x2F;contrib&#x2F;download_prerequisites</span><br><span class="line">mkdir builddir &amp;&amp; cd builddir</span><br><span class="line">..&#x2F;configure</span><br><span class="line">make &amp;&amp; sudo make install</span><br></pre></td></tr></table></figure>

<p>编译过程长达数个小时，具体要多长时间得看RP了，可以用tmux把它放在后台。<br>需要配置的地方非常少，安装过程也没什么特殊的，但是以前安装gcc的时候随便报个错就一脸懵逼，需要注意的是在<code>./contrib/download_prerequisites</code>之后，会有执行成功的提示，log如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2018-04-16 16:37:22 URL: ftp://gcc.gnu.org/pub/gcc/infrastructure/gmp-6.1.0.tar.bz2 [2383840] -&gt; <span class="string">&quot;./gmp-6.1.0.tar.bz2&quot;</span> [1]</span><br><span class="line">2018-04-16 16:37:28 URL: ftp://gcc.gnu.org/pub/gcc/infrastructure/mpfr-3.1.4.tar.bz2 [1279284] -&gt; <span class="string">&quot;./mpfr-3.1.4.tar.bz2&quot;</span> [1]</span><br><span class="line">2018-04-16 16:37:33 URL: ftp://gcc.gnu.org/pub/gcc/infrastructure/mpc-1.0.3.tar.gz [669925] -&gt; <span class="string">&quot;./mpc-1.0.3.tar.gz&quot;</span> [1]</span><br><span class="line">2018-04-16 16:37:39 URL: ftp://gcc.gnu.org/pub/gcc/infrastructure/isl-0.16.1.tar.bz2 [1626446] -&gt; <span class="string">&quot;./isl-0.16.1.tar.bz2&quot;</span> [1]</span><br><span class="line">gmp-6.1.0.tar.bz2: OK</span><br><span class="line">mpfr-3.1.4.tar.bz2: OK</span><br><span class="line">mpc-1.0.3.tar.gz: OK</span><br><span class="line">isl-0.16.1.tar.bz2: OK</span><br><span class="line">All prerequisites downloaded successfully.</span><br></pre></td></tr></table></figure>

<p>这个步骤是有可能因为网络原因出问题的，这个步骤可以把安装gcc需要的四个依赖包弄好，网络上的某些教程是让你手动安装依赖，比如这个<a href="https://www.cnblogs.com/freeweb/p/5990860.html">https://www.cnblogs.com/freeweb/p/5990860.html</a>，操作越多越容易出错。</p>
<p>另外，配置同样是需要考虑的地方，大多数时候直接执行<code>./configure</code>就过去了，我用了下面的配置参数</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-linker-build-id --with-linker-hash-style=gnu --enable-languages=c,c++,objc,obj-c++,fortran,ada,go,lto --enable-plugin --enable-initfini-array --disable-libgcj --enable-gnu-indirect-function --with-tune=generic --with-arch_32=x86-64 --build=x86_64-redhat-linux</span><br></pre></td></tr></table></figure>

<p>选择这个参数并没有什么非常实在的原因，里面很多参数我并不清楚是干嘛的，使用这个参数纯粹是因为Cent OS用yum安装的gcc的配置参数是这个。</p>
<h2 id="安装gdb"><a href="#安装gdb" class="headerlink" title="安装gdb"></a>安装gdb</h2><p>在某些情况下，升级了gcc是需要同步升级gdb的，虽然不清楚是否有具体的版本对应关系，但是傻fufu的安装最新版就是了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;gnu&#x2F;gdb&#x2F;gdb-8.1.tar.gz</span><br><span class="line">tar -zxf gdb-8.1.tar.gz</span><br><span class="line">cd gdb-8.1</span><br><span class="line">mkdir builddir &amp;&amp; cd builddir</span><br><span class="line">..&#x2F;configure</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<h2 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h2><p>有可能在执行<code>make install</code>的时候报错（内心PS，都已经编译好了，你给我在安装的时候报错(ノ｀Д)ノ）报错信息如下:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING: <span class="string">&#x27;makeinfo&#x27;</span> is missing on your system.</span><br><span class="line">         You should only need it <span class="keyword">if</span> you modified a <span class="string">&#x27;.texi&#x27;</span> file, or</span><br><span class="line">         any other file indirectly affecting the aspect of the manual.</span><br><span class="line">         You might want to install the Texinfo package:</span><br><span class="line">         &lt;http://www.gnu.org/software/texinfo/&gt;</span><br><span class="line">         The spurious makeinfo call might also be the consequence of</span><br><span class="line">         using a buggy <span class="string">&#x27;make&#x27;</span> (AIX, DU, IRIX), <span class="keyword">in</span> <span class="built_in">which</span> <span class="keyword">case</span> you might</span><br><span class="line">         want to install GNU make:</span><br><span class="line">         &lt;http://www.gnu.org/software/make/&gt;</span><br><span class="line">make[5]: *** [gdb.info] Error 127</span><br><span class="line">make[5]: Leaving directory `/root/gdb-8.1/build/gdb/doc<span class="string">&#x27;</span></span><br><span class="line"><span class="string">make[4]: *** [subdir_do] Error 1</span></span><br><span class="line"><span class="string">make[4]: Leaving directory `/root/gdb-8.1/build/gdb&#x27;</span></span><br><span class="line">make[3]: *** [install-only] Error 2</span><br><span class="line">make[3]: Leaving directory `/root/gdb-8.1/build/gdb<span class="string">&#x27;</span></span><br><span class="line"><span class="string">make[2]: *** [install] Error 2</span></span><br><span class="line"><span class="string">make[2]: Leaving directory `/root/gdb-8.1/build/gdb&#x27;</span></span><br><span class="line">make[1]: *** [install-gdb] Error 2</span><br><span class="line">make[1]: Leaving directory `/root/gdb-8.1/build<span class="string">&#x27;</span></span><br><span class="line"><span class="string">make: *** [install] Error 2</span></span><br></pre></td></tr></table></figure>

<p>需要<code>yum install texinfo</code>，然后再执行<code>make install</code>。<br>至于原本安装好的gcc的话，应该是没了吧，我是找不到它了。<br>安装软件的推荐性是这样的<code>官方源&gt;知名第三方源&gt;手动编译&gt;不知名第三方源</code>，很多时候，手动编译需要自己安装依赖，很多时候，自己安装依赖还会需要安装依赖的依赖，某些极端情况下，还会遇到依赖循环，令人十分的窒息。<br>自行编译安装并不是很推荐的操作，并且很多时候新版并不一定就更好，Cent OS一直用着老版本的软件并不是没有道理的。<br>建立<code>builddir</code>的目的，只是为了让编译产生的文件集中在一个地方，免得主目录一大堆文件看起来不方便。<br>Ubuntu/Debia的软件版本一般都比较新，不值得花大量时间手动编译。</p>
<img src="/2018/04/16/install-gcc-7-3-on-centos-7-4/1.jpg" class="" title="来张合影">
]]></content>
  </entry>
  <entry>
    <title>在Linux上安装node.js</title>
    <url>/2017/01/08/install-node-js-on-a-Linux-OS/</url>
    <content><![CDATA[<p>在之前的文章中提及，使用“Hexo”，需要安装<code>node.js</code>,Windows上安装很方便，在其官网下载安装包之后，按照正常的步骤安装即可食用。</p>
<img src="/2017/01/08/install-node-js-on-a-Linux-OS/1.jpg" class="">
<a id="more"></a>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>在linux中安装却成了问题，在大多数的Linux发行版中，默认源的node.js版本大都跟不上官方最新版，在我之前的文章————本站建立中，所使用的方法是hexo官网提及的办法</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget -q0- https://raw.github.com/creationix/master/install.sh | sh</span><br></pre></td></tr></table></figure>
<p>实际上，我在使用了这个办法之后，确实能正常安装node.js，但是，安装之后<code>最大的问题就是终端打开时间大大变长</code>(鄙人感觉是脚本为系统添加了某些打开终端就执行的东西)，很是不爽，所以决定不用上面的方法安装。<br>然后，在官网下载了源码，手动编译安装。</p>
<h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><p>我拿到的node.js版本是6.9.4，下载到源码之后，得到的是一个.tar.gz文件，我们需要解压它，然后执行一下configure</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget https://nodejs.org/dist/latest-v6.x/node-v6.9.4-linux-x64.tar.gz</span><br><span class="line">$ tar -xvf node-v6.9.4.tar.gz</span><br><span class="line">$ <span class="built_in">cd</span> node-v6.9.4/</span><br><span class="line">$ ./configure</span><br></pre></td></tr></table></figure>
<p>这个时候屏幕上应该显示以下信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">creating ./icu_config.gypi</span><br><span class="line">* Using ICU <span class="keyword">in</span> deps/icu-small</span><br><span class="line">creating ./icu_config.gypi</span><br><span class="line">&#123; <span class="string">&#x27;target_defaults&#x27;</span>: &#123; <span class="string">&#x27;cflags&#x27;</span>: [],</span><br><span class="line">                       <span class="string">&#x27;default_configuration&#x27;</span>: <span class="string">&#x27;Release&#x27;</span>,</span><br><span class="line">                       <span class="string">&#x27;defines&#x27;</span>: [],</span><br><span class="line">                       <span class="string">&#x27;include_dirs&#x27;</span>: [],</span><br><span class="line">                       <span class="string">&#x27;libraries&#x27;</span>: []&#125;,</span><br><span class="line">  <span class="string">&#x27;variables&#x27;</span>: &#123; <span class="string">&#x27;asan&#x27;</span>: 0,</span><br><span class="line">                 <span class="string">&#x27;coverage&#x27;</span>: <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;debug_devtools&#x27;</span>: <span class="string">&#x27;node&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;force_dynamic_crt&#x27;</span>: 0,</span><br><span class="line">                 <span class="string">&#x27;gas_version&#x27;</span>: <span class="string">&#x27;2.24&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;host_arch&#x27;</span>: <span class="string">&#x27;x64&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;icu_data_file&#x27;</span>: <span class="string">&#x27;icudt57l.dat&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;icu_data_in&#x27;</span>: <span class="string">&#x27;../../deps/icu-small/source/data/in/icudt57l.dat&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;icu_endianness&#x27;</span>: <span class="string">&#x27;l&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;icu_gyp_path&#x27;</span>: <span class="string">&#x27;tools/icu/icu-generic.gyp&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;icu_locales&#x27;</span>: <span class="string">&#x27;en,root&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;icu_path&#x27;</span>: <span class="string">&#x27;deps/icu-small&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;icu_small&#x27;</span>: <span class="string">&#x27;true&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;icu_ver_major&#x27;</span>: <span class="string">&#x27;57&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;node_byteorder&#x27;</span>: <span class="string">&#x27;little&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;node_enable_d8&#x27;</span>: <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;node_enable_v8_vtunejit&#x27;</span>: <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;node_install_npm&#x27;</span>: <span class="string">&#x27;true&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;node_module_version&#x27;</span>: 48,</span><br><span class="line">                 <span class="string">&#x27;node_no_browser_globals&#x27;</span>: <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;node_prefix&#x27;</span>: <span class="string">&#x27;/usr/local&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;node_release_urlbase&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;node_shared&#x27;</span>: <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;node_shared_cares&#x27;</span>: <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;node_shared_http_parser&#x27;</span>: <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;node_shared_libuv&#x27;</span>: <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;node_shared_openssl&#x27;</span>: <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;node_shared_zlib&#x27;</span>: <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;node_tag&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;node_use_bundled_v8&#x27;</span>: <span class="string">&#x27;true&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;node_use_dtrace&#x27;</span>: <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;node_use_etw&#x27;</span>: <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;node_use_lttng&#x27;</span>: <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;node_use_openssl&#x27;</span>: <span class="string">&#x27;true&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;node_use_perfctr&#x27;</span>: <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;node_use_v8_platform&#x27;</span>: <span class="string">&#x27;true&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;openssl_fips&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;openssl_no_asm&#x27;</span>: 0,</span><br><span class="line">                 <span class="string">&#x27;shlib_suffix&#x27;</span>: <span class="string">&#x27;so.48&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;target_arch&#x27;</span>: <span class="string">&#x27;x64&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;uv_parent_path&#x27;</span>: <span class="string">&#x27;/deps/uv/&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;uv_use_dtrace&#x27;</span>: <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;v8_enable_gdbjit&#x27;</span>: 0,</span><br><span class="line">                 <span class="string">&#x27;v8_enable_i18n_support&#x27;</span>: 1,</span><br><span class="line">                 <span class="string">&#x27;v8_inspector&#x27;</span>: <span class="string">&#x27;true&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;v8_no_strict_aliasing&#x27;</span>: 1,</span><br><span class="line">                 <span class="string">&#x27;v8_optimized_debug&#x27;</span>: 0,</span><br><span class="line">                 <span class="string">&#x27;v8_random_seed&#x27;</span>: 0,</span><br><span class="line">                 <span class="string">&#x27;v8_use_snapshot&#x27;</span>: <span class="string">&#x27;true&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;want_separate_host_toolset&#x27;</span>: 0&#125;&#125;</span><br><span class="line">creating ./config.gypi</span><br><span class="line">creating ./config.mk</span><br></pre></td></tr></table></figure>
<p>然后，准备编译</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ make</span><br></pre></td></tr></table></figure>
<p>屏幕上会滚动编译信息，编译时间视电脑性能而定，编译结束后，输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></table></figure>
<p>检验是否安装成功</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">$ npm -v</span><br></pre></td></tr></table></figure>
<p>有返回信息则安装成功，若是提示没有此命令，则安装失败。</p>
<h2 id="安装失败的解决办法"><a href="#安装失败的解决办法" class="headerlink" title="安装失败的解决办法"></a>安装失败的解决办法</h2><p>编译node.js需要gcc/g++的版本为4.8以上<br>我在ubuntu 14.04，cent OS 6上测试均成功安装。<br>需要注意的是，cent os 可能没有默认安装g++,需要这样</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ yum update -y</span><br><span class="line">$ yum install gcc-c++ -y</span><br></pre></td></tr></table></figure>
<p>Enjoy it!</p>
<h2 id="node-js下载地址"><a href="#node-js下载地址" class="headerlink" title="node.js下载地址"></a>node.js下载地址</h2><p>由于node.js官网在国外，在国内下载源码速度实在是不怎么理想，特意在百度云备份了以一下(<a href="https://pan.baidu.com/s/1pKBZv79">点我下载</a>)</p>
<blockquote class="blockquote-center">
            <p>生命重在折腾 </p>

          </blockquote>]]></content>
      <tags>
        <tag>tecnology</tag>
        <tag>Linux</tag>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title>在树莓派3B上安装node.js</title>
    <url>/2017/01/09/install-node-js-on-raspberry-3B/</url>
    <content><![CDATA[<p>本文主讲如何在<a href="http://baike.baidu.com/link?url=ot2d79aySf4R7ksNlecgKZ3YoHX3qNTAQKCQd7Ui0XodvmTNa019AaEpAPNaRjvbjoifBEcCZNIYyhXHPU7InrO9aG9-6tdk6GvHqUydTgEw8Wtl7sUNecnR7NJCXsr7">树莓派3B</a>上安装node.js  (在之前的文章中说了通用的办法————编译node.js源码，但是树莓派的性能太弱，编译时间非常长)</p>
<img src="/2017/01/09/install-node-js-on-raspberry-3B/1.jpg" class="" title="raspberry 3B">
<a id="more"></a>
<h2 id="环境描述"><a href="#环境描述" class="headerlink" title="环境描述"></a>环境描述</h2><ol>
<li>树莓派安装了<code>2016-11-25-raspbian-jessie-lite</code>(PS：在此版本的镜像中，默认禁用了ssh，在烧录好镜像之后，在<code>boot</code>分区中新建一个名为<code>ssh</code>的文件夹，正常开机，通过ssh即可连接到树莓派)</li>
<li>所有官方软件源软件已经更新至最新版。</li>
</ol>
<h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p>在树莓派3B上安装node.js-6.9.4(截至本文发布时间的最新稳定版)</p>
<h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><p>连接树莓派之后：<br>下载已经编译好的node.js for ARM 版本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget https://nodejs.org/dist/latest-v6.x/node-v6.9.4-linux-armv7l.tar.gz</span><br></pre></td></tr></table></figure>
<p>解压文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ tar -xvf node-v6.9.4-linux-armv7l.tar.gz</span><br></pre></td></tr></table></figure>
<p>验证node是否正常</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> node-v6.9.4-linux-armv7l/bin/</span><br><span class="line">$ ./node -v</span><br><span class="line">v6.9.4</span><br></pre></td></tr></table></figure>
<p>说明正常，PS:运行npm会出现如下错误信息:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ./npm -v</span><br><span class="line">/usr/bin/env: node: No such file or directory</span><br></pre></td></tr></table></figure>
<p>别着急，往下看。<br>依次输入以下命令:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/</span><br><span class="line">$ mv node-v6.9.4-linux-armv7l /usr/<span class="built_in">local</span>/node</span><br><span class="line">$ <span class="built_in">echo</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/node/bin &gt;&gt; ~/.bashrc</span><br><span class="line">$ <span class="built_in">source</span> .bashrc</span><br></pre></td></tr></table></figure>
<p>现在在任何路径下都可以通过输入<code>node -v</code>得到当前的node.js版本。<br>若出现<code>npm</code>命令出错的情况，那么就编辑”/etc/sudoers”文件,将12行的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Defaults        secure_path=<span class="string">&quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;</span></span><br></pre></td></tr></table></figure>
<p>更改为</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Defaults       secure_path=<span class="string">&quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/node/bin&quot;</span></span><br></pre></td></tr></table></figure>
<p>然后重启一下，enjoy it.</p>
<h2 id="一点点说明"><a href="#一点点说明" class="headerlink" title="一点点说明"></a>一点点说明</h2><p>理论上任何Linux系统都可以通过类似的办法来安装Node.js，并且还省去了很多时间，但是需要注意下载的node.js的版本，本文的命令中下载node.js仅仅适用于ARM v7l平台<br>想要知道需要下载什么版本的node.js，通过命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ uname -a</span><br></pre></td></tr></table></figure>
<p>来查看，在我的树莓派上显示如下信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Linux raspberrypi 4.4.38-v7+ <span class="comment">#938 SMP Thu Dec 15 15:22:21 GMT 2016 armv7l GNU/Linux</span></span><br></pre></td></tr></table></figure>
<p>在cent OS 6上显示如下信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Linux VM_131_160_centos 3.10.0-514.2.2.el7.x86_64 <span class="comment">#1 SMP Tue Dec 6 23:06:41 UTC </span></span><br></pre></td></tr></table></figure>
<p>在ubuntu 14.04 LTS server 上显示如下信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Linux host_name 2.6.32-042stab116.2 <span class="comment">#1 SMP Fri Jun 24 15:33:57 MSK 2016 x86_64 x86_64 x86_64 GNU/Linux</span></span><br></pre></td></tr></table></figure>
<p>在输出信息中即可看到，树莓派是<code>ARM v7l</code>,cent OS和ubuntu是<code>x86_64</code>(x86_64 表示64位版本，x86表示32位)<br>适用于64位Linux系统的node.js</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget https://nodejs.org/dist/latest-v6.x/node-v6.9.4-linux-x64.tar.gz</span><br></pre></td></tr></table></figure>
<p>适用于32位Linux系统的node.js</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget https://nodejs.org/dist/latest-v6.x/node-v6.9.4-linux-x86.tar.gz</span><br></pre></td></tr></table></figure>
<p>其他步骤类似。</p>
<img src="/2017/01/09/install-node-js-on-raspberry-3B/2.jpg" class="" title="node.js">
<blockquote class="blockquote-center">
            <p>生命重在折腾 </p>

          </blockquote>]]></content>
      <tags>
        <tag>node.js</tag>
        <tag>raspberry</tag>
      </tags>
  </entry>
  <entry>
    <title>Tensorflow</title>
    <url>/2017/06/13/install-tensorflow/</url>
    <content><![CDATA[<img src="/2017/06/13/install-tensorflow/1.jpg" class="" title="TensorFlow">
<a id="more"></a>
<p><a href="https://en.wikipedia.org/wiki/TensorFlow">Tensorflow</a>一个强大的工具，安装过程很简单，但是还是踩了不少坑，这里仅作记录。</p>
<h2 id="在树莓派上安装TensoFlow"><a href="#在树莓派上安装TensoFlow" class="headerlink" title="在树莓派上安装TensoFlow"></a>在树莓派上安装TensoFlow</h2><h3 id="环境描述"><a href="#环境描述" class="headerlink" title="环境描述"></a>环境描述</h3><p>树莓派安装了2016.12月的jessie版本，并保证<code>sudo apt-get update</code>，后更新所有软件。</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>按照官网的描述，Linux通过命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sudo</span> pip install tensorflow (For python 2)</span><br><span class="line"></span><br><span class="line"><span class="variable">$sudo</span> pip3 install tensorflow (For python 3)</span><br></pre></td></tr></table></figure>
<h4 id="第一个问题————pip版本过低"><a href="#第一个问题————pip版本过低" class="headerlink" title="第一个问题————pip版本过低"></a>第一个问题————pip版本过低</h4><p>即可安装。遇到的第一个问题，是pip版本太低，可通过命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sudo</span> pip install --upgrade pip</span><br><span class="line">或者</span><br><span class="line"><span class="variable">$sudo</span> pip3 install --upgrade pip</span><br></pre></td></tr></table></figure>
<p>来安装TensorFlow，在输入以上命令之前，你可能需要先输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sudo</span> apt-get install python-pip python-dev (For python 2)</span><br><span class="line"></span><br><span class="line"><span class="variable">$sudo</span> apt-get install python3-pip python3-dev (For python 3)</span><br></pre></td></tr></table></figure>
<p>来安装依赖包。</p>
<h4 id="第二个问题————软件源"><a href="#第二个问题————软件源" class="headerlink" title="第二个问题————软件源"></a>第二个问题————软件源</h4><p>然后，是遇到的第二个问题，遇到错误提示————cannot fetch index base url https //pypi.python.org/simple/,这个错误完全是网络不通畅导致的，pip默认软件源是<code>pypi.python.org</code>，这个时候就需要更换国内的软件源。<br>在Linux中，更换软件源，需要在root用户的家目录下新建<code>.pip</code>文件夹，在该文件夹内新建文件<code>pip.conf</code>,其内容为</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>
<p>或者也可以通过临时指定软件源</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sudo</span> pip install tensorflow -i https://pypi.tuna.tsinghua.edu.cn</span><br></pre></td></tr></table></figure>
<p>来进行安装。</p>
<h4 id="第四个问题————软件源内没有相应软件包"><a href="#第四个问题————软件源内没有相应软件包" class="headerlink" title="第四个问题————软件源内没有相应软件包"></a>第四个问题————软件源内没有相应软件包</h4><p>以上所说，适用于X86平台的Linux，然而raspberry是ARM平台，国内的源似乎没有ARM平台的软件包，所以必须得指定软件包来安装了。<br>在Github上已经有人编译好了树莓派对应的tensorflow包，我在<a href="http://118.89.31.219/src/tensorflow/">这里</a>也备份了一下,下载文件<code>tensorflow-1.1.0-cp27-none-linux_armv7l.whl</code>，使用命令<code>pip install tensorflow-1.1.0-cp27-none-linux_armv7l.whl</code>就可以安装了，在rasperry上安装时间还是挺长的。<br>这里需要注意，tensorflow有其它的依赖包，所以最好先更换软件源，再进行安装，否则若是依赖包安装失败，tensorflow也没法装好。</p>
<h2 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h2><p>安装好之后，在终端输入python(若使用python3版本的pip安装的tensorflow，则需要输入python3)来进入，依次输入以下命令</p>
<img src="/2017/06/13/install-tensorflow/2.jpg" class="" title="TensorFlow on python 2 on Linux">
<img src="/2017/06/13/install-tensorflow/3.jpg" class="" title="TensorFlow on python 3 on Windows">
<h2 id="一点点说明"><a href="#一点点说明" class="headerlink" title="一点点说明"></a>一点点说明</h2><ol>
<li>在Windows和Linux上的安装都很方便，配置好软件源之后基本上没什么问题，树莓派因为软件源本身并不具备相应版本的TensorFlow，所以得手动下载相应的TensorFlow，在<a href="http://118.89.31.219/src/tensorflow/">http://118.89.31.219/src/tensorflow/</a>所留的软件包中，python3对应版本的无法安装，会提示不适用于此平台，目测要么是系统把硬件识别错了，要么就是包本身有问题；</li>
<li>在官方的验证示例中，python2和python3的示范结果不一样，python2的示范结果为<code>Hello,TensorFlow</code>,而python3的示范结果为<code>b&#39;Hello,TensorFlow&#39;</code>；</li>
<li>Windows平台只能通过python3安装TensorFlow，python3的<code>print</code>被当作一个函数了，与python2不一样，python3的<code>printf</code>后面需要加括号。<blockquote class="blockquote-center">
            <p>生命重在折腾</p>

          </blockquote></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>tmux 手册</title>
    <url>/2017/02/13/manual-of-tmux/</url>
    <content><![CDATA[<p>分享一个终端利器——<a href="http://baike.baidu.com/link?url=uqOhZydzIHteNDNe6NdyrNMTr9wyWgsKkEr0Ag0__Yg02yeZVyccv5wQH6U99aFbgkwt5kWYcUgxnpy1oBBGkK">tmux</a></p>
<img src="/2017/02/13/manual-of-tmux/tmux.jpg" class="" title="Tmux">
<a id="more"></a>

<h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><style>
table th:first-of-type {
    width: 100px;
}
</style>

<table>
<thead>
<tr>
<th align="center">?</th>
<th>列出所有快捷键；按q返回</th>
</tr>
</thead>
<tbody><tr>
<td align="center">d</td>
<td>脱离当前会话,可暂时返回Shell界面，输入tmux  attach能够重新进入之前会话</td>
</tr>
<tr>
<td align="center">s</td>
<td>选择并切换会话；在同时开启了多个会话时使用</td>
</tr>
<tr>
<td align="center">D</td>
<td>选择要脱离的会话；在同时开启了多个会话时使用</td>
</tr>
<tr>
<td align="center">:</td>
<td>进入命令行模式；此时可输入支持的命令，例如kill­server所有tmux会话</td>
</tr>
<tr>
<td align="center">[</td>
<td>复制模式，光标移动到复制内容位置，空格键开始，方向键选择复制，回车确认，q/Esc退出</td>
</tr>
<tr>
<td align="center">]</td>
<td>进入粘贴模式，粘贴之前复制的内容，按q/Esc退出</td>
</tr>
<tr>
<td align="center">~</td>
<td>列出提示信息缓存；其中包含了之前tmux返回的各种提示信息</td>
</tr>
<tr>
<td align="center">t</td>
<td>显示当前的时间</td>
</tr>
<tr>
<td align="center">Ctrl+z</td>
<td>挂起当前会话</td>
</tr>
</tbody></table>
<h2 id="窗口操作"><a href="#窗口操作" class="headerlink" title="窗口操作"></a>窗口操作</h2><table>
<thead>
<tr>
<th align="center">c</th>
<th>创建新窗口</th>
</tr>
</thead>
<tbody><tr>
<td align="center">&amp;</td>
<td>关闭当前窗口</td>
</tr>
<tr>
<td align="center">数字键</td>
<td>切换到指定窗口</td>
</tr>
<tr>
<td align="center">p</td>
<td>切换至上一窗口</td>
</tr>
<tr>
<td align="center">n</td>
<td>切换至下一窗口</td>
</tr>
<tr>
<td align="center">l</td>
<td>前后窗口间互相切换</td>
</tr>
<tr>
<td align="center">w</td>
<td>通过窗口列表切换窗口</td>
</tr>
<tr>
<td align="center">,</td>
<td>重命名当前窗口，便于识别</td>
</tr>
<tr>
<td align="center">.</td>
<td>修改当前窗口编号，相当于重新排序</td>
</tr>
<tr>
<td align="center">f</td>
<td>在所有窗口中查找关键词，便于窗口多了切换</td>
</tr>
</tbody></table>
<h2 id="面板操作"><a href="#面板操作" class="headerlink" title="面板操作"></a>面板操作</h2><table>
<thead>
<tr>
<th align="center">“</th>
<th>将当前面板上下分屏</th>
</tr>
</thead>
<tbody><tr>
<td align="center">%</td>
<td>将当前面板左右分屏</td>
</tr>
<tr>
<td align="center">x</td>
<td>关闭当前分屏</td>
</tr>
<tr>
<td align="center">!</td>
<td>将当前面板置于新窗口,即新建一个窗口,其中仅包含当前面板</td>
</tr>
<tr>
<td align="center">Ctrl+方向键</td>
<td>以1个单元格为单位移动边缘以调整当前面板大小</td>
</tr>
<tr>
<td align="center">Alt+方向键</td>
<td>以5个单元格为单位移动边缘以调整当前面板大小</td>
</tr>
<tr>
<td align="center">空格键</td>
<td>可以在默认面板布局中切换，试试就知道了</td>
</tr>
<tr>
<td align="center">q</td>
<td>显示面板编号</td>
</tr>
<tr>
<td align="center">o</td>
<td>选择当前窗口中下一个面板</td>
</tr>
<tr>
<td align="center">方向键</td>
<td>移动光标选择对应面板</td>
</tr>
<tr>
<td align="center">{</td>
<td>向前置换当前面板</td>
</tr>
<tr>
<td align="center">}</td>
<td>向后置换当前面板</td>
</tr>
<tr>
<td align="center">Alt+o</td>
<td>逆时针旋转当前窗口的面板</td>
</tr>
<tr>
<td align="center">Ctrl+o</td>
<td>顺时针旋转当前窗口的面板</td>
</tr>
<tr>
<td align="center">z</td>
<td>tmux 1.8新特性，最大化当前所在面板</td>
</tr>
</tbody></table>
<h2 id="视频示范"><a href="#视频示范" class="headerlink" title="视频示范"></a>视频示范</h2><p><a href="http://www.bilibili.com/video/av8595472/">BiliBili</a><br><embed height="415" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="//static.hdslb.com/miniloader.swf" flashvars="aid=8595472&page=1" pluginspage="//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash"></embed></p>
]]></content>
  </entry>
  <entry>
    <title>MC 基岩版(PE) 服务器来了</title>
    <url>/2018/10/13/mcpe-server/</url>
    <content><![CDATA[<p>好长时间没写了，前段时间登陆上MC官网，发现PE版本的服务端已经放出来了，有 Windows 版本和 Linux 版本，小小的尝试了一下，记录一下遇到的坑。<br>先放链接<a href="https://minecraft.net/en-us/download/server/bedrock/">https://minecraft.net/en-us/download/server/bedrock/</a></p>
<a id="more"></a>

<h2 id="Windows-上运行"><a href="#Windows-上运行" class="headerlink" title="Windows 上运行"></a>Windows 上运行</h2><p>下载，双击 <code>bedrock_server.exe</code> 就OK了，局域网内可以发现它。</p>
<p>如果是在 Windows 上运行应用商店的版本，并且服务端也在同一台机子上的话，得先把 Windows 10 对 UWP 应用的网络循环关掉，打开注册表，前往 <code>HKEY_CURRENT_USER\Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppContainer\Mappings\ </code> ，这里会列出电脑上安装好的 UWP 应用，然后一个一个往下找，同时观察右边窗口的 <code>DisplayName</code> ，直到找到 Minecraft for Windows 10 ，然后记录下左边条目的名字，如果没错的话，应该是这个：<code>S-1-15-2-1958404141-86561845-1752920682-3514627264-368642714-62675701-733520436</code> ，就像下图这样</p>
<img src="/2018/10/13/mcpe-server/2.png" class="" title="regedit">
<p>然后以管理员权限打开命令提示符，输入 <code>CheckNetIsolation.exe LoopbackExempt –a –p=ID</code> ，ID就是上面注册表内找到的条目的名字，提供一个示范</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">CheckNetIsolation.exe LoopbackExempt –a –p=S-1-15-2-1958404141-86561845-1752920682-3514627264-368642714-62675701-733520436</span><br></pre></td></tr></table></figure>
<p>出现如下提示的时候</p>
<img src="/2018/10/13/mcpe-server/3.png" class="">

<p>然后就可以在 Windows 10 的 UWP 版本在当前机子开黑了。超赞👍。</p>
<h2 id="Linux-上运行"><a href="#Linux-上运行" class="headerlink" title="Linux 上运行"></a>Linux 上运行</h2><p>极其不建议在Linux上运行服务端，目前的情况来看，官方的服务端会缺很多动态库，它所需要的动态库安装非常繁琐，有时候还会遇到依赖问题。</p>
<p>Linux上运行就有点麻烦了，如果使用 Ubuntu 的话，倒是很方便(注：我使用的是18.04版本)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install libcurl3 build-essential </span><br></pre></td></tr></table></figure>

<p>就可以完成依赖包的安装，下载服务端文件之后直接运行就OK。</p>
<p>对于 Cent OS 就麻烦很多了，官方提供的服务端在 Cent OS 7.5 上会缺东西，首先是 <code>libssl.0.0.so</code> 的缺失，就算自行下载 <code>openssl1.0.0</code> 编译好，它又提示 <code>glibc</code> 版本低，编译安装 <code>glibc</code> ，又会遇到 <code>gcc</code> 版本过低的问题，折腾时间增加很多，十分不合算。这里提供一个折中的办法—— <code>docker</code><br>docker真的是一个好东西啊，直接放解决办法吧：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker pull ubuntu:18.04</span><br><span class="line">docker run -p 19132:19132&#x2F;tcp -p 19132:19132&#x2F;udp -it ubuntu:18.04 bash</span><br></pre></td></tr></table></figure>
<p>两个-p参数，分别把tcp和udp协议的主机的19132端口映射到容器实例的19132端口(19132是MCPE服务器的默认端口)，有UDP协议，客户端才能发现服务端，有tcp协议，客户端才能连接到服务端。<br>PS：上面的操作只是做一个示范，启动容器之后需要像在Ubuntu那样安装好依赖，然后再启动MCPE服务端。</p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>一开始不知道docker怎么让容器同时支持tcp和udp，真是翻遍了度娘和404网站啊，最后还是官方的文档给了惊喜 <a href="https://docs.docker.com/config/containers/container-networking/">https://docs.docker.com/config/containers/container-networking/</a></p>
]]></content>
  </entry>
  <entry>
    <title>Nginx的一点点小折腾</title>
    <url>/2017/01/27/nginx-skill/</url>
    <content><![CDATA[<img src="/2017/01/27/nginx-skill/3.jpg" class="" title="Nginx">
<a id="more"></a>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>对于这样某个url来说，假设其站点在主机上的<code>/var/www/</code>目录下，若该目录下的结构是这样(图示结构为本站的目录结构):</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">├─2016</span><br><span class="line">│  ├─03</span><br><span class="line">│  │  ├─25</span><br><span class="line">│  │  │  └─hello-world</span><br><span class="line">│  │  ├─26</span><br><span class="line">│  │  │  └─First-day</span><br><span class="line">│  │  └─28</span><br><span class="line">│  │      └─ubuntu-touchpad</span><br><span class="line">│  ├─04</span><br><span class="line">│  │  ├─03</span><br><span class="line">│  │  │  └─Lake-Counting</span><br><span class="line">│  │  └─26</span><br><span class="line">│  │      └─start</span><br><span class="line">│  ├─07</span><br><span class="line">│  │  └─03</span><br><span class="line">│  │      └─Minecraft-server</span><br><span class="line">│  │          └─images</span><br><span class="line">│  ├─10</span><br><span class="line">│  │  └─20</span><br><span class="line">│  │      └─Aria2c</span><br><span class="line">│  ├─11</span><br><span class="line">│  │  ├─25</span><br><span class="line">│  │  │  └─High-Speed-transfer</span><br><span class="line">│  │  └─26</span><br><span class="line">│  │      ├─4-四元数与欧拉角</span><br><span class="line">│  │      └─NOIP2016</span><br><span class="line">│  └─12</span><br><span class="line">│      ├─05</span><br><span class="line">│      │  └─NOIP2016更改</span><br><span class="line">│      ├─09</span><br><span class="line">│      │  └─Dynamic-programming</span><br><span class="line">│      ├─23</span><br><span class="line">│      │  └─zheyilu</span><br><span class="line">│      └─31</span><br><span class="line">│          └─such-a-program</span><br><span class="line">├─2017</span><br><span class="line">│  └─01</span><br><span class="line">│      ├─06</span><br><span class="line">│      │  └─who-am-I</span><br><span class="line">│      ├─08</span><br><span class="line">│      │  ├─error-in-Linux-when-use-C-language</span><br><span class="line">│      │  └─install-node-js-on-a-Linux-OS</span><br><span class="line">│      ├─09</span><br><span class="line">│      │  └─install-node-js-on-raspberry-3B</span><br><span class="line">│      ├─10</span><br><span class="line">│      │  └─Ferryman</span><br><span class="line">│      ├─12</span><br><span class="line">│      │  └─replace-background-image-of-ubuntu-when-login-in-to-it</span><br><span class="line">│      ├─16</span><br><span class="line">│      │  └─home</span><br><span class="line">│      ├─19</span><br><span class="line">│      │  └─NOIP-2015-Message</span><br><span class="line">│      └─25</span><br><span class="line">│          └─use-proxy-in-terminal</span><br><span class="line">├─about</span><br><span class="line">├─archives</span><br><span class="line">│  ├─2016</span><br><span class="line">│  │  ├─03</span><br><span class="line">│  │  ├─04</span><br><span class="line">│  │  ├─07</span><br><span class="line">│  │  ├─10</span><br><span class="line">│  │  ├─11</span><br><span class="line">│  │  ├─12</span><br><span class="line">│  │  └─page</span><br><span class="line">│  │      └─2</span><br><span class="line">│  ├─2017</span><br><span class="line">│  │  └─01</span><br><span class="line">│  └─page</span><br><span class="line">│      ├─2</span><br><span class="line">│      └─3</span><br><span class="line">├─css</span><br><span class="line">├─images</span><br><span class="line">├─js</span><br><span class="line">│  └─src</span><br><span class="line">│      └─schemes</span><br><span class="line">├─lib</span><br><span class="line">│  ├─algolia-instant-search</span><br><span class="line">│  ├─fancybox</span><br><span class="line">│  │  └─source</span><br><span class="line">│  │      └─helpers</span><br><span class="line">│  ├─fastclick</span><br><span class="line">│  │  └─lib</span><br><span class="line">│  ├─font-awesome</span><br><span class="line">│  │  ├─css</span><br><span class="line">│  │  └─fonts</span><br><span class="line">│  ├─jquery</span><br><span class="line">│  ├─jquery_lazyload</span><br><span class="line">│  ├─ua-parser-js</span><br><span class="line">│  │  └─dist</span><br><span class="line">│  └─velocity</span><br><span class="line">├─page</span><br><span class="line">│  ├─2</span><br><span class="line">│  └─3</span><br><span class="line">└─tags</span><br><span class="line">    ├─C</span><br><span class="line">    ├─Games</span><br><span class="line">    ├─hexo</span><br><span class="line">    ├─Linux</span><br><span class="line">    ├─node-js</span><br><span class="line">    ├─NOIP</span><br><span class="line">    ├─raspberry</span><br><span class="line">    ├─technology</span><br><span class="line">    ├─tecnology</span><br><span class="line">    ├─Ubuntu</span><br><span class="line">    ├─ubuntu-touchpad-触控板调节</span><br><span class="line">    ├─wanwan</span><br><span class="line">    ├─乱七八糟</span><br><span class="line">    ├─动态规划</span><br><span class="line">    ├─学术</span><br><span class="line">    ├─小窍门</span><br><span class="line">    ├─文学</span><br><span class="line">    ├─深度优先搜索</span><br><span class="line">    ├─竞赛</span><br><span class="line">    └─算法</span><br></pre></td></tr></table></figure>
<p>此时，若是直接访问<code>hushuangpu.xyz/tags</code>看到的是站点目录下的<code>tags</code>文件夹内的内容。若是想要访问<code>hushuangpu.xyz/src</code>，且src指向的内容不在站点目录里面，该怎么弄？于是有了此文。</p>
<h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><p>这里用<code>Nginx</code>实现，只需要更改nginx的配置文件就好,若无意外，正常的nginx的配置文件内容应该如下:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">user nginx;                                                                 </span><br><span class="line">worker_processes auto;                                                      </span><br><span class="line">error_log /var/log/nginx/error.log;                                         </span><br><span class="line">pid /run/nginx.pid;                                                         </span><br><span class="line">                                                                            </span><br><span class="line"># Load dynamic modules. See /usr/share/nginx/README.dynamic.                </span><br><span class="line">include /usr/share/nginx/modules/*.conf;                                    </span><br><span class="line">                                                                            </span><br><span class="line">events &#123;                                                                    </span><br><span class="line">    worker_connections 1024;                                                </span><br><span class="line">&#125;                                                                           </span><br><span class="line">                                                                            </span><br><span class="line">http &#123;                                                                      </span><br><span class="line">    log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; </span><br><span class="line">                      &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;           </span><br><span class="line">                      &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;         </span><br><span class="line">                                                                            </span><br><span class="line">    access_log  /var/log/nginx/access.log  main;                            </span><br><span class="line">                                                                            </span><br><span class="line">    sendfile            on;                                                 </span><br><span class="line">    tcp_nopush          on;                                                 </span><br><span class="line">    tcp_nodelay         on;                                                 </span><br><span class="line">    keepalive_timeout   65;                                                 </span><br><span class="line">    types_hash_max_size 2048;                                               </span><br><span class="line">                                                                            </span><br><span class="line">    include             /etc/nginx/mime.types;                              </span><br><span class="line">    default_type        application/octet-stream;                           </span><br><span class="line">                                                                            </span><br><span class="line">    # Load modular configuration files from the /etc/nginx/conf.d directory.</span><br><span class="line">    # See http://nginx.org/en/docs/ngx_core_module.html#include             </span><br><span class="line">    # for more information.                                                 </span><br><span class="line">    include /etc/nginx/conf.d/*.conf;                                       </span><br><span class="line">                                                                            </span><br><span class="line">    server &#123;                                                                </span><br><span class="line">        listen       80 default_server;                                     </span><br><span class="line">        listen       [::]:80 default_server;                                </span><br><span class="line">        server_name  _;                                         </span><br><span class="line">                                                                            </span><br><span class="line">        # Load configuration files for the default server block.            </span><br><span class="line">        include /etc/nginx/default.d/*.conf;                                </span><br><span class="line">                                                                            </span><br><span class="line">        location / &#123;                                                        </span><br><span class="line">                root         /usr/share/nginx/html;                         </span><br><span class="line">        &#125;                                                                   </span><br><span class="line">                                                                            </span><br><span class="line">        error_page 404 /404.html;                                           </span><br><span class="line">            location = /40x.html &#123;                                          </span><br><span class="line">        &#125;                                                                   </span><br><span class="line">                                                                            </span><br><span class="line">        error_page 500 502 503 504 /50x.html;                               </span><br><span class="line">            location = /50x.html &#123;                                          </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>我的站点文件全部放在<code>/usr/share/nginx/html</code>目录里面了，然后我想让<code>hushuangpu.xyz/src</code>指向另外一个目录，比如<code>/var/resource</code>,在配置文件内添加如下内容:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">charset utf-8;#指定文件名编码，防止中文乱码，若是在Windows上使用，应该将其utf-8改成gbk</span><br><span class="line">client_max_body_size 4G;#限制单个最大文件的体积</span><br><span class="line">location /src &#123;#这行的src就是hushuangpu.xyz/src里面的src</span><br><span class="line">      alias /usr/resource/;#更改目录指向</span><br><span class="line">      autoindex on;#建立目录</span><br><span class="line">      autoindex_exact_size off;#显示文件体积</span><br><span class="line">      autoindex_localtime on;显示时间</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>本站实现示范如下:</p>
<img src="/2017/01/27/nginx-skill/1.jpg" class="" title="Demo">

<h2 id="其它说明"><a href="#其它说明" class="headerlink" title="其它说明"></a>其它说明</h2><p>在上文中，代码</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">charset utf-8;#指定文件名编码，防止中文乱码，若是在Windows上使用，应该将其utf-8改成gbk</span><br><span class="line">client_max_body_size 4G;#限制单个最大文件的体积</span><br><span class="line">location /src &#123;#这行的src就是hushuangpu.xyz/src里面的src</span><br><span class="line">      alias /usr/resource/;#更改目录指向</span><br><span class="line">      autoindex on;</span><br><span class="line">      autoindex_exact_size off;</span><br><span class="line">      autoindex_localtime on;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其实是在<code>/usr/resource</code>建立了以个静态文件服务器，若是要当成web服务器<br>则要改成这样</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">charset utf-8;#指定文件名编码，防止中文乱码，若是在Windows上使用，应该将其utf-8改成gbk</span><br><span class="line">client_max_body_size 4G;#限制单个最大文件的体积</span><br><span class="line">location /src &#123;#这行的src就是hushuangpu.xyz/src里面的src</span><br><span class="line">      alias /usr/resource/;#更改目录指向</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote class="blockquote-center">
            <p>生命重在折腾</p>

          </blockquote>]]></content>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派折腾记——Samba</title>
    <url>/2017/01/31/raspberry-train/</url>
    <content><![CDATA[<img src="/2017/01/31/raspberry-train/1.jpg" class="">
<a id="more"></a>
<p>树莓派用多了，总是要经常树莓派上传文件或者从树莓派下载文件，纵然可以使用putty携带的pscp或者rsync之类的命令行软件，但是总是不如图形界面来的方便，还省得记那些命令。<br>于是，有了此文。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install samba</span><br></pre></td></tr></table></figure>
<p>然后，编辑<code>/etc/samba/smb.conf</code>，在文件末尾添加上如下内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[public]</span><br><span class="line">comment &#x3D; Public Storage</span><br><span class="line">path &#x3D; &#x2F;home&#x2F;pi  #这里是用于树莓派共享到局域网的目录，这里设置为了pi用户的家目录</span><br><span class="line">read only &#x3D; no#任何人都具有了访问修改的权限</span><br><span class="line">#因为是公共文件夹，所以给了所有用户全部权限，可以自定义</span><br><span class="line">create mask &#x3D; 0777#新创建文件的默认属性</span><br><span class="line">directory mask &#x3D; 0777#新创建文件夹的默认属性</span><br><span class="line">guest ok &#x3D; yes#默认的访问用户名为guest</span><br><span class="line">browseable &#x3D; yes</span><br></pre></td></tr></table></figure>
<p>然后，通过命令<code>sudo smbd restart</code>，便可以在Windows的网络邻居里面发现树莓派了，如图</p>
<img src="/2017/01/31/raspberry-train/2.jpg" class="">
<p>此时只能看到树莓派出现在网络邻居里面，要想能正常查看树莓派上的内容，还是得要进行一些配置<br>输入如下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo smbpasswd -a pi</span><br></pre></td></tr></table></figure>
<p>按照提示，输入密码(密码是自定义的)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pi@raspberrypi:/etc/samba $ sudo smbpasswd -a pi</span><br><span class="line">New SMB password:</span><br><span class="line">Retype new SMB password:</span><br><span class="line">Added user pi.</span><br><span class="line">pi@raspberrypi:/etc/samba $</span><br></pre></td></tr></table></figure>
<p>然后，在网络邻居里面双击raspberry，会提示需要输入用户名和密码，用户名为<code>pi</code>，密码为刚才设置的密码。<br>然后，就可以畅快的用网络邻居与树莓派之间互传文件了。</p>
<img src="/2017/01/31/raspberry-train/3.jpg" class="">
<blockquote class="blockquote-center">
            <p>生命重在折腾</p>

          </blockquote>]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>替换Ubuntu默认的登录背景图片</title>
    <url>/2017/01/12/replace-background-image-of-ubuntu-when-login-in-to-it/</url>
    <content><![CDATA[<p>Ubuntu默认的登录背景看起来还是比较高贵的，但是作为一个爱折腾的人，当然要换成自己喜欢的背景图了。<br>一开始跟着百度走，进了不少坑，最后还是自己走出来的。<br>先上一个成品照</p>
<img src="/2017/01/12/replace-background-image-of-ubuntu-when-login-in-to-it/login.jpg" class="">
<a id="more"></a>
<p>百度得到的答案几乎都是安装<code>ubuntu tweak</code>，然而，安装ubuntu tweak的过程就很艰辛。</p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h2><p>ubuntu启动到达登录界面的时候，无非就是将已经存储在电脑上的背景图片显示在登录界面，找到这张图片，替换成自己的就好了。<br>系统默认的图片是在”/usr/share/background/“下的”warty-final-ubuntu.png”。有基础的童鞋到这儿已经知道该怎么办了，下面的是给新手看的。</p>
<h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><p>先准备好一张想要当成背景的图片(PS:必须是png格式的，jpg格式的不能用，我已经试过了)，假设这张图片叫<code>1.png</code>，放在用户主目录下，那么按<code>Ctrl Alt T</code>打开终端，输入以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/</span><br><span class="line">$ sudo mv /usr/share/background/warty-final-ubuntu.png /usr/share/background/warty-final-ubuntu.png-bak</span><br><span class="line">$ sudo mv 1.pn /usr/share/background/warty-final-ubuntu.png</span><br></pre></td></tr></table></figure>
<p>O了，注销或者重启一下，就可以看到成果了。</p>
<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>对于图片的尺寸要求，至少清晰度和要屏幕的分辨率一样高，这样才不会失真，比例最好用16:9的，现在大多数屏幕的比例都是这个。</p>
<blockquote class="blockquote-center">
            <p>生命重在折腾 </p>

          </blockquote>]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
        <tag>technology</tag>
      </tags>
  </entry>
  <entry>
    <title>【转载】重置 Windows 10 开始菜单布局</title>
    <url>/2018/04/05/reset-your-start-menu-layout-in-Windows-10-1709/</url>
    <content><![CDATA[<h2 id="中文版"><a href="#中文版" class="headerlink" title="中文版"></a>中文版</h2><p>Windows 10 从很久以前就开始有这个问题，升级或者全新安装以后开始菜单磁贴无法正常工作。拖动一下就会卡死，或者修改布局并重新登录以后就会重置成以前的样子。</p>
<p>此问题影响至少 1709 和 1803 版本，并且能在全新安装的系统上复现。</p>
<p>搜遍谷歌，找到一种解决方法，是删除注册表中对于开始菜单磁贴的缓存。</p>
<a id="more"></a>

<h3 id="Windows-1709"><a href="#Windows-1709" class="headerlink" title="Windows 1709"></a>Windows 1709</h3><p>管理员版本 Powershell 下执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Remove-Item <span class="string">&#x27;HKCU:\Software\Microsoft\Windows\CurrentVersion\CloudStore\Store\Cache\DefaultAccount\$start.tilegrid$windows.data.curatedtilecollection.root&#x27;</span> -Force -Recurse</span><br><span class="line">Get-Process Explorer | Stop-Process</span><br></pre></td></tr></table></figure>

<p>或使用注册表编辑器手动删除：</p>
<p><code>Computer\HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\CloudStore\Store\Cache\DefaultAccount</code> 下的<code>$start.tilegrid$windows.data.curatedtilecollection.root</code> 项目。</p>
<h3 id="Windows-1803"><a href="#Windows-1803" class="headerlink" title="Windows 1803"></a>Windows 1803</h3><p>管理员版本 Powershell 下执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Remove-Item <span class="string">&#x27;HKCU:\Software\Microsoft\Windows\CurrentVersion\CloudStore\Store\Cache\DefaultAccount\&#x27;</span> -Force -Recurse</span><br><span class="line">Get-Process Explorer | Stop-Process</span><br></pre></td></tr></table></figure>

<p>或使用注册表编辑器手动删除：</p>
<p>Computer\HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\CloudStore\Store\Cache\DefaultAccount 下以的 $start.tilegrid$windows.data.curatedtilecollection.root 结尾的项目。</p>
<h2 id="English"><a href="#English" class="headerlink" title="English"></a>English</h2><p>It has been a long while since Windows 10 had issues with its start menu layout, such as dragging and dropping icons causes crashes, or layout gets reverted after signing out and in. At least 1709 and 1803 fresh installations are affected.</p>
<p>A strategy to mitigate the issue, according to the other end of Google, is to remove the cache store in the system registery.</p>
<h3 id="Windows-1709-1"><a href="#Windows-1709-1" class="headerlink" title="Windows 1709"></a>Windows 1709</h3><p>Execute the following under Admin Powershell:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Remove-Item <span class="string">&#x27;HKCU:\Software\Microsoft\Windows\CurrentVersion\CloudStore\Store\Cache\DefaultAccount\$start.tilegrid$windows.data.curatedtilecollection.root&#x27;</span> -Force -Recurse</span><br><span class="line">Get-Process Explorer | Stop-Process</span><br></pre></td></tr></table></figure>

<p>Or, using the Registry Editor</p>
<p>Navigate to Computer\HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\CloudStore\Store\Cache\DefaultAccount and delete $start.tilegrid$windows.data.curatedtilecollection.root item.</p>
<h3 id="Windows-1803-1"><a href="#Windows-1803-1" class="headerlink" title="Windows 1803"></a>Windows 1803</h3><p>Execute the following under Admin Powershell:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Remove-Item <span class="string">&#x27;HKCU:\Software\Microsoft\Windows\CurrentVersion\CloudStore\Store\Cache\DefaultAccount\&#x27;</span> -Force -Recurse</span><br><span class="line">Get-Process Explorer | Stop-Process</span><br></pre></td></tr></table></figure>

<p>Or, using the Registry Editor</p>
<p>Navigate to Computer\HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\CloudStore\Store\Cache\DefaultAccount and delete item ending with $start.tilegrid$windows.data.curatedtilecollection.root.</p>
<hr>
<p>由于问题的普遍性，特留下中英文两版以供查阅。</p>
<p>References:</p>
<p>[1]: <a href="http://www.joseespitia.com/2018/01/05/how-to-reset-your-start-menu-layout-in-windows-10-1709/">How to reset your start menu layout in Windows 10 1709</a></p>
<p>转载自：<a href="https://www.v2ex.com/t/444426#reply4">https://www.v2ex.com/t/444426#reply4</a></p>
]]></content>
      <tags>
        <tag>Windows 10</tag>
      </tags>
  </entry>
  <entry>
    <title>Code::Blocks 快捷键</title>
    <url>/2017/07/05/shortcut-of-code-blocks/</url>
    <content><![CDATA[<img src="/2017/07/05/shortcut-of-code-blocks/cover.png" class="">
<a id="more"></a>
<h2 id="Editor"><a href="#Editor" class="headerlink" title="Editor"></a>Editor</h2><table>
<thead>
<tr>
<th>Function</th>
<th>Shortcut Key</th>
</tr>
</thead>
<tbody><tr>
<td>Undo last action</td>
<td>Ctrl + Z</td>
</tr>
<tr>
<td>Redo last action</td>
<td>Ctrl + Shift + Z</td>
</tr>
<tr>
<td>Cut selected text</td>
<td>Ctrl + X</td>
</tr>
<tr>
<td>Copy selected text</td>
<td>Ctrl + C</td>
</tr>
<tr>
<td>Paste text from clipboard</td>
<td>Ctrl + V</td>
</tr>
<tr>
<td>Select all text</td>
<td>Ctrl + A</td>
</tr>
<tr>
<td>Swap header / source</td>
<td>F11</td>
</tr>
<tr>
<td>Comment highlighted code</td>
<td>Ctrl + Shift + C</td>
</tr>
<tr>
<td>Uncomment highlighted code</td>
<td>Ctrl + Shift + X</td>
</tr>
<tr>
<td>Duplicate line caret is on</td>
<td>Ctrl + D</td>
</tr>
<tr>
<td>Auto-complete / Abbreviations</td>
<td>Ctrl + Space / Ctrl + J</td>
</tr>
<tr>
<td>Show call tip</td>
<td>Ctrl + Shift + Space</td>
</tr>
<tr>
<td>Swap line caret is on with line above it</td>
<td>Ctrl + T</td>
</tr>
<tr>
<td>Toggle bookmark</td>
<td>Ctrl + B</td>
</tr>
<tr>
<td>Goto previous bookmark</td>
<td>Alt + PgUp</td>
</tr>
<tr>
<td>Goto next bookmark</td>
<td>Alt + PgDown</td>
</tr>
<tr>
<td>Toggle current block folding</td>
<td>F12</td>
</tr>
<tr>
<td>Toggle all folds</td>
<td>Shift + F12</td>
</tr>
</tbody></table>
<p>This is a list of shortcuts provided by the Code::Blocks’ editor component. These shortcuts cannot be rebound.</p>
<table>
<thead>
<tr>
<th>Function</th>
<th>Shortcut Key</th>
</tr>
</thead>
<tbody><tr>
<td>Magnify text size.</td>
<td>Ctrl + Keypad “+”</td>
</tr>
<tr>
<td>Reduce text size.</td>
<td>Ctrl + Keypad “-“</td>
</tr>
<tr>
<td>Restore text size to normal.</td>
<td>Ctrl + Keypad “/“</td>
</tr>
<tr>
<td>Cycle through recent files.</td>
<td>Ctrl + Tab</td>
</tr>
<tr>
<td>Indent block.</td>
<td>Tab</td>
</tr>
<tr>
<td>Dedent block.</td>
<td>Shift + Tab</td>
</tr>
<tr>
<td>Delete to start of word.</td>
<td>Ctrl + BackSpace</td>
</tr>
<tr>
<td>Delete to end of word.</td>
<td>Ctrl + Delete</td>
</tr>
<tr>
<td>Delete to start of line.</td>
<td>Ctrl + Shift + BackSpace</td>
</tr>
<tr>
<td>Delete to end of line.</td>
<td>Ctrl + Shift + Delete</td>
</tr>
<tr>
<td>Go to start of document.</td>
<td>Ctrl + Home</td>
</tr>
<tr>
<td>Extend selection to start of document.</td>
<td>Ctrl + Shift + Home</td>
</tr>
<tr>
<td>Go to start of display line.</td>
<td>Alt + Home</td>
</tr>
<tr>
<td>Extend selection to start of display line.</td>
<td>Alt + Shift + Home</td>
</tr>
<tr>
<td>Go to end of document.</td>
<td>Ctrl + End</td>
</tr>
<tr>
<td>Extend selection to end of document.</td>
<td>Ctrl + Shift + End</td>
</tr>
<tr>
<td>Go to end of display line.</td>
<td>Alt + End</td>
</tr>
<tr>
<td>Extend selection to end of display line.</td>
<td>Alt + Shift + End</td>
</tr>
<tr>
<td>Expand or contract a fold point.</td>
<td>Ctrl + Keypad “*”</td>
</tr>
<tr>
<td>Create or delete a bookmark.</td>
<td>Ctrl + F2</td>
</tr>
<tr>
<td>Go to next bookmark.</td>
<td>F2</td>
</tr>
<tr>
<td>Select to next bookmark.</td>
<td>Alt + F2</td>
</tr>
<tr>
<td>Find selection.</td>
<td>Ctrl + F3</td>
</tr>
<tr>
<td>Find selection backwards.</td>
<td>Ctrl + Shift + F3</td>
</tr>
<tr>
<td>Scroll up.</td>
<td>Ctrl + Up</td>
</tr>
<tr>
<td>Scroll down.</td>
<td>Ctrl + Down</td>
</tr>
<tr>
<td>Line cut.</td>
<td>Ctrl + L</td>
</tr>
<tr>
<td>Line copy.</td>
<td>Ctrl + Shift + T</td>
</tr>
<tr>
<td>Line delete.</td>
<td>Ctrl + Shift + L</td>
</tr>
<tr>
<td>Line transpose with previous.</td>
<td>Ctrl + T</td>
</tr>
<tr>
<td>Line duplicate.</td>
<td>Ctrl + D</td>
</tr>
<tr>
<td>Find matching preprocessor conditional, skipping nested ones.</td>
<td>Ctrl + K</td>
</tr>
<tr>
<td>Select to matching preprocessor conditional.</td>
<td>Ctrl + Shift + K</td>
</tr>
<tr>
<td>Find matching preprocessor conditional backwards, skipping nested ones.</td>
<td>Ctrl + J</td>
</tr>
<tr>
<td>Select to matching preprocessor conditional backwards.</td>
<td>Ctrl + Shift + J</td>
</tr>
<tr>
<td>Previous paragraph. Shift extends selection.</td>
<td>Ctrl + [</td>
</tr>
<tr>
<td>Next paragraph. Shift extends selection.</td>
<td>Ctrl + ]</td>
</tr>
<tr>
<td>Previous word. Shift extends selection.</td>
<td>Ctrl + Left</td>
</tr>
<tr>
<td>Next word. Shift extends selection.</td>
<td>Ctrl + Right</td>
</tr>
<tr>
<td>Previous word part. Shift extends selection.</td>
<td>Ctrl + /</td>
</tr>
<tr>
<td>Next word part. Shift extends selection.</td>
<td>Ctrl + \</td>
</tr>
</tbody></table>
<h2 id="Files"><a href="#Files" class="headerlink" title="Files"></a>Files</h2><table>
<thead>
<tr>
<th>Function</th>
<th>Shortcut Key</th>
</tr>
</thead>
<tbody><tr>
<td>New file or project</td>
<td>Ctrl + N</td>
</tr>
<tr>
<td>Open existing file or project</td>
<td>Ctrl + O</td>
</tr>
<tr>
<td>Save current file</td>
<td>Ctrl + S</td>
</tr>
<tr>
<td>Save all files</td>
<td>Ctrl + Shift + S</td>
</tr>
<tr>
<td>Close current file</td>
<td>Ctrl + F4 / Ctrl + W</td>
</tr>
<tr>
<td>Close all files</td>
<td>Ctrl + Shift + F4 / Ctrl + Shift + W</td>
</tr>
</tbody></table>
<h2 id="View"><a href="#View" class="headerlink" title="View"></a>View</h2><table>
<thead>
<tr>
<th>Function</th>
<th>Shortcut Key</th>
</tr>
</thead>
<tbody><tr>
<td>Show / hide Messages pane</td>
<td>F2</td>
</tr>
<tr>
<td>Show / hide Management pane</td>
<td>Shift + F2</td>
</tr>
<tr>
<td>Move project up (in Project tree)</td>
<td>Ctrl + Shift + Up</td>
</tr>
<tr>
<td>Move project down (in Project tree)</td>
<td>Ctrl + Shift + Down</td>
</tr>
<tr>
<td>Activate prior (in Project tree)</td>
<td>Alt + F5</td>
</tr>
<tr>
<td>Activate next (in Project tree)</td>
<td>Alt + F6</td>
</tr>
<tr>
<td>Zoom in / out</td>
<td>Ctrl + Roll Mouse Wheel</td>
</tr>
<tr>
<td>Focus editor</td>
<td>CTRL + Alt + E</td>
</tr>
</tbody></table>
<h2 id="Search"><a href="#Search" class="headerlink" title="Search"></a>Search</h2><table>
<thead>
<tr>
<th>Function</th>
<th>Shortcut Key</th>
</tr>
</thead>
<tbody><tr>
<td>Find</td>
<td>Ctrl + F</td>
</tr>
<tr>
<td>Find next</td>
<td>F3</td>
</tr>
<tr>
<td>Find previous</td>
<td>Shift + F3</td>
</tr>
<tr>
<td>Find in files</td>
<td>Crtl + Shift + F</td>
</tr>
<tr>
<td>Replace</td>
<td>Ctrl + R</td>
</tr>
<tr>
<td>Replace in files</td>
<td>Ctrl + Shift + R</td>
</tr>
<tr>
<td>Goto line</td>
<td>Ctrl + G</td>
</tr>
<tr>
<td>Goto next changed line</td>
<td>Ctrl + F3</td>
</tr>
<tr>
<td>Goto previous changed line</td>
<td>Ctrl + Shift + F3</td>
</tr>
<tr>
<td>Goto file</td>
<td>Alt + G</td>
</tr>
<tr>
<td>Goto function</td>
<td>Ctrl + Alt + G</td>
</tr>
<tr>
<td>Goto previous function</td>
<td>Ctrl + PgUp</td>
</tr>
<tr>
<td>Goto next function</td>
<td>Ctrl + PgDn</td>
</tr>
<tr>
<td>Goto declaration</td>
<td>Ctrl + Shift + .</td>
</tr>
<tr>
<td>Goto implementation</td>
<td>Ctrl + .</td>
</tr>
<tr>
<td>Open include file</td>
<td>Ctrl + Alt + .</td>
</tr>
</tbody></table>
<h2 id="Build"><a href="#Build" class="headerlink" title="Build"></a>Build</h2><table>
<thead>
<tr>
<th>Function</th>
<th>Shortcut Key</th>
</tr>
</thead>
<tbody><tr>
<td>Build</td>
<td>Ctrl + F9</td>
</tr>
<tr>
<td>Compile current file</td>
<td>Ctrl + Shift + F9</td>
</tr>
<tr>
<td>Run</td>
<td>Ctrl + F10</td>
</tr>
<tr>
<td>Build and Run</td>
<td>F9</td>
</tr>
<tr>
<td>Rebuild</td>
<td>Ctrl + F11</td>
</tr>
</tbody></table>
<h2 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a>Debug</h2><table>
<thead>
<tr>
<th>Function</th>
<th>Shortcut Key</th>
</tr>
</thead>
<tbody><tr>
<td>Debug</td>
<td>F8</td>
</tr>
<tr>
<td>Continue debugging</td>
<td>Ctrl + F7</td>
</tr>
<tr>
<td>Step over a code block</td>
<td>F7</td>
</tr>
<tr>
<td>Step into a code block</td>
<td>Shift + F7</td>
</tr>
<tr>
<td>Step out of a code block</td>
<td>Ctrl + Shift + F7</td>
</tr>
<tr>
<td>Toggle breakpoint</td>
<td>F5</td>
</tr>
<tr>
<td>Run to cursor</td>
<td>F4</td>
</tr>
<tr>
<td>Previous error</td>
<td>Alt + F1</td>
</tr>
<tr>
<td>Next error</td>
<td>Alt + F2</td>
</tr>
</tbody></table>
<hr>
<p>内容来自官方wiki:<a href="http://wiki.codeblocks.org/index.php?title=Keyboard_Shortcuts">http://wiki.codeblocks.org/index.php?title=Keyboard_Shortcuts</a><br>看来得抽空翻译一下d=====(￣▽￣*)b</p>
]]></content>
  </entry>
  <entry>
    <title>Hexo 在 Next 主题下打开缓慢</title>
    <url>/2017/02/22/solve-a-problem/</url>
    <content><![CDATA[<p>之前遇到博客打开过于缓慢(甚至于打不开)的情况，将解决办法整理解决如下:</p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>本站使用的框架是<a href="https://hexo.io/">Hexo</a>，使用的主题是<a href="https://github.com/iissnan/hexo-theme-next">Next</a>。<br>Hexo和Next的安装和使用方法在之前的文章中有所提及，这里不再累述。</p>
<a id="more"></a>
<h2 id="字体导致的访问缓慢"><a href="#字体导致的访问缓慢" class="headerlink" title="字体导致的访问缓慢"></a>字体导致的访问缓慢</h2><p>方法来自<a href="http://blog.csdn.net/justheretobe/article/details/52167068">博客</a>，博客内容所指为</p>
<blockquote>
<h3 id="禁用第三方字体"><a href="#禁用第三方字体" class="headerlink" title="禁用第三方字体"></a>禁用第三方字体</h3><p>到Next主题的_config.yml中设置不从google加载字体（默认会加载本地字体）<br>设置：<br>use_font_lato: false</p>
</blockquote>
<h3 id="换字体源"><a href="#换字体源" class="headerlink" title="换字体源"></a>换字体源</h3><p>到\themes\next\layout_partials\head\external-fonts.swig文件<br>fonts.googleapis.com 改成 fonts.useso.com<br>按该文所述更改字体库来源之后，访问速度虽然有所提高，但是仍然需要很长时间。</p>
<p>可能该博客撰写时Next的版本较低，在<code>5.1.0</code>版本的Next的配置文件中，并没有<code>use_font_lato</code>字段，而是</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">font:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>
<p>改为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">font:</span><br><span class="line">  enable: false</span><br></pre></td></tr></table></figure>
<p>方法一效果较为明显，方法二几乎没有效果。<br>仔细对比是否使用第三方字体库，发现差别并不明显，所以果断选择方法一了。</p>
<h2 id="体积较大的资源导致的访问缓慢"><a href="#体积较大的资源导致的访问缓慢" class="headerlink" title="体积较大的资源导致的访问缓慢"></a>体积较大的资源导致的访问缓慢</h2><p>测试了<a href="https://suppermary.cc/">网站首页</a>，打开时间占用最长的是几张体积较大的图片，将这些图片压缩一下就好了。<br>另外是几个<code>js</code>文件，要减小这些得参考更高级的玩法，或者自己学js了(=.=)。</p>
<h2 id="网速导致的访问缓慢"><a href="#网速导致的访问缓慢" class="headerlink" title="网速导致的访问缓慢"></a>网速导致的访问缓慢</h2><p>本站位于腾讯云(GitPage 也有一份)，带宽为1M，虽然不限流量，但是这小水管实在是跑不起来，没办法了。GitHub又位于美国，访问速度同样缓慢，不忍直视。</p>
<blockquote class="blockquote-center">
            <p>生命在于折腾</p>

          </blockquote>]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>对排序的一点扯淡</title>
    <url>/2017/04/03/sort/</url>
    <content><![CDATA[<img src="/2017/04/03/sort/1.jpg" class="">
<a id="more"></a>
<p>对数据进行排序，是需要经常进行的操作。<br>手动写排序，归并，冒泡，插入之类的都可以，不过有<code>algorithm</code>自带的<code>sort</code>就省了一些麻烦了。<br>对需要排序的数组这样写<code>sort(a,a+n)</code>(假设a为需要排序的数组，n为数组的长度)<br>再细化一点的话，就这样写:<code>sort(a+n1,a+n2)</code>，这样是对<code>a</code>数组的下标为n1的元素直到下标为n2的元素进行排序，自然，n2&gt;n1。<br>但是吧，有时候，需要排序的不仅仅只是一个数组，这个数组与其他的信息有一定的联系，比如这样的</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="keyword">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">stu</span>[3]=&#123;</span><span class="string">&quot;stu1&quot;</span>,<span class="number">70</span>,<span class="string">&quot;stu2&quot;</span>,<span class="number">80</span>,<span class="string">&quot;stu3&quot;</span>,<span class="number">60</span>&#125;;<span class="comment">//初始化</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;stu[i].name&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;stu[i].score&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>结构体内为学生的姓名和成绩，我想以成绩为准排序，当然了，姓名和成绩的对应关系不能乱掉。<br>这个时候肯定不能写成<code>sort(stu,stu+3)</code>，需要给sort加上一定的排序依据。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="keyword">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">compare</span><span class="params">(Student a,Student b)</span> <span class="comment">//这个比较函数的参数类型也要写成结构体</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.score&gt;b.score;<span class="comment">//&quot;&gt;&quot;是进行降序排序，如果要升序改成&lt;，其实sort默认是升序</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">stu</span>[3]=&#123;</span><span class="string">&quot;stu1&quot;</span>,<span class="number">70</span>,<span class="string">&quot;stu2&quot;</span>,<span class="number">80</span>,<span class="string">&quot;stu3&quot;</span>,<span class="number">60</span>&#125;;</span><br><span class="line">    sort(stu,stu+<span class="number">3</span>,compare);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;stu[i].name&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;stu[i].score&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>扯一点题外的，看看<code>类</code>的排序</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="keyword">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">compare</span><span class="params">(Student a,Student b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.score&gt;b.score;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Student stu[<span class="number">3</span>]=&#123;<span class="string">&quot;stu1&quot;</span>,<span class="number">70</span>,<span class="string">&quot;stu2&quot;</span>,<span class="number">80</span>,<span class="string">&quot;stu3&quot;</span>,<span class="number">60</span>&#125;;</span><br><span class="line">    sort(stu,stu+<span class="number">3</span>,compare);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;stu[i].name&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;stu[i].score&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>两段代码的区别仅仅是结构体和类的区别而已，结构体和类长得如此相似，访问成员的方式都如此相似，他们的共同存在真是迷惑了不少人，颇有周瑜和诸葛两人之意。</p>
<img src="/2017/04/03/sort/ahaha.jpg" class="">
<p><a href="http://www.cnblogs.com/starfire86/p/5367740.html">http://www.cnblogs.com/starfire86/p/5367740.html</a>，此文做了一定的解说，还不错。</p>
<blockquote class="blockquote-center">
            <p>生命重在折腾 </p>

          </blockquote>]]></content>
      <tags>
        <tag>C</tag>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>来说一说 ssdp 协议</title>
    <url>/2020/10/20/ssdp/</url>
    <content><![CDATA[<p>本篇同样是Yeelight相关的文章的衍生。简单来说，Yeelight的设备会在监听组播地址 239.255.255.250:1982 的特定消息，收到这个特定消息之后，向发送特定消息的客户端发送自己的一些信息，方便这个客户端与自己进行交互。</p>
<p>ssdp(Simple Service Discovery Protocol) 协议原文可以查看 <a href="https://tools.ietf.org/html/draft-cai-ssdp-v1-00">https://tools.ietf.org/html/draft-cai-ssdp-v1-00</a></p>
<a id="more"></a>

<p>我在<a href="https://github.com/armtech/recvudp">这里</a>找到一个Unix可用的一个ssdp服务端的一个小例子，稍微改造了一下用来模拟Yeelight的服务端</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * recvudp.c</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * A simple UDP receiver with multicast addressing</span></span><br><span class="line"><span class="comment"> * This mechanism based on the Simple Service Discovery Protocol (SSDP)</span></span><br><span class="line"><span class="comment"> * Reference:  https://tools.ietf.org/html/draft-cai-ssdp-v1-00</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;,</span></span><br><span class="line"><span class="comment"> * WITHOUT WARRANTY OF ANY KIND!</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Author: Andrejs Tihomirovs</span></span><br><span class="line"><span class="comment"> * Email: armtech@its.lv</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netinet/in.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span>* group = <span class="string">&quot;239.255.255.250&quot;</span>;</span><br><span class="line">    <span class="keyword">int</span> port = <span class="number">1982</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span>* sendData = <span class="string">&quot;M-SEARCH * HTTP/1.1\r\nHOST: 239.255.255.250:1982\r\nMAN: \&quot;ssdp:discover\&quot;\r\nST: wifi_bulb&quot;</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span>* info = <span class="string">&quot;I&#x27;m server\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// create UDP socket</span></span><br><span class="line">    <span class="keyword">int</span> sockfd;</span><br><span class="line">    <span class="keyword">if</span> ((sockfd = socket(AF_INET, SOCK_DGRAM, <span class="number">0</span>)) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        perror(<span class="string">&quot;recvudp&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// allow multiple sockets</span></span><br><span class="line">    <span class="keyword">int</span> optname = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (setsockopt(sockfd, SOL_SOCKET, SO_REUSEADDR,</span><br><span class="line">        (<span class="keyword">char</span> *) &amp;optname, <span class="keyword">sizeof</span>(optname)) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        perror(<span class="string">&quot;recvudp&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// set up destination address</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">addr</span>;</span></span><br><span class="line">    <span class="built_in">memset</span>(&amp;addr, <span class="number">0</span>, <span class="keyword">sizeof</span>(addr));</span><br><span class="line">    addr.sin_family = AF_INET;</span><br><span class="line">    addr.sin_addr.s_addr = htonl(INADDR_ANY);</span><br><span class="line">    addr.sin_port = htons(port);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// socket binding</span></span><br><span class="line">    <span class="keyword">if</span> (bind(sockfd, (struct sockaddr*) &amp;addr, <span class="keyword">sizeof</span>(addr)) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        perror(<span class="string">&quot;recvudp&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// join to multicast group</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ip_mreq</span> <span class="title">mreq</span>;</span></span><br><span class="line">    mreq.imr_multiaddr.s_addr = inet_addr(group);</span><br><span class="line">    mreq.imr_interface.s_addr = htonl(INADDR_ANY);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (setsockopt(sockfd, IPPROTO_IP, IP_ADD_MEMBERSHIP,</span><br><span class="line">        (<span class="keyword">char</span> *) &amp;mreq, <span class="keyword">sizeof</span>(mreq)) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        perror(<span class="string">&quot;recvudp&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// main loop</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="meta">#<span class="meta-keyword">define</span> BUFSIZE 256</span></span><br><span class="line">        <span class="keyword">char</span> buf[BUFSIZE];</span><br><span class="line">        <span class="keyword">int</span> numbytes, addrlen = <span class="keyword">sizeof</span>(addr);</span><br><span class="line">        <span class="built_in">memset</span>(buf, <span class="number">0</span>, <span class="keyword">sizeof</span>(buf));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// receive UDP message</span></span><br><span class="line">        <span class="keyword">if</span> ((numbytes = recvfrom(sockfd, buf, BUFSIZE<span class="number">-1</span> , <span class="number">0</span>,</span><br><span class="line">            (struct sockaddr *)&amp;addr, &amp;addrlen)) == <span class="number">-1</span>) &#123;</span><br><span class="line">            perror(<span class="string">&quot;recvudp&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(buf,sendData)==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n%s\nLEN:%d bytes from %s\n&quot;</span>, buf, numbytes,inet_ntoa(addr.sin_addr));</span><br><span class="line">            sendto(sockfd, info, <span class="built_in">strlen</span>(info), <span class="number">0</span>,</span><br><span class="line">                        (struct sockaddr*) &amp;addr, <span class="keyword">sizeof</span>(addr));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;LEN:%d bytes\n%s&quot;</span>,numbytes,buf);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>需要注意的是，按照ssdp协议原本的定义，服务端应该监听的地址是 239.255.255.250:1900 。不过 Yeelight 选择监听 239.255.255.250:1982 而已。原理上还是一样的。</p>
<p>可以看到相比于通常所用的udp服务端，多了两个地方</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// allow multiple sockets</span></span><br><span class="line">setsockopt(sockfd, SOL_SOCKET, SO_REUSEADDR,(<span class="keyword">char</span> *) &amp;optname, <span class="keyword">sizeof</span>(optname)) </span><br><span class="line"></span><br><span class="line"><span class="comment">// join to multicast group</span></span><br><span class="line">setsockopt(sockfd, IPPROTO_IP, IP_ADD_MEMBERSHIP,(<span class="keyword">char</span> *) &amp;mreq, <span class="keyword">sizeof</span>(mreq))</span><br></pre></td></tr></table></figure>
<p>参考上面的例子我们可以很容易的移植到Windows上。</p>
<p>一个简单的发现服务端可以写成下面这样子</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netinet/in.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> CLIENT_PORT = <span class="number">1982</span>;</span><br><span class="line"><span class="keyword">char</span> *CLIENT_IP = <span class="string">&quot;239.255.255.250&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> socket_fd = socket(AF_INET, SOCK_DGRAM, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (socket_fd == <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;failed to create socket. exit now.&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">addr</span>;</span></span><br><span class="line">    addr.sin_family = AF_INET;</span><br><span class="line"></span><br><span class="line">    addr.sin_port = htons(CLIENT_PORT);</span><br><span class="line">    addr.sin_addr.s_addr = inet_addr(CLIENT_IP);</span><br><span class="line">    <span class="keyword">if</span> (addr.sin_addr.s_addr == INADDR_NONE)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Incorrect ip address!&quot;</span>);</span><br><span class="line">        close(socket_fd);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> buff[<span class="number">512</span>];</span><br><span class="line">    <span class="keyword">socklen_t</span> len = <span class="keyword">sizeof</span>(addr);</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *info = <span class="string">&quot;M-SEARCH * HTTP/1.1\r\nHOST: 239.255.255.250:1982\r\nMAN: \&quot;ssdp:discover\&quot;\r\nST: wifi_bulb&quot;</span>;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    </span><br><span class="line">    n = sendto(socket_fd, info, <span class="built_in">strlen</span>(info), <span class="number">0</span>, (struct sockaddr *)&amp;addr, <span class="keyword">sizeof</span>(addr));</span><br><span class="line">    <span class="keyword">if</span> (n &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;sendto&quot;</span>);</span><br><span class="line">        close(socket_fd);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(buff, <span class="number">0</span>, <span class="keyword">sizeof</span>(buff));</span><br><span class="line">        n = recvfrom(socket_fd, buff, <span class="number">512</span>, <span class="number">0</span>, (struct sockaddr *)&amp;addr, &amp;len);</span><br><span class="line">        <span class="keyword">if</span> (n &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            buff[n] = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;received from %s:\n%s&quot;</span>, inet_ntoa(addr.sin_addr),buff);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;server closed\n&quot;</span>);</span><br><span class="line">            close(socket_fd);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            perror(<span class="string">&quot;recvfrom&quot;</span>);</span><br><span class="line">            close(socket_fd);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>通过上边的服务端和客户端的小例子，也同样是可以试验出来，发送“查找消息之后”，客户端多循环几次就能收到多个服务端返回的消息了，如下图</p>
<img src="/2020/10/20/ssdp/udpclient.png" class="">

<p>并且可以看到为了防止客户端没有收到消息，Yeelight设备发了两次响应消息。</p>
<p>那么对于我们来说，ssdp的一个比较典型的使用场景就是，在同一个网段中，一个设备（这里称为客户端）想要找到另外一个设备（这里称为服务端）（在不手动指定地址的情况下），客户端往组播地址发送特定消息，获取到服务端的信息，然后与服务端交互。比如工厂流水线上，PC作为服务端，产品作为客户端，由于客户端的mac地址不同，当连接到路由器上是，路由器分配给产品的IP地址不一定是一样的，就可以用这种办法来了。</p>
<p>python 的服务端实现可以参考这个 <a href="https://www.cnblogs.com/chengyunshen/p/7196094.html">https://www.cnblogs.com/chengyunshen/p/7196094.html</a></p>
]]></content>
  </entry>
  <entry>
    <title>本站建立</title>
    <url>/2016/04/26/start/</url>
    <content><![CDATA[<h2 id="建站分享"><a href="#建站分享" class="headerlink" title="建站分享"></a>建站分享</h2><p>遵循大家都默认的一个规则——建立好站点之后，分享自己建立站点的过程。</p>
<a id="more"></a>

<h3 id="租用服务器"><a href="#租用服务器" class="headerlink" title="租用服务器"></a>租用服务器</h3><p>首先我在租用了搬瓦工的VPS，VPS运行cent os 6.系统环境对于个人站点来说不是非常重要，ubuntu，debian，甚至red hat都可以，看个人习惯。</p>
<h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><p>nginx就是一个软件，它监听着计算机的80端口，当检测到有浏览器访问当前计算机的IP地址的时候（浏览器访问一台计算机默认访问80端口），nginx就会返回用户之前写好的网页给浏览器，完成了一个网站的访问过程。在linux下安装nginx还是非常简单的。<br>debian/ubuntu通过以下命令来安装nginx：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install nginx</span><br></pre></td></tr></table></figure>
<p>cent os/red hat 通过以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo yum install nginx</span><br></pre></td></tr></table></figure>
<p>首次安装还nginx之后它默认启动了，但是计算机重启之后，nginx不会随系统启动，可以手动启动nginx</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo service nginx start</span><br></pre></td></tr></table></figure>
<p>或者让nginx随系统启动</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat sudo service nginx start &gt;&gt; /etc/profile</span><br></pre></td></tr></table></figure>
<p>注意“&gt;&gt;”是两个，如果提示权限不足，就切换到root用户，使用：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ su root</span><br></pre></td></tr></table></figure>
<p>输入root用户密码</p>
<h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><p>nginx给浏览器返回网页，这个网页就得自己来弄了，nginx可不会帮你，但是不会写网页代码怎么办？用来生成网页的工具很多，这里我使用了hexo，这个是一个台湾的大学生开发的用来生成静态网页的软件，真的佩服人家。<br>hexo依赖于node.js，首先在电脑上安装node.js，linux端可以这样</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget -q0- https://raw.github.com/creationix/master/install.sh | sh</span><br></pre></td></tr></table></figure>
<p>然后重启终端，输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ nvm install 4</span><br><span class="line">$ npm install -g hexo-cli</span><br><span class="line">$ npm install hexo-deployer-rsync --save</span><br></pre></td></tr></table></figure>
<p>完成node.js 和部署插件rsync的安装<br>windows端可以到node.js的官网下载msi包安装后，在cmd输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br><span class="line">$ npm install hexo-deployer-rsync --save</span><br></pre></td></tr></table></figure>
<p>现在可以输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo init blog</span><br></pre></td></tr></table></figure>
<p>来新建一个名为blog的文件夹，这个文件夹的名字自己取，进入这个文件夹，输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo s --debug</span><br></pre></td></tr></table></figure>
<p>看到</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">15:14:02.409 INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br><span class="line">15:14:02.432 DEBUG Database saved</span><br></pre></td></tr></table></figure>
<p>的字样后，打开浏览器，访问localhost:4000,看看能否打开一个hexo的网页,能打开的话，证明hexo已经能在电脑上运行了。<br>然后编辑blog文件夹下的”<em>config.yml</em>“文件,在大约73行，”theme”后面的就是hexo生成静态网页的时候所使用的主题，本站所使用的主题是<a href="https://github.com/iissnan/hexo-them-next">next</a>,主题存在于blog文件夹下的them文件夹内。<br>在约80行左右，会有”deploy:”字样，这里填写的是部署网站的时候所用的一些组件需要的参数，如果按照本博客所说来安装hexo的话，可以参照以下填写方法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    <span class="built_in">type</span>: rsync</span><br><span class="line">    host: 0.0.0.0   //这里填写服务器的IP地址</span><br><span class="line">    user: root   //这里填写部署网站是登陆服务器所用的用户</span><br><span class="line">    root: /usr/share/nginx/html/     //这里是nginx默认的服务器站点目录，文末细说</span><br><span class="line">    port: 26487     //这里是登陆服务器所用的端口，也就是ssh所用的端口</span><br><span class="line">    delete: <span class="literal">false</span>   //下面三个可以参照我的填法，也可以自己更改</span><br><span class="line">    verbose: <span class="literal">true</span></span><br><span class="line">    ignore_errors: <span class="literal">false</span></span><br></pre></td></tr></table></figure>


<h3 id="在本地生成网页静态文件并部署到网站"><a href="#在本地生成网页静态文件并部署到网站" class="headerlink" title="在本地生成网页静态文件并部署到网站"></a>在本地生成网页静态文件并部署到网站</h3><p>切换到blog文件夹内(windows可以使用cmd，linux使用终端)，输入命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$  hexo new <span class="string">&quot;blog&quot;</span></span><br></pre></td></tr></table></figure>
<p>然后在source的_posts_文件夹下面就会生成一个blog.md的文件，使用任何一个文本编辑器编辑这个文件，把想要写在博客上的东西直接编辑到这个文件内，就可以了。<br>然后切换到blog文件夹，输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$  hexo g</span><br></pre></td></tr></table></figure>
<p>就可以生成网页静态文件了，生成的网页静态文件在public文件夹内，然后使用：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$  hexo d</span><br></pre></td></tr></table></figure>
<p>就可以将网页文件部署到服务器，打开浏览器，就能看到做好的网站了。</p>
<h2 id="一些小总结"><a href="#一些小总结" class="headerlink" title="一些小总结"></a>一些小总结</h2><p>先说一下nginx，nginx会向浏览器返回网站的网页文件，这些网页文件默认在“/usr/share/nginx/www/”下面，有时候不一定在“www”下，可能是“html”文件夹，我自己的服务器就是“html”。<br>部署便是讲已经做好的网页文件上传到服务器的这个文件夹下，浏览器便能正常访问到做好的网页。</p>
<p>然后说一下config.yml文件的”root:”,冒号后面是nginx的工作目录，nginx安装后默认一般都是”/usr/share/nginx/XXX/“下面，hexo部署的时候，便会将网页部署岛这个文件夹下面。</p>
<p>PS：我尝试在windows部署网站，但是遇到一些问题，第一次是环境错误，各种百度之后，可以成功部署，但部署之后无法访问，提示“403 forbidden”，便要手动将“/usr/share/nginx/XXX/”目录下面的所有文件夹(包括子文件夹)的属性改为775，文件属性改成664，才可以访问。</p>
]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>hexo</tag>
        <tag>Technology</tag>
      </tags>
  </entry>
  <entry>
    <title>tensorflow 初探 | tensorflow for poets</title>
    <url>/2018/12/06/tensorflow-for-poets/</url>
    <content><![CDATA[<p>从某个角度来说，这篇更像是翻译，原文在<a href="https://codelabs.developers.google.com/codelabs/tensorflow-for-poets/#0">https://codelabs.developers.google.com/codelabs/tensorflow-for-poets/#0</a>，原文踩梯子去看就好。</p>
<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><h3 id="你要搭建什么"><a href="#你要搭建什么" class="headerlink" title="你要搭建什么"></a>你要搭建什么</h3><p>训练一个用于给花分类的简单分类器</p>
<img src="/2018/12/06/tensorflow-for-poets/1.png" class="" title="tensorflow for poets">

<p>分类结果</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">daisy (score = 0.99071)</span><br><span class="line">sunflowers (score = 0.00595)</span><br><span class="line">dandelion (score = 0.00252)</span><br><span class="line">roses (score = 0.00049)</span><br><span class="line">tulips (score = 0.00032)</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="你会学到什么"><a href="#你会学到什么" class="headerlink" title="你会学到什么"></a>你会学到什么</h3><ul>
<li>如何使用 Python 和 tensorflow 来训练一个图片分类器</li>
<li>如何使用这个分类器来分类图片</li>
</ul>
<h3 id="你需要会什么"><a href="#你需要会什么" class="headerlink" title="你需要会什么"></a>你需要会什么</h3><ul>
<li>一点点命令行的基础操作</li>
</ul>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="安装tensorflow"><a href="#安装tensorflow" class="headerlink" title="安装tensorflow"></a>安装tensorflow</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install --upgrade <span class="string">&quot;tensorflow==1.7.*&quot;</span></span><br></pre></td></tr></table></figure>

<p>PS: 至少需要1.7版本的tensorflow<br>原文使用了<code>pip</code>命令，但是我个人推荐使用anaconda，国内可以前往<a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/">清华软件源</a>下载对应版本，推荐python3版本，安装后按照<a href="https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/">帮助</a>配置好清华源，然后使用命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda install tensorflow</span><br></pre></td></tr></table></figure>

<p>安装tensorflow</p>
<h3 id="下载-git-repository"><a href="#下载-git-repository" class="headerlink" title="下载 git repository"></a>下载 git repository</h3><p>确保你的git命令可用，然后</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/googlecodelabs/tensorflow-for-poets-2</span><br><span class="line"><span class="built_in">cd</span> tensorflow-for-poets-2</span><br></pre></td></tr></table></figure>

<h2 id="下载训练用的图片"><a href="#下载训练用的图片" class="headerlink" title="下载训练用的图片"></a>下载训练用的图片</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://download.tensorflow.org/example_images/flower_photos.tgz</span><br></pre></td></tr></table></figure>

<p>这个是tensorflow网站上的已经分类好的图片，可以免费下载，下载后将他解压到<code>tensorflow-for-poets-2</code>文件夹下的<code>tf_files</code>文件夹内</p>
<p>Linux 用户可以直接输入命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl http://download.tensorflow.org/example_images/flower_photos.tgz | tar xz -C tf_files</span><br></pre></td></tr></table></figure>

<p>这个时候<code>tf_files/flower_photos</code>目录里应该是这个样子的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">daisy/</span><br><span class="line">dandelion/</span><br><span class="line">roses/</span><br><span class="line">sunflowers/</span><br><span class="line">tulip/</span><br><span class="line">LICENSE.txt</span><br></pre></td></tr></table></figure>

<p>PS： 这里目录不能放错</p>
<h2 id="开工"><a href="#开工" class="headerlink" title="开工"></a>开工</h2><h3 id="配置-MobileNet"><a href="#配置-MobileNet" class="headerlink" title="配置 MobileNet"></a>配置 MobileNet</h3><p>翻译水平有限，贴一下原文</p>
<blockquote>
<p>In this exercise, we will retrain a MobileNet. MobileNet is a a small efficient convolutional neural network. “Convolutional” just means that the same calculations are performed at each location in the image.<br>The MobileNet is configurable in two ways:</p>
</blockquote>
<ul>
<li>Input image resolution: 128,160,192, or 224px. Unsurprisingly, feeding in a higher resolution image takes more processing time, but results in better classification accuracy.</li>
<li>The relative size of the model as a fraction of the largest MobileNet: 1.0, 0.75, 0.50, or 0.25.</li>
</ul>
<blockquote>
<p>We will use 224 0.5 for this codelab.<br>With the recommended settings, it typically takes only a couple of minutes to retrain on a laptop. You will pass the settings inside Linux shell variables. Set those variables in your shell:</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">IMAGE_SIZE=224</span><br><span class="line">ARCHITECTURE=<span class="string">&quot;mobilenet_0.50_<span class="variable">$&#123;IMAGE_SIZE&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>

<p>最后，你需要设置两个变量</p>
<h4 id="对于Linux系统，输入以下命令"><a href="#对于Linux系统，输入以下命令" class="headerlink" title="对于Linux系统，输入以下命令"></a>对于Linux系统，输入以下命令</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">IMAGE_SIZE=224</span><br><span class="line">ARCHITECTURE=<span class="string">&quot;mobilenet_0.50_<span class="variable">$&#123;IMAGE_SIZE&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="对于Windoiws系统"><a href="#对于Windoiws系统" class="headerlink" title="对于Windoiws系统"></a>对于Windoiws系统</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> <span class="string">&quot;IMAGE_SIZE=224&quot;</span></span><br><span class="line"><span class="built_in">set</span> <span class="string">&quot;ARCHITECTURE=&quot;</span>mobilenet_0.50_%IMAGE_SIZE%<span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="启动-TensorBoard"><a href="#启动-TensorBoard" class="headerlink" title="启动 TensorBoard"></a>启动 TensorBoard</h3><p>TensorBoard在安装 tensorflow 时会自动安装，如果没有这个命令，检查一下 tensorflow 是否安装成功</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tensorboard --logdir tf_files/training_summaries</span><br></pre></td></tr></table></figure>

<p>PS: 这个命令需要在<code>tensorflow-for-poets-2</code>目录里面执行</p>
<blockquote>
<p>如果你之前执行过这个命令，那么你会看到一下提示</p>
<blockquote>
</blockquote>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ERROR:tensorflow:TensorBoard attempted to <span class="built_in">bind</span> to port 6006, but it was already <span class="keyword">in</span> use</span><br></pre></td></tr></table></figure>
<blockquote>
<p>可以用命令</p>
<blockquote>
</blockquote>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pkill -f <span class="string">&quot;tensorboard&quot;</span></span><br></pre></td></tr></table></figure>
<p>结束之前启动的进程，Windows可以用任务管理器结束这个进程。</p>
<h3 id="查看-retrain-脚本"><a href="#查看-retrain-脚本" class="headerlink" title="查看 retrain 脚本"></a>查看 retrain 脚本</h3><p>这个脚本来自<a href="https://github.com/tensorflow/hub/blob/master/examples/image_retraining/retrain.py">TensorFlow Hub repo</a>，但是并不是用<code>pip</code>之类的命令来安装的，并且已经包含在这个repo里面了，你可以用这个python来运行这个脚本，查看帮助</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -m scripts.retrain -h</span><br></pre></td></tr></table></figure>

<h3 id="开始训练"><a href="#开始训练" class="headerlink" title="开始训练"></a>开始训练</h3><p>用下面这个超长的命令来开始训练(你需要注意<code>--summaries_dir</code>命令)</p>
<p>For Linux</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -m scripts.retrain \</span><br><span class="line">  --bottleneck_dir=tf_files/bottlenecks \</span><br><span class="line">  --how_many_training_steps=500 \</span><br><span class="line">  --model_dir=tf_files/models/ \</span><br><span class="line">  --summaries_dir=tf_files/training_summaries/<span class="string">&quot;<span class="variable">$&#123;ARCHITECTURE&#125;</span>&quot;</span> \</span><br><span class="line">  --output_graph=tf_files/retrained_graph.pb \</span><br><span class="line">  --output_labels=tf_files/retrained_labels.txt \</span><br><span class="line">  --architecture=<span class="string">&quot;<span class="variable">$&#123;ARCHITECTURE&#125;</span>&quot;</span> \</span><br><span class="line">  --image_dir=tf_files/flower_photos</span><br></pre></td></tr></table></figure>

<p>For Windows</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -m scripts.retrain ^</span><br><span class="line">  --bottleneck_dir=tf_files/bottlenecks ^</span><br><span class="line">  --how_many_training_steps=500 ^</span><br><span class="line">  --model_dir=tf_files/models/ ^</span><br><span class="line">  --summaries_dir=tf_files/training_summaries/<span class="string">&quot;%ARCHITECTURE%&quot;</span> ^</span><br><span class="line">  --output_graph=tf_files/retrained_graph.pb ^</span><br><span class="line">  --output_labels=tf_files/retrained_labels.txt ^</span><br><span class="line">  --architecture=<span class="string">&quot;%ARCHITECTURE%&quot;</span> ^</span><br><span class="line">  --image_dir=tf_files/flower_photos</span><br></pre></td></tr></table></figure>

<p>这一步会花很长时间。<br>如果你需要更高精度，那么需要更多的时间，更改<code>--how_many_training_steps=500</code>，把500该得更大比如默认的<code>4000</code>。</p>
<h3 id="查看训练结果"><a href="#查看训练结果" class="headerlink" title="查看训练结果"></a>查看训练结果</h3><p>如果你运行了<code>tensorboard --logdir tf_files/training_summaries</code>，那么你可以在打开浏览器，输入”127.0.0.1:6006”，来查看一些数据，看起来像下面这个样子</p>
<img src="/2018/12/06/tensorflow-for-poets/2.jpg" class="">

<h2 id="使用训练好的模型"><a href="#使用训练好的模型" class="headerlink" title="使用训练好的模型"></a>使用训练好的模型</h2><p>训练好的数据存在下面这个两个文件里面</p>
<ul>
<li><code>tf_files/retrained_graph.pb</code>， which contains a version of the selected network with a final layer retrained on your categories.</li>
<li><code>tf_files/retrained_labels.txt</code>， which is a text file containing labels.</li>
</ul>
<h3 id="分类一张图片"><a href="#分类一张图片" class="headerlink" title="分类一张图片"></a>分类一张图片</h3><p>可以用命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -m scripts.label_image -h</span><br></pre></td></tr></table></figure>

<p>看一下帮助</p>
<p>然后，给下面这朵菊花分类一下，<code>flower_photos/daisy/21652746_cc379e0eea_m.jpg</code></p>
<img src="/2018/12/06/tensorflow-for-poets/1.png" class="" title="tensorflow for poets">

<p>使用命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -m scripts.label_image --graph=tf_files/retrained_graph.pb  --image=tf_files/flower_photos/daisy/21652746_cc379e0eea_m.jpg</span><br></pre></td></tr></table></figure>

<p>你将会看到大概像下面这样的信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Evaluation time (1-image): 0.422s</span><br><span class="line"></span><br><span class="line">daisy (score=0.99372)       雏菊</span><br><span class="line">sunflowers (score=0.00377)  向日葵</span><br><span class="line">dandelion (score=0.00248)   蒲公英</span><br><span class="line">roses (score=0.00003)       玫瑰</span><br><span class="line">tulips (score=0.00000)      郁金香</span><br></pre></td></tr></table></figure>

<p>上面的信息意思是指定的图片是<code>雏菊</code>的可信度高达99%.<br>你可以使用<code>label_image.py</code>来分类图片，可以选择自己从任何地方下载的花的图片来尝试，使用<code>--image</code>来指定路径</p>
<p><code>flower_photos/roses/2414954629_3708a1a04d.jpg</code></p>
<img src="/2018/12/06/tensorflow-for-poets/3.png" class="" title="tensorflow for poets">

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -m scripts.label_image --graph=tf_files/retrained_graph.pb  --image=tf_files/flower_photos/roses/2414954629_3708a1a04d.jpg </span><br><span class="line"></span><br><span class="line">Evaluation time (1-image): 0.437s</span><br><span class="line"></span><br><span class="line">roses (score=0.98361)       玫瑰</span><br><span class="line">tulips (score=0.01612)      郁金香</span><br><span class="line">dandelion (score=0.00026)   蒲公英</span><br><span class="line">sunflowers (score=0.00000)  向日葵</span><br><span class="line">daisy (score=0.00000)       雏菊</span><br></pre></td></tr></table></figure>

<h2 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h2><ol>
<li>对于默认python为python2的Linux系统，需要将命令中的python全部替换成python3，输入命令<code>python -V</code>，即可查看默认python是什么版本;</li>
<li>本文更类似于翻译，原文没有添加关于Windows上的操作，大体上是类似的，设置变量和cmd的换行符转义不太一样，并且很多可选内容我没有搬运过来，很多参数的解说也没有翻译，感兴趣的前往原文查看<a href="https://codelabs.developers.google.com/codelabs/tensorflow-for-poets/">https://codelabs.developers.google.com/codelabs/tensorflow-for-poets/#0</a>；</li>
<li>原文网站上有更多好玩的东西<ul>
<li><a href="https://codelabs.developers.google.com/codelabs/tensorflow-for-poets-2-tflite">TFLite Android</a></li>
<li><a href="https://codelabs.developers.google.com/codelabs/tensorflow-for-poets-2">TFMobile Android</a></li>
</ul>
</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>验证“探寻C++最快的读取文件的方案&quot;</title>
    <url>/2017/03/18/the-truth/</url>
    <content><![CDATA[<p>本文接上一篇文章————探寻C++最快的读取文件的方案<br>仔细看了一下原文，发布时间是五年前，五年时间，无论是硬件还是软件环境都有了巨大的进步，我决定动手实现一下。</p>
<img src="/2017/03/18/the-truth/avatar.jpg" class="">
<a id="more"></a>
<p>首先编写了一个生成生成随机数的程序，代码如下:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;                       </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;                        </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;                      </span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span>                            </span></span><br><span class="line"><span class="function"></span>&#123;                                      </span><br><span class="line">        freopen(<span class="string">&quot;data.txt&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="built_in">stdout</span>);</span><br><span class="line">        srand(time(<span class="number">0</span>));                </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">1000000</span>;i++)     </span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,rand());  </span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;                      </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>生成一千万个随机数，并存储在<code>data.txt</code>中，约54MB。<br>编写使用<code>scanf</code>读取数据的程序，代码如下:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;                                               </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10000000</span>];                                                </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span>                                                    </span></span><br><span class="line"><span class="function"></span>&#123;                                                              </span><br><span class="line">        <span class="keyword">int</span> start = clock();                                 </span><br><span class="line">        freopen(<span class="string">&quot;data.txt&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);                         </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10000000</span>;i++)                             </span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);                                </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.3lf\n&quot;</span>,<span class="keyword">double</span>(clock()-start)/CLOCKS_PER_SEC);</span><br><span class="line">&#125;                                                              </span><br></pre></td></tr></table></figure>
<p>执行之后，使用时间为<code>1.18s</code>，相比于原文的<code>2.01</code>秒，缩短了一截，然后测试一下使用<code>cin</code>输入的情况，代码如下:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10000000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> start = clock();</span><br><span class="line">        freopen(<span class="string">&quot;data.txt&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10000000</span>;i++)</span><br><span class="line">                <span class="built_in">std</span>::<span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.3lf\n&quot;</span>,<span class="keyword">double</span>(clock()-start)/CLOCKS_PER_SEC);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>cin</code>的使用时间为<code>4.67s</code>，比<code>scanf</code>更长，但是相比于原文的<code>6.38s</code>还是短得多。<br>然后取消<code>cin</code>与<code>stdin</code>之间的同步之后，代码如下:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10000000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> start = clock();</span><br><span class="line">        <span class="built_in">std</span>::ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">        freopen(<span class="string">&quot;data.txt&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">1000000</span>;i++)</span><br><span class="line">                <span class="built_in">std</span>::<span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.3lf\n&quot;</span>,<span class="keyword">double</span>(clock()-start)/CLOCKS_PER_SEC);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>时间大幅缩短，为<code>1.24s</code>，与scanf很接近了。<br>然后按原文测试读入整个文件,代码如下:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;                                              </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;                                                 </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;                                                </span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">10000000</span>;                                      </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXS = <span class="number">60</span>*<span class="number">1024</span>*<span class="number">1024</span>;                                  </span><br><span class="line"><span class="keyword">int</span> numbers[MAXN];                                              </span><br><span class="line"><span class="keyword">char</span> buf[MAXS];                                                 </span><br><span class="line">                                                                </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">analyse</span><span class="params">(<span class="keyword">char</span> *buf, <span class="keyword">int</span> len =MAXS)</span>                          </span></span><br><span class="line"><span class="function"></span>&#123;                                                               </span><br><span class="line">        <span class="keyword">int</span> i;                                                  </span><br><span class="line">        numbers[i=<span class="number">0</span>]=<span class="number">0</span>;                                         </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> *p=buf;*p &amp;&amp; p-buf&lt;len;p++)                    </span><br><span class="line">        <span class="keyword">if</span>(*p == <span class="string">&#x27; &#x27;</span>)                                           </span><br><span class="line">                numbers[++i]=<span class="number">0</span>;                                 </span><br><span class="line">        <span class="keyword">else</span>                                                    </span><br><span class="line">                numbers[i]=numbers[i]*<span class="number">10</span>+*p-<span class="string">&#x27;0&#x27;</span>;                </span><br><span class="line">&#125;                                                               </span><br><span class="line">                                                                </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fread_analyse</span><span class="params">()</span>                                            </span></span><br><span class="line"><span class="function"></span>&#123;                                                               </span><br><span class="line">        freopen(<span class="string">&quot;data.txt&quot;</span>,<span class="string">&quot;rb&quot;</span>,<span class="built_in">stdin</span>);                         </span><br><span class="line">        <span class="keyword">int</span> len = fread(buf,<span class="number">1</span>,MAXS,<span class="built_in">stdin</span>);                      </span><br><span class="line">        buf[len]=<span class="string">&#x27;\0&#x27;</span>;                                          </span><br><span class="line">        analyse(buf,len);                                       </span><br><span class="line">&#125;                                                               </span><br><span class="line">                                                                </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span>                                                     </span></span><br><span class="line"><span class="function"></span>&#123;                                                               </span><br><span class="line">        <span class="keyword">int</span> start = clock();                                    </span><br><span class="line">        fread_analyse();                                        </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.3lf\n&quot;</span>,<span class="keyword">double</span>(clock()-start)/CLOCKS_PER_SEC); </span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;                                               </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>时间如原文一般，大幅缩短，我这里测试得到<code>0.37s</code>，使用<code>read</code>测试，代码如下:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;                                             </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;                                                </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;                                               </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;unistd.h&gt;                                             </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;fcntl.h&gt;                                              </span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">10000000</span>;                                     </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXS = <span class="number">60</span>*<span class="number">1024</span>*<span class="number">1024</span>;                                 </span><br><span class="line"><span class="keyword">int</span> numbers[MAXN];                                             </span><br><span class="line"><span class="keyword">char</span> buf[MAXS];                                                </span><br><span class="line">                                                               </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">analyse</span><span class="params">(<span class="keyword">char</span> *buf, <span class="keyword">int</span> len =MAXS)</span>                         </span></span><br><span class="line"><span class="function"></span>&#123;                                                              </span><br><span class="line">        <span class="keyword">int</span> i;                                                 </span><br><span class="line">        numbers[i=<span class="number">0</span>]=<span class="number">0</span>;                                        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> *p=buf;*p &amp;&amp; p-buf&lt;len;p++)                   </span><br><span class="line">        <span class="keyword">if</span>(*p == <span class="string">&#x27; &#x27;</span>)                                          </span><br><span class="line">                numbers[++i]=<span class="number">0</span>;                                </span><br><span class="line">        <span class="keyword">else</span>                                                   </span><br><span class="line">                numbers[i]=numbers[i]*<span class="number">10</span>+*p-<span class="string">&#x27;0&#x27;</span>;               </span><br><span class="line">&#125;                                                              </span><br><span class="line">                                                               </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read_analyse</span><span class="params">()</span>                                            </span></span><br><span class="line"><span class="function"></span>&#123;                                                              </span><br><span class="line">        <span class="keyword">int</span> fd = open(<span class="string">&quot;data.txt&quot;</span>,O_RDONLY);                    </span><br><span class="line">        <span class="keyword">int</span> len = read(fd,buf,MAXS);                           </span><br><span class="line">        buf[len]=<span class="string">&#x27;\0&#x27;</span>;                                         </span><br><span class="line">        analyse(buf,len);                                      </span><br><span class="line">&#125;                                                              </span><br><span class="line">                                                               </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span>                                                    </span></span><br><span class="line"><span class="function"></span>&#123;                                                              </span><br><span class="line">        <span class="keyword">int</span> start = clock();                                   </span><br><span class="line">        read_analyse();                                        </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.3lf\n&quot;</span>,<span class="keyword">double</span>(clock()-start)/CLOCKS_PER_SEC);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;                                              </span><br><span class="line">&#125;                                                              </span><br></pre></td></tr></table></figure>
<p>测试时间为<code>0.31s</code>，有所进步，不过不是非常明显。<br>调用<code>mmap</code>，代码如下:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;                                                      </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;                                                         </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;                                                        </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;unistd.h&gt;                                                      </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;fcntl.h&gt;                                                       </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;sys/mman.h&gt;                                                    </span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">10000000</span>;                                              </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXS = <span class="number">60</span>*<span class="number">1024</span>*<span class="number">1024</span>;                                          </span><br><span class="line"><span class="keyword">int</span> numbers[MAXN];                                                      </span><br><span class="line"><span class="keyword">char</span> buf[MAXS];                                                         </span><br><span class="line">                                                                        </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">analyse</span><span class="params">(<span class="keyword">char</span> *buf, <span class="keyword">int</span> len =MAXS)</span>                                  </span></span><br><span class="line"><span class="function"></span>&#123;                                                                       </span><br><span class="line">        <span class="keyword">int</span> i;                                                          </span><br><span class="line">        numbers[i=<span class="number">0</span>]=<span class="number">0</span>;                                                 </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> *p=buf;*p &amp;&amp; p-buf&lt;len;p++)                            </span><br><span class="line">        <span class="keyword">if</span>(*p == <span class="string">&#x27; &#x27;</span>)                                                   </span><br><span class="line">                numbers[++i]=<span class="number">0</span>;                                         </span><br><span class="line">        <span class="keyword">else</span>                                                            </span><br><span class="line">                numbers[i]=numbers[i]*<span class="number">10</span>+*p-<span class="string">&#x27;0&#x27;</span>;                        </span><br><span class="line">&#125;                                                                       </span><br><span class="line">                                                                        </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mmap_analyse</span><span class="params">()</span>                                                     </span></span><br><span class="line"><span class="function"></span>&#123;                                                                       </span><br><span class="line">        <span class="keyword">int</span> fd = open(<span class="string">&quot;data.txt&quot;</span>,O_RDONLY);                             </span><br><span class="line">        <span class="keyword">int</span> len = lseek(fd,<span class="number">0</span>,SEEK_END);                                 </span><br><span class="line">        <span class="keyword">char</span> *mbuf = (<span class="keyword">char</span> *) mmap(<span class="literal">NULL</span>,len,PROT_READ,MAP_PRIVATE,fd,<span class="number">0</span>);</span><br><span class="line">        analyse(mbuf,len);                                              </span><br><span class="line">&#125;                                                                       </span><br><span class="line">                                                                        </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span>                                                             </span></span><br><span class="line"><span class="function"></span>&#123;                                                                       </span><br><span class="line">        <span class="keyword">int</span> start = clock();                                            </span><br><span class="line">        mmap_analyse();                                                 </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.3lf\n&quot;</span>,<span class="keyword">double</span>(clock()-start)/CLOCKS_PER_SEC);         </span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;                                                       </span><br><span class="line">&#125;                                                                       </span><br></pre></td></tr></table></figure>
<p>运行结果才让我大跌眼镜，虽然我没有眼镜</p>
<img src="/2017/03/18/the-truth/ahaha.jpg" class="">
<p>达到<code>0.49s</code>，与原文不符(原文中使用<code>mmnp</code>耗时更短，在我的测试中，耗时变长了)，可能是代码与原作者的不一样，原作者只给出一部分代码，而测试需要写出完整的代码，可能我写的代码有问题。<br>以上测试结果在腾讯云上进行,因为原作者当时的硬件条件可能比不上我所使用的环境，我在树莓派 3B和我自己的电脑上测试了一下，所有平台硬件信息如下：</p>
<table>
<thead>
<tr>
<th align="center">平台/硬件和软件信息</th>
<th align="center">Cent OS</th>
<th align="center">Raspberry</th>
<th align="center">Windows</th>
</tr>
</thead>
<tbody><tr>
<td align="center">CPU</td>
<td align="center">1 core</td>
<td align="center">Broadcom BCM2837 1.2GHz</td>
<td align="center">intel Core 5200u 2.2GHz</td>
</tr>
<tr>
<td align="center">RAM</td>
<td align="center">1GB</td>
<td align="center">1GB</td>
<td align="center">12GB</td>
</tr>
<tr>
<td align="center">Gcc</td>
<td align="center">4.8.5</td>
<td align="center">4.9.2</td>
<td align="center">5.3.0</td>
</tr>
<tr>
<td align="center">PS: 这里忽略了硬盘的性能，理论上来说，硬盘的性能肯定能影响读写速度，只是没有较好的方法比较三个平台的硬盘性能，只能作罢。</td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">测试结果汇总如下:</td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th align="center">方法/平台/耗时(s)</th>
<th align="center">Cent OS</th>
<th align="center">Raspberry</th>
<th align="center">Windows(本机)</th>
<th align="center">Ubuntu(本机)</th>
</tr>
</thead>
<tbody><tr>
<td align="center">scanf</td>
<td align="center">1.180</td>
<td align="center">14.786</td>
<td align="center">4.488</td>
<td align="center">1.158</td>
</tr>
<tr>
<td align="center">cin</td>
<td align="center">4.670</td>
<td align="center">61.255</td>
<td align="center">13.026</td>
<td align="center">4.309</td>
</tr>
<tr>
<td align="center">cin取消同步</td>
<td align="center">1.240</td>
<td align="center">7.694</td>
<td align="center">8.086</td>
<td align="center">1.135</td>
</tr>
<tr>
<td align="center">fread</td>
<td align="center">0.37</td>
<td align="center">3.503</td>
<td align="center">0.327</td>
<td align="center">0.284</td>
</tr>
<tr>
<td align="center">read</td>
<td align="center">0.31</td>
<td align="center">2.975</td>
<td align="center">0.370</td>
<td align="center">0.285</td>
</tr>
<tr>
<td align="center">mmap</td>
<td align="center">0.49</td>
<td align="center">5.945</td>
<td align="center">NULL</td>
<td align="center">0.447</td>
</tr>
</tbody></table>
<blockquote class="blockquote-center">
            <p>生命重在折腾</p>

          </blockquote>
]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>【推广】实用命令——tldr</title>
    <url>/2017/06/30/tool-tldr/</url>
    <content><![CDATA[<img src="/2017/06/30/tool-tldr/2.jpg" class="" title="tldr">
<a id="more"></a>
<h2 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h2><p>如题，通常遇到一个新的命令需要查询其帮助的时候，一般使用<code>command -h</code>或者<code>man command</code>来查询，但是，有时候仅仅想知道这个命令怎么用，并不想知道具体含义啊(这个命令可能不常用，没有必要仔细阅读手册)，于是，<code>tldr</code>出现了。而且，巨长无比的文档看起来就头疼。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装<code>tldr</code>之前，得先安装好<code>node.js</code>，然后使用命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install tldr -g</span><br></pre></td></tr></table></figure>
<p>来进行安装。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ tldr <span class="built_in">command</span></span><br></pre></td></tr></table></figure>
<p>就好了，第一次使用，需要联网下载一些数据，等一下就好了。</p>
<h2 id="展示"><a href="#展示" class="headerlink" title="展示"></a>展示</h2><img src="/2017/06/30/tool-tldr/1.jpg" class="" title="tldr tar">
<img src="/2017/06/30/tool-tldr/3.jpg" class="" title="man tar">
<blockquote class="blockquote-center">
            <p>生命重在折腾</p>

          </blockquote>]]></content>
  </entry>
  <entry>
    <title>ubuntu 自定义触控板手势</title>
    <url>/2016/03/28/ubuntu-touchpad/</url>
    <content><![CDATA[<p>描述：ubuntu的触控板手势不多，最高只支持两点触控，白白浪费了触控板这四点触控。偶然在知乎上看到有人用一个软件<a href="https://github.com/iberianpig/xSwipe">xSwipe</a> 成功实现多点触控，实测可以自行调节所需手势，我在安装过程中遇到一些麻烦，这里记录下来，作为备用。</p>
<a id="more"></a>

<p>xSwipe在开源项目网站GitHub上可以找到，<a href="https://github.com/iberianpig/xSwipe">传送门</a>,或访问 <a href="https://github.com/iberianpig/xSwipe">https://github.com/iberianpig/xSwipe</a> PS:由于服务器在国外，国内访问可能很慢，我将所需文件备份了一份，下载地址放在文章末尾了。</p>
<p>官网上的说明文档是英文版，虽然推荐读者阅读原版文档，但是为了照顾英语不好的同志，我找了一篇中文博客(<a href="http://loliko.me/zai-linuxzhong-tian-jia-hong-mo-ban-shou-shi/">点我访问</a>),安装过程这篇博客已经说得很清楚了，这里不再叙述。 下面贴出官方的说明文档：</p>
<h2 id="xSwipe"><a href="#xSwipe" class="headerlink" title="xSwipe"></a>xSwipe</h2><p>xSwipe is multitouch gesture recognizer. This script make your linux PC able to recognize swipes like a Macbook.</p>
<h3 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h3><p>Before running the script, you must first do some preparations.</p>
<p>1: Download xSwipe<br>2:Install X11::GUITest<br>3:Enable SHMConfig</p>
<h3 id="1-Download-xSwipe"><a href="#1-Download-xSwipe" class="headerlink" title="1. Download xSwipe"></a>1. Download xSwipe</h3><p>Type below code, download xSwipe from github</p>
<pre><code class="bash">$ cd ~
$ wget https://github.com/iberianpig/xSwipe/archive/master.zip
$ unzip master.zip</code></pre>
<h3 id="2-Install-X11-GUITest"><a href="#2-Install-X11-GUITest" class="headerlink" title="2. Install X11::GUITest"></a>2. Install X11::GUITest</h3><p>To install libx11-guitest-perl from synaptic package manager Or run the script on the terminal run as</p>
<pre><code class="bash">$ sudo apt-get install libx11-guitest-perl
NOTE: If using Ubuntu14.04, or later
Install older version synaptics driver that is compatible with xSwipe.
$ sudo apt-get install -y git build-essential libevdev-dev autoconf automake libmtdev-dev xorg-dev xutils-dev libtool
$ sudo apt-get remove -y xserver-xorg-input-synaptics
$ git clone https://github.com/Chosko/xserver-xorg-input-synaptics.git
$ cd xserver-xorg-input-synaptics
$ ./autogen.sh
$ ./configure --exec_prefix=/usr
$ make
$ sudo make install</code></pre>
<h3 id="3-Enable-SHMConfig"><a href="#3-Enable-SHMConfig" class="headerlink" title="3. Enable SHMConfig"></a>3. Enable SHMConfig</h3><p>Open /etc/X11/xorg.conf.d/50-synaptics.conf with your favorite text editor and edit it to enable SHMConfig</p>
<pre><code class="bash">$ sudo gedit /etc/X11/xorg.conf.d/50-synaptics.conf  </code></pre>
<p>NOTE:You will need to create the /etc/X11/xorg.conf.d/ directory and create 50-synaptics.conf if it does’nt exist yet. $ sudo mkdir /etc/X11/xorg.conf.d/</p>
<p>/etc/X11/xorg.conf.d/50-synaptics.conf<br>Section “InputClass”<br>Identifier “evdev touchpad catchall”<br>Driver “synaptics”<br>MatchDevicePath “/dev/input/event*”<br>MatchIsTouchpad “on”<br>Option “Protocol” “event”<br>Option “SHMConfig” “on”<br>EndSection<br>To reflect SHMConfig, restart your session.</p>
<p>That’s it for preparation.</p>
<h3 id="Run-xSwipe"><a href="#Run-xSwipe" class="headerlink" title="Run xSwipe"></a>Run xSwipe</h3><p>To run xSwipe, type below code on terminal.</p>
<pre><code class="bash">$ perl ~/xSwipe-master/xSwipe.pl
Note:You should run xSwipe.pl in same directory as &quot;eventKey.cfg&quot; .</code></pre>
<p>You can use “swipe” with 3 or 4 fingers, they can call an event. Additionally, some gestures are avilable.</p>
<p>edge-swipe : swipe with 2 fingers from outside edge(need to enable with option).<br>long-press : hold pressure for 0.5 seconds with 3 or 4 fingers.</p>
<h3 id="Option"><a href="#Option" class="headerlink" title="Option"></a>Option</h3><p>-d RATE : RATE is sensitivity to swipe.Default value is 1. Shorten swipe-length by half (e.g.,$ perl xSwipe.pl -d 0.5)<br>-m INTERVAL : INTERVAL is how often synclient monitor changes to the touchpad state. Default value is 10(ms). Set 50ms as monitoring-span. (e.g.,$ perl xSwipe.pl -m 50)<br>-n : Natural scroll like Macbook, use “/nScroll/eventKey.cfg”.<br>-e : Enable edge-swipe</p>
<h3 id="Customize"><a href="#Customize" class="headerlink" title="Customize"></a>Customize</h3><p>You can customize the settings for gestues to edit eventKey.cfg. Please check this article, “How to customize gesture”.</p>
<h3 id="Bindable-gestures"><a href="#Bindable-gestures" class="headerlink" title="Bindable gestures"></a>Bindable gestures</h3><p>3/4/5 fingers swipe<br>2/3/4/5 fingers long-press<br>2/3/4 fingers edge-swipe<br>2fingers edge-swipe: only swipe-left/right from right/left edge<br>3fingers edge-swipe: only swipe-down from top egde</p>
<h3 id="Example-shortcut-keys"><a href="#Example-shortcut-keys" class="headerlink" title="Example shortcut keys"></a>Example shortcut keys</h3><p>go back/forward on browser (Alt+Left, Alt+Right)<br>open/close a tab on browser (Ctrl+t/Ctrl+w)<br>move tabs (Ctrl+Tab, Ctrl+Shift+Tab)<br>move workspaces (Alt+Ctrl+Lert, Alt+Ctrl+Right, Alt+Ctrl+Up, Alt+Ctrl+Down)<br>move a window (Alt+F7)<br>open launcher (Alt+F8)<br>open a terminal (Ctrl+Alt+t)<br>close a window (Alt+F4)<br>Please let me know if you have any questions about this program.</p>
<p>我按照说明文档安装好所需软件之后，进行到最后一步</p>
<pre><code class="bash">$ perl ~/xSwipe-master/xSwipe.pl</code></pre>
<p>遇到错误提示：<br>“Can’t locate Smart/Comments.pm in @INC (you may need to install the Smart::Comments module) (@INC contains: /etc/perl /usr/local/lib/perl/5.18.2 /usr/local/share/perl/5.18.2 /usr/lib/perl5 /usr/share/perl5 /usr/lib/perl/5.18 /usr/share/perl/5.18 /usr/local/lib/site_perl .) at /home/jackson/xSwipe-master/xSwipe.pl line 15.”</p>
<p>百度无果，最后还是google给了我<a href="https://forum.teksyndicate.com/t/perl-smart-comments/86880">答案</a> 可以访问原文地址:<a href="https://forum.teksyndicate.com/t/perl-smart-comments/86880">https://forum.teksyndicate.com/t/perl-smart-comments/86880</a></p>
<p>做法是，在终端键入下列命令:</p>
<pre><code class="bash">sudo cpan -i Smart::Comments</code></pre>
<p>等待完成即可，不出意外的话，通过命令：</p>
<pre><code class="bash">$ perl ~/xSwipe-master/xSwipe.pl</code></pre>
<p>就可以开启三点以上触控板手势了，可以根据需要自行更改eventKey.cfg的内容来获得自己想要的手势。</p>
<p><a href="http://pan.baidu.com/s/1gesqHm7">xSwipe下载</a>：<a href="http://pan.baidu.com/s/1gesqHm7">http://pan.baidu.com/s/1gesqHm7</a></p>
<p>此文章仅作参考使用，使用时请仔细阅读说明文档。</p>
<p>我使用的操作系统为 ubuntu 14.04 LTS</p>
]]></content>
      <tags>
        <tag>ubuntu touchpad 触控板调节</tag>
      </tags>
  </entry>
  <entry>
    <title>关于“undefined reference to”</title>
    <url>/2018/05/18/undefined-reference-to/</url>
    <content><![CDATA[<p>不太清楚这个是否算是gcc的问题，总之是遇到了。<br>Gcc的编译log一般如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SomePath/SomeSourceFile|6|undefined reference to `Foo<span class="string">&#x27;|</span></span><br><span class="line"><span class="string">||error: ld returned 1 exit status|</span></span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>这一次我遇到的是</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">putty-src/windows/winnet.c:828: undefined reference to `IN6_IS_ADDR_LOOPBACK<span class="string">&#x27;</span></span><br><span class="line"><span class="string">collect2.exe: error: ld returned 1 exit status</span></span><br></pre></td></tr></table></figure>
<p>这是在用CodeBlocks编译PuTTY的时候遇到的问题，很扰人。用命令行编译没问题，在Visual Studio里面也没问题，换到CodeBlocks之后这个问题困扰了很长时间。<br>看编译Log可以知道在PuTTY源码的windows目录下的winnet.c文件828行，有一个未定义的函数<code>IN6_IS_ADDR_LOOPBACK</code>，源码如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> NO_IPV6</span></span><br><span class="line">    <span class="keyword">if</span> (family == AF_INET6) &#123;</span><br><span class="line">    	<span class="keyword">return</span> IN6_IS_ADDR_LOOPBACK(&amp;((<span class="keyword">const</span> struct sockaddr_in6 *)step.ai-&gt;ai_addr)-&gt;sin6_addr);</span><br><span class="line">    &#125; <span class="keyword">else</span></span><br><span class="line">#endif</span><br><span class="line">    <span class="keyword">if</span> (family == AF_INET) &#123;</span><br><span class="line">#ifndef NO_IPV6</span><br><span class="line">	<span class="keyword">if</span> (step.ai) &#123;</span><br><span class="line">	    <span class="keyword">return</span> ipv4_is_local_addr(((struct sockaddr_in *)step.ai-&gt;ai_addr)</span><br><span class="line">				      -&gt;sin_addr);</span><br><span class="line">	&#125; <span class="keyword">else</span></span><br><span class="line">#endif</span><br></pre></td></tr></table></figure>
<p>右击函数<code>IN6_IS_ADDR_LOOPBACK</code>，找到函数定义，在头文件<code>ws2tcpip.h</code>有如下定义：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">······</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">IN6_IS_ADDR_LOOPBACK</span><span class="params">(<span class="keyword">const</span> struct in6_addr *)</span></span>;</span><br><span class="line">······</span><br><span class="line"><span class="function">WS2TCPIP_INLINE <span class="keyword">int</span> <span class="title">IN6_IS_ADDR_LOOPBACK</span><span class="params">(<span class="keyword">const</span> struct in6_addr *a)</span> </span>&#123; <span class="keyword">return</span> ((a-&gt;s6_words[<span class="number">0</span>]==<span class="number">0</span>) &amp;&amp; (a-&gt;s6_words[<span class="number">1</span>]==<span class="number">0</span>) &amp;&amp; (a-&gt;s6_words[<span class="number">2</span>]==<span class="number">0</span>) &amp;&amp; (a-&gt;s6_words[<span class="number">3</span>]==<span class="number">0</span>) &amp;&amp; (a-&gt;s6_words[<span class="number">4</span>]==<span class="number">0</span>) &amp;&amp; (a-&gt;s6_words[<span class="number">5</span>]==<span class="number">0</span>) &amp;&amp; (a-&gt;s6_words[<span class="number">6</span>]==<span class="number">0</span>) &amp;&amp; (a-&gt;s6_words[<span class="number">7</span>]==<span class="number">0x0100</span>)); &#125;</span><br><span class="line">······</span><br></pre></td></tr></table></figure>

<p>百度搜索<code>undefined reference to</code>，得到的信息非常杂乱，没有很确定的目标。<br>为了找到原因所在，准备复现问题。<br>新建文件<code>main.h</code>，写入一下内容</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> MAIN_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAIN_H</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Foo</span><span class="params">(<span class="keyword">int</span> ,<span class="keyword">int</span> )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">__CRT_INLINE <span class="keyword">int</span> <span class="title">Foo</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">//MAIN_H</span></span></span><br></pre></td></tr></table></figure>
<p>新建文件<code>main.cpp</code>，写入以下内容:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;main.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(Foo(<span class="number">1</span>,<span class="number">2</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>出现提示 *main.c|6|undefined reference to `Foo’| *，成功复现，<br>尝试定位问题</p>
<ul>
<li>将<code>main.c</code>改成<code>main.cpp</code>，提示消失</li>
<li>将<code>__CRT_INLINE </code>去掉，提示消失</li>
<li>CodeBlocks切换到<code>Release</code>，提示消失</li>
</ul>
<p>右击<code>__CRT_INLINE </code>，找到定义，在<code>_mingw.h</code>内找到信息如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">define</span> __CRT_INLINE inline</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">elif</span> defined(_MSC_VER)</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">define</span> __CRT_INLINE __inline</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">if</span> ( __MINGW_GNUC_PREREQ(4, 3)  &amp;&amp;  __STDC_VERSION__ &gt;= 199901L) \</span></span><br><span class="line">     || (defined (__clang__))</span><br><span class="line"><span class="meta">#  <span class="meta-keyword">define</span> __CRT_INLINE extern inline __attribute__((__gnu_inline__))</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#  <span class="meta-keyword">define</span> __CRT_INLINE extern __inline__</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<p>可以看到<code>__CRT_INLINE </code>其实是内联函数，那么看起来问题好像是在头文件内同时定义声明了一个函数带来的问题，但是换用<code>g++</code>又没有出现问题，在<code>MSVC</code>上也没有出现问题，用<code>Makefile</code>也没有出现问题，那么是编译的时候少了参数导致的问题了。<br>于是对着PuTTY源码的的<code>Makefile</code>一个一个加参数，最后确定是因为少了<code>-O</code>(大写的O)，这个参数是用来优化代码的，具体讨论可以查看知乎的帖子<a href="https://www.zhihu.com/question/27090458">GCC中-O1 -O2 -O3 优化的原理是什么？</a>，在@vczh的回答</p>
<blockquote>
<p>C++的template就设计成，只要你开了优化就可以把封装带来的中间层去掉的形式。因此STL拼命的抽象，然后你开了O2，这些抽象编译后就“不占地方”了，就跟你直接用C为每个类型精心设计的容器类型一样。当然C++显然方便多了。但是你不开O2，你就能感受到那些抽象带来的效果。<br>作者：vczh<br>链接：<a href="https://www.zhihu.com/question/27090458/answer/35224898">https://www.zhihu.com/question/27090458/answer/35224898</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>
</blockquote>
<p>这应该也就是将后缀改为<code>cpp</code>之后提示会消失的原因，本来这个参数是在编译<code>Release</code>版的程序的时候使用的，CodeBlocks默认的<code>Debug</code>参数并不包含<code>-O</code>，开启这个参数之后，有可能会因为编译器的优化为debug程序带来其他的问题。<br>其实这个问题在将函数的声明和定义分开写的时候也不会出现（也就是声明写在SomeSourceFile.h，定义写在SomeSourceFile.c/cpp）内也不会复现。</p>
<p>本篇所对应的<code>undefined reference to &#39;IN6_IS_ADDR_LOOPBACK&#39;</code>问题应该很少见，常见的<code>undefined reference to</code>并不是因为文章中所说的问题，一些更详细的问题可以阅读<a href="https://segmentfault.com/a/1190000006049907">“undefined reference to” 问题汇总及解决方法 </a><br>下载建立好的PuTTY的项目文件可以前往<a href="https://github.com/BDZNH/PuTTY">PuTTY</a>，内含CodeBlocks和Visual Studio 2017的项目文件。</p>
]]></content>
  </entry>
  <entry>
    <title>关于文件编码的一些思考</title>
    <url>/2017/02/14/unicode/</url>
    <content><![CDATA[<p>这几日，用<code>nginx</code>给人共享文件，改了配置文件，然后我的博客本地预览的时候是乱码的,成了这样：</p>
<img src="/2017/02/14/unicode/1.jpg" class="">
<a id="more"></a>
<p>据之前的经验来看，必定是编码格式的问题，当我查看网页代码的时候，神奇的事情就出现了，用<code>Visual Code</code>查看网页代码是正常的，但是在浏览器里面是乱码的。一开始以为是<code>npm</code>抽风，重装之后，发现并没有起作用，用<code>hexo s --debug</code>查看调试信息也没有什么问题，并且正常，生成网页本地查看的时候是乱码，上传到VPS上却又是正常的。怀疑到<code>nginx</code>上来。<br>慢慢调整，发现是nginx的配置文件的问题，乱码时的nginx配置文件时这样的：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application&#x2F;octet-stream;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        listen       [::]:80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        location &#x2F; &#123;</span><br><span class="line">            root   C:\Users\BDZNH\blog\public;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">        error_page   500 502 503 504  &#x2F;50x.html;</span><br><span class="line">        location &#x3D; &#x2F;50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line">        charset GBK;</span><br><span class="line">        client_max_body_size 4G;</span><br><span class="line">        location &#x2F;src &#123;</span><br><span class="line">            </span><br><span class="line">            alias F:\\;</span><br><span class="line">            autoindex on;</span><br><span class="line">            autoindex_exact_size off;</span><br><span class="line">            autoindex_localtime on;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>更改之后的配置文件是这样的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application&#x2F;octet-stream;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        listen       [::]:80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        location &#x2F; &#123;</span><br><span class="line">            root   C:\Users\BDZNH\blog\public;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">        error_page   500 502 503 504  &#x2F;50x.html;</span><br><span class="line">        location &#x3D; &#x2F;50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        client_max_body_size 4G;</span><br><span class="line">        location &#x2F;src &#123;</span><br><span class="line">            charset GBK;</span><br><span class="line">            alias F:\\;</span><br><span class="line">            autoindex on;</span><br><span class="line">            autoindex_exact_size off;</span><br><span class="line">            autoindex_localtime on;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>正常的时候是这样的</p>
<img src="/2017/02/14/unicode/2.jpg" class="">
<p><code>29</code>行的<code>charset GBK</code>，问题便出现在这儿，这里让nginx指定了网页的文件编码格式为GBK，但是<code>hexo</code>生成的网页格式是<code>utf-8</code>的，两种编码格式不一样，所以乱码。<br>这里就吐槽一下微软，Windows 系统的默认字符编码集是GBK，据知乎上的大牛说是为了效率，但是字符集的不统一真是一个很肝疼的问题，ssh远程到linux主机，使用了utf-8格式，本地终端使用的却是GBK，调整终端的编码集，远程之后能正常显示中文，但是在本地中文又是乱码的。非得逼我打开几个终端。</p>
<img src="/2017/02/14/unicode/3.jpg" class="">
<blockquote class="blockquote-center">
            <p>生命重在折腾</p>

          </blockquote>]]></content>
      <tags>
        <tag>unicode</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言调用系统命令</title>
    <url>/2017/09/14/use-cmd-coomand-in-cpp/</url>
    <content><![CDATA[<img src="/2017/09/14/use-cmd-coomand-in-cpp/1.jpg" class="">
<a id="more"></a>


<blockquote>
<p>把命令当作一个字符串作为system函数的参数就行了</p>
</blockquote>
<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">include&lt;stdlib.h&gt;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> cmd[]=&#123;<span class="string">&quot;echo Hello shell&quot;</span>&#125;</span><br><span class="line">	system(cmd);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="实用示范"><a href="#实用示范" class="headerlink" title="实用示范"></a>实用示范</h3><p>依据这个思路，写了个<a href="https://github.com/BDZNH/download-www.icourse163.org">小东西</a>,到中国大学mooc官网复制课程链接到<a href="http://tools.antlm.com/">http://tools.antlm.com/</a>，然后复制批量改名用链接，粘贴到”download_link.txt”,并与”Downloadmanager.exe”和”aria2c.exe”放到同一个文件夹，双击”Downloadmanager.exe”，就可以开始下载了。<br>很简单的一个小东西，读取download_link.txt的内容，分离下载链接和文件名，将其作为下载器aria2c.exe的参数，调用aria2c，就OK啦。</p>
<blockquote class="blockquote-center">
            <p>生命重在折腾</p>

          </blockquote>]]></content>
  </entry>
  <entry>
    <title>在Ubuntu中使用IPv6</title>
    <url>/2017/03/16/use-ipv6-on-Ubuntu/</url>
    <content><![CDATA[<p>我的电脑上装了Ubuntu 14.04 LTS 系统，学校的校园网需要拨号才能使用，并且在拨号之后获得IPv6地址。<br>但是实际上，我在Windows上可以正常使用IPv6地址，但是在Ubuntu上无法使用，问了度娘之后，总结解决办法如下:<br>更改文件<code>/etc/sysctl.d/10-ipv6-privacy.conf</code></p>
<a id="more"></a>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># IPv6 Privacy Extensions (RFC 4941)</span></span><br><span class="line"><span class="comment"># ---</span></span><br><span class="line"><span class="comment"># IPv6 typically uses a device&#x27;s MAC address when choosing an IPv6 address</span></span><br><span class="line"><span class="comment"># to use in autoconfiguration. Privacy extensions allow using a randomly</span></span><br><span class="line"><span class="comment"># generated IPv6 address, which increases privacy.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Acceptable values:</span></span><br><span class="line"><span class="comment">#    0 - don’t use privacy extensions.</span></span><br><span class="line"><span class="comment">#    1 - generate privacy addresses</span></span><br><span class="line"><span class="comment">#    2 - prefer privacy addresses and use them over the normal addresses.</span></span><br><span class="line">net.ipv6.conf.all.use_tempaddr = 2</span><br><span class="line">net.ipv6.conf.default.use_tempaddr = 2</span><br></pre></td></tr></table></figure>
<p>为</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># IPv6 Privacy Extensions (RFC 4941)</span></span><br><span class="line"><span class="comment"># ---</span></span><br><span class="line"><span class="comment"># IPv6 typically uses a device&#x27;s MAC address when choosing an IPv6 address</span></span><br><span class="line"><span class="comment"># to use in autoconfiguration. Privacy extensions allow using a randomly</span></span><br><span class="line"><span class="comment"># generated IPv6 address, which increases privacy.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Acceptable values:</span></span><br><span class="line"><span class="comment">#    0 - don’t use privacy extensions.</span></span><br><span class="line"><span class="comment">#    1 - generate privacy addresses</span></span><br><span class="line"><span class="comment">#    2 - prefer privacy addresses and use them over the normal addresses.</span></span><br><span class="line">net.ipv6.conf.all.use_tempaddr = 2</span><br><span class="line">net.ipv6.conf.default.use_tempaddr = 0</span><br></pre></td></tr></table></figure>
<p>然后重新拨号之后，就可以正常使用IPv6了。<br>对于校园网不支持IPv6或者获取方式不一样的小伙伴，此方法不一定适用。<br>使用命令<code>ifconfig</code>可查看网络连接信息:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">eth0      Link encap:Ethernet  HWaddr 50:7b:9d:03:61:aa  </span><br><span class="line">          inet6 addr: fe80::527b:9dff:fe03:61aa/64 Scope:Link</span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1</span><br><span class="line">          RX packets:506 errors:0 dropped:1 overruns:0 frame:0</span><br><span class="line">          TX packets:103 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:1000 </span><br><span class="line">          RX bytes:48325 (48.3 KB)  TX bytes:14006 (14.0 KB)</span><br><span class="line">          Interrupt:20 Memory:f1200000-f1220000 </span><br><span class="line"></span><br><span class="line">lo        Link encap:Local Loopback  </span><br><span class="line">          inet addr:127.0.0.1  Mask:255.0.0.0</span><br><span class="line">          inet6 addr: ::1/128 Scope:Host</span><br><span class="line">          UP LOOPBACK RUNNING  MTU:65536  Metric:1</span><br><span class="line">          RX packets:226 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:226 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:1 </span><br><span class="line">          RX bytes:20694 (20.6 KB)  TX bytes:20694 (20.6 KB)</span><br><span class="line"></span><br><span class="line">ppp0      Link encap:Point-to-Point Protocol  </span><br><span class="line">          inet addr:10.170.15.47  P-t-P:10.170.72.254  Mask:255.255.255.255</span><br><span class="line">          inet6 addr: fe80::2a:e1b3:3273:b894/10 Scope:Link</span><br><span class="line">          inet6 addr: 2001:250:1006:dff0:2a:e1b3:3273:b894/64 Scope:Global</span><br><span class="line">          UP POINTOPOINT RUNNING NOARP MULTICAST  MTU:1492  Metric:1</span><br><span class="line">          RX packets:42 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:47 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:3 </span><br><span class="line">          RX bytes:3793 (3.7 KB)  TX bytes:3373 (3.3 KB)</span><br><span class="line"></span><br><span class="line">wlan0     Link encap:Ethernet  HWaddr 94:65:9c:4e:02:dc  </span><br><span class="line">          inet addr:192.168.0.108  Bcast:192.168.0.255  Mask:255.255.255.0</span><br><span class="line">          inet6 addr: fe80::9665:9cff:fe4e:2dc/64 Scope:Link</span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1</span><br><span class="line">          RX packets:24275 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:8251 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:1000 </span><br><span class="line">          RX bytes:35338441 (35.3 MB)  TX bytes:845841 (845.8 KB)</span><br></pre></td></tr></table></figure>
<p>上一张成品图</p>
<img src="/2017/03/16/use-ipv6-on-Ubuntu/lala.png" class="" title="在Ubuntu中使用IPv6">

<p>参考文章:<a href="http://www.cnblogs.com/makefile/p/5040615.html">http://www.cnblogs.com/makefile/p/5040615.html</a></p>
<blockquote class="blockquote-center">
            <p>生命重在折腾</p>

          </blockquote>]]></content>
  </entry>
  <entry>
    <title>在Linux终端使用代理</title>
    <url>/2017/01/25/use-proxy-in-terminal/</url>
    <content><![CDATA[<img src="/2017/01/25/use-proxy-in-terminal/1.jpg" class="" title="Fuck GFW">
<p>用linux的都能体会到，如果用国外的软件源，更新软件将是极其痛苦的事情————速度慢啊！<br>但是如果使用国内的软件源，如果某些软件国内软件源没有，还是会从国外的软件源下载，于是纠结了一下，使出下面的办法:</p>
<a id="more"></a>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>即使clowwindy大神被请喝茶，他的项目仍然被持续更新。</p>
<p>用影梭能很方便的开启socks5代理，并且速度还不赖，于是朝着这个方向走。</p>
<p>更新软件，就要让’apt-get’走代理通道，而不是正常的http/https/ftp。</p>
<p>有了目标好办事，下面是具体实施步骤。</p>
<h1 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h1><p>劫持apt-get到socks5，我用了这个软件————Proxychains</p>
<h2 id="安装Proxychains"><a href="#安装Proxychains" class="headerlink" title="安装Proxychains"></a>安装Proxychains</h2><p>使用root权限(其实只有第四个和第五个命令需要root权限)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/rofl0r/proxychains-ng.git</span><br><span class="line">$ <span class="built_in">cd</span> proxychains-ng</span><br><span class="line">$ ./configure</span><br><span class="line">$ make &amp;&amp; make install</span><br><span class="line">$ cp ./src/proxychains.conf /etc/proxychains.conf</span><br><span class="line">$ <span class="built_in">cd</span> .. &amp;&amp; rm -rf proxychains-ng</span><br></pre></td></tr></table></figure>

<p>然后，编辑<code>/etc/proxychains.conf</code>，到最后一行，把<code>socks4 127.0.0.1 9095</code>改成<code>socks5 127.0.0.1 1080</code>(注意: 这里如果直接注释掉该行，然后自己新添一行的话，需要注意缩进)<br>去掉49行<code>quiet_mode</code>前面的<code>#</code>号，这样运行的时候proxychains4就不会输出大量log了。</p>
<p>然后，启动Shadosocks后(它默认会开启一个本地1080的socks5端口)，在任意命令前面加上<code>proxychains4</code>，若有需要联网的操作，就会被自动劫持到socks5代理去，这样下载国外的资源速度会快一些。</p>
<h2 id="示范"><a href="#示范" class="headerlink" title="示范"></a>示范</h2><p>使用<code>proxychains4</code>更新软件源的一个小示范</p>
<img src="/2017/01/25/use-proxy-in-terminal/demo.jpg" class="" title="一个小示范">

<h1 id="一点点说明"><a href="#一点点说明" class="headerlink" title="一点点说明"></a>一点点说明</h1><p>虽然此类文章百度一搜一大把，但是还是要把我参考的原文贴出来<a href="http://www.jianshu.com/p/8e7d7f57bf59">http://www.jianshu.com/p/8e7d7f57bf59</a>,感谢原博主。</p>
<p>原文中提及好几种在终端使用代理的办法，我只取了一种，因为proxychains可以针对任何联网的软件，而不需要记住某些环境配置，一次配置，终身方便。</p>
<p>有一个大前提，就是你需要能<code>Fuck GFW</code>。</p>
<h2 id="其他的玩法"><a href="#其他的玩法" class="headerlink" title="其他的玩法"></a>其他的玩法</h2><p>将代码clone到本地之后，可以编辑项目目录里面的<code>src</code>文件夹内的<code>main.c</code>，把71行的<code>int quiet = 0;</code>改成<code>int quiet = 1;</code>，这样运行的时候就不会输出大量log了。</p>
<p>悠哉的一天&gt;_&lt;</p>
<blockquote class="blockquote-center">
            <p>生命重在折腾</p>

          </blockquote>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>启动jar文件时使用代理</title>
    <url>/2017/02/12/use-proxy-when-start-run-a-jar-file/</url>
    <content><![CDATA[<img src="/2017/02/12/use-proxy-when-start-run-a-jar-file/3.jpg" class="">
<a id="more"></a>
<p>Minecraft用java编写，官方的启动器是一个jar文件，由于GFW横跨在出口网络上，所以启动官方启动器的时候总是连接不上登录服务器，离线的话又会遇到正版验证。解决此问题，启动官方启动器的时候，给它设置一个代理就好了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ java -DproxySet=<span class="literal">true</span> -DproxyHost=127.0.0.1 -DproxyPort=1080 -jar <span class="string">&quot;C:\Program Files (x86)\Minecraft\game\launcher.jar&quot;</span></span><br></pre></td></tr></table></figure>
<p><code>C:\Program Files (x86)\Minecraft\game\launcher.jar</code>是官方启动器默认的目录<br>此处本该有对比图，然而官方启动器就在我写这篇博客的时候更新了，所以此法并不适用于最新版本的官方启动器。<br><em>记于2017.2.12 10:17</em></p>
<img src="/2017/02/12/use-proxy-when-start-run-a-jar-file/1.jpg" class="">
<img src="/2017/02/12/use-proxy-when-start-run-a-jar-file/2.jpg" class="">]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>C++容器</title>
    <url>/2017/05/11/vector/</url>
    <content><![CDATA[<img src="/2017/05/11/vector/1.jpg" class="">

<a id="more"></a>
<p>在校赛见到有人用这个了，查了一下，简直神器啊，兼具栈、队列、数组的特性，很理想的工具，贴一点用法，以备查询</p>
<style>
table th:first-of-type {
    width: 100px;
}
</style>


<table>
<thead>
<tr>
<th align="center">操作</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">push_back</td>
<td>在数组的最后添加一个数据</td>
</tr>
<tr>
<td align="center">pop_back</td>
<td>去掉数组的最后一个数据</td>
</tr>
<tr>
<td align="center">at</td>
<td>得到编号位置的数据</td>
</tr>
<tr>
<td align="center">begin</td>
<td>得到数组头的指针</td>
</tr>
<tr>
<td align="center">end</td>
<td>得到数组的最后一个单元+1的指针</td>
</tr>
<tr>
<td align="center">front</td>
<td>得到数组头的引用</td>
</tr>
<tr>
<td align="center">back</td>
<td>得到数组的最后一个单元的引用</td>
</tr>
<tr>
<td align="center">max_size</td>
<td>得到vector最大可以是多大</td>
</tr>
<tr>
<td align="center">capacity</td>
<td>当前vector分配的大小</td>
</tr>
<tr>
<td align="center">size</td>
<td>当前使用数据的大小</td>
</tr>
<tr>
<td align="center">resize</td>
<td>改变当前使用数据的大小，如果它比当前使用的大，者填充默认值</td>
</tr>
<tr>
<td align="center">reserve</td>
<td>改变当前vecotr所分配空间的大小</td>
</tr>
<tr>
<td align="center">erase</td>
<td>删除指针指向的数据项</td>
</tr>
<tr>
<td align="center">clear</td>
<td>清空当前的vector</td>
</tr>
<tr>
<td align="center">rbegin</td>
<td>将vector反转后的开始指针返回(其实就是原来的end-1)</td>
</tr>
<tr>
<td align="center">rend</td>
<td>将vector反转构的结束指针返回(其实就是原来的begin-1)</td>
</tr>
<tr>
<td align="center">empty</td>
<td>判断vector是否为空</td>
</tr>
<tr>
<td align="center">swap</td>
<td>与另一个vector交换数据</td>
</tr>
</tbody></table>
<p>要想使用vector需要:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> nmaespace <span class="built_in">std</span>;</span><br></pre></td></tr></table></figure>
<p>通过<code>vector&lt;数据类型&gt; 变量名;</code>来声明一个vector型变量。</p>
]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 10 作为无线显示器无法被搜索到</title>
    <url>/2017/05/20/wirless-display/</url>
    <content><![CDATA[<img src="/2017/05/20/wirless-display/1.jpg" class="" title="啊哈哈">
<a id="more"></a>
<blockquote>
<p>开始菜单的“连接应用打开后”，在无线显示设备页面，其它设备无法搜索到这台电脑。</p>
</blockquote>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><blockquote>
<p>在设备管理器启用“Microsoft Wi-Fi Direct Virtual Adapter”</p>
</blockquote>
<h2 id="连接展示"><a href="#连接展示" class="headerlink" title="连接展示"></a>连接展示</h2><img src="/2017/05/20/wirless-display/2.png" class="">
<img src="/2017/05/20/wirless-display/3.png" class="">
<img src="/2017/05/20/wirless-display/4.png" class="">
<img src="/2017/05/20/wirless-display/5.png" class="">
<blockquote class="blockquote-center">
            <p>生命重在折腾 </p>

          </blockquote>
]]></content>
  </entry>
  <entry>
    <title>Code::Blocks 快捷键(中文)</title>
    <url>/2017/07/12/zh-CN-shortcut-of-code-blocks/</url>
    <content><![CDATA[<img src="/2017/07/12/zh-CN-shortcut-of-code-blocks/cover.png" class="">

<a id="more"></a>

<h2 id="编辑相关"><a href="#编辑相关" class="headerlink" title="编辑相关"></a>编辑相关</h2><table>
<thead>
<tr>
<th>Function</th>
<th>Shortcut Key</th>
</tr>
</thead>
<tbody><tr>
<td>撤销</td>
<td>Ctrl + Z</td>
</tr>
<tr>
<td>重复上一次 操作</td>
<td>Ctrl + Shift + Z</td>
</tr>
<tr>
<td>剪切选中的文本</td>
<td>Ctrl + X</td>
</tr>
<tr>
<td>复制选中的文本</td>
<td>Ctrl + C</td>
</tr>
<tr>
<td>从剪贴板粘贴</td>
<td>Ctrl + V</td>
</tr>
<tr>
<td>选中所有文本</td>
<td>Ctrl + A</td>
</tr>
<tr>
<td>切换头文件/源文件</td>
<td>F11</td>
</tr>
<tr>
<td>注释掉代码</td>
<td>Ctrl + Shift + C</td>
</tr>
<tr>
<td>撤销注释代码</td>
<td>Ctrl + Shift + X</td>
</tr>
<tr>
<td>复制当前行</td>
<td>Ctrl + D</td>
</tr>
<tr>
<td>自动完成/填充代码</td>
<td>Ctrl + Space / Ctrl + J</td>
</tr>
<tr>
<td>Show call tip</td>
<td>Ctrl + Shift + Space</td>
</tr>
<tr>
<td>将当前行与上一行交换位置</td>
<td>Ctrl + T</td>
</tr>
<tr>
<td>添加/取消书签</td>
<td>Ctrl + B</td>
</tr>
<tr>
<td>跳转到上一个书签</td>
<td>Alt + PgUp</td>
</tr>
<tr>
<td>跳转到下一个书签</td>
<td>Alt + PgDown</td>
</tr>
<tr>
<td>Toggle current block folding</td>
<td>F12</td>
</tr>
<tr>
<td>Toggle all folds</td>
<td>Shift + F12</td>
</tr>
</tbody></table>
<p>This is a list of shortcuts provided by the Code::Blocks’ editor component. These shortcuts cannot be rebound.</p>
<table>
<thead>
<tr>
<th>Function</th>
<th>Shortcut Key</th>
</tr>
</thead>
<tbody><tr>
<td>放大文本</td>
<td>Ctrl + Keypad “+”</td>
</tr>
<tr>
<td>缩小文本</td>
<td>Ctrl + Keypad “-“</td>
</tr>
<tr>
<td>换源文本大小</td>
<td>Ctrl + Keypad “/“</td>
</tr>
<tr>
<td>浏览最近文件</td>
<td>Ctrl + Tab</td>
</tr>
<tr>
<td>Indent block.</td>
<td>Tab</td>
</tr>
<tr>
<td>Dedent block.</td>
<td>Shift + Tab</td>
</tr>
<tr>
<td>删除到词首</td>
<td>Ctrl + BackSpace</td>
</tr>
<tr>
<td>删除到词尾</td>
<td>Ctrl + Delete</td>
</tr>
<tr>
<td>删除到行首</td>
<td>Ctrl + Shift + BackSpace</td>
</tr>
<tr>
<td>删除到行尾</td>
<td>Ctrl + Shift + Delete</td>
</tr>
<tr>
<td>跳转到文件首</td>
<td>Ctrl + Home</td>
</tr>
<tr>
<td>Extend selection to start of document.</td>
<td>Ctrl + Shift + Home</td>
</tr>
<tr>
<td>Go to start of display line.</td>
<td>Alt + Home</td>
</tr>
<tr>
<td>Extend selection to start of display line.</td>
<td>Alt + Shift + Home</td>
</tr>
<tr>
<td>Go to end of document.</td>
<td>Ctrl + End</td>
</tr>
<tr>
<td>Extend selection to end of document.</td>
<td>Ctrl + Shift + End</td>
</tr>
<tr>
<td>Go to end of display line.</td>
<td>Alt + End</td>
</tr>
<tr>
<td>Extend selection to end of display line.</td>
<td>Alt + Shift + End</td>
</tr>
<tr>
<td>Expand or contract a fold point.</td>
<td>Ctrl + Keypad “*”</td>
</tr>
<tr>
<td>Create or delete a bookmark.</td>
<td>Ctrl + F2</td>
</tr>
<tr>
<td>Go to next bookmark.</td>
<td>F2</td>
</tr>
<tr>
<td>Select to next bookmark.</td>
<td>Alt + F2</td>
</tr>
<tr>
<td>Find selection.</td>
<td>Ctrl + F3</td>
</tr>
<tr>
<td>Find selection backwards.</td>
<td>Ctrl + Shift + F3</td>
</tr>
<tr>
<td>Scroll up.</td>
<td>Ctrl + Up</td>
</tr>
<tr>
<td>Scroll down.</td>
<td>Ctrl + Down</td>
</tr>
<tr>
<td>前切当前行到剪贴板</td>
<td>Ctrl + L</td>
</tr>
<tr>
<td>复制当前行到剪贴板</td>
<td>Ctrl + Shift + T</td>
</tr>
<tr>
<td>删除当前行</td>
<td>Ctrl + Shift + L</td>
</tr>
<tr>
<td>Line transpose with previous.</td>
<td>Ctrl + T</td>
</tr>
<tr>
<td>复制当前行</td>
<td>Ctrl + D</td>
</tr>
<tr>
<td>Find matching preprocessor conditional, skipping nested ones.</td>
<td>Ctrl + K</td>
</tr>
<tr>
<td>Select to matching preprocessor conditional.</td>
<td>Ctrl + Shift + K</td>
</tr>
<tr>
<td>Find matching preprocessor conditional backwards, skipping nested ones.</td>
<td>Ctrl + J</td>
</tr>
<tr>
<td>Select to matching preprocessor conditional backwards.</td>
<td>Ctrl + Shift + J</td>
</tr>
<tr>
<td>Previous paragraph. Shift extends selection.</td>
<td>Ctrl + [</td>
</tr>
<tr>
<td>Next paragraph. Shift extends selection.</td>
<td>Ctrl + ]</td>
</tr>
<tr>
<td>Previous word. Shift extends selection.</td>
<td>Ctrl + Left</td>
</tr>
<tr>
<td>Next word. Shift extends selection.</td>
<td>Ctrl + Right</td>
</tr>
<tr>
<td>Previous word part. Shift extends selection.</td>
<td>Ctrl + /</td>
</tr>
<tr>
<td>Next word part. Shift extends selection.</td>
<td>Ctrl + \</td>
</tr>
</tbody></table>
<h2 id="文件相关"><a href="#文件相关" class="headerlink" title="文件相关"></a>文件相关</h2><table>
<thead>
<tr>
<th>Function</th>
<th>Shortcut Key</th>
</tr>
</thead>
<tbody><tr>
<td>新建空文件</td>
<td>Ctrl + N</td>
</tr>
<tr>
<td>打开已存在的文件或项目</td>
<td>Ctrl + O</td>
</tr>
<tr>
<td>保存当前文件</td>
<td>Ctrl + S</td>
</tr>
<tr>
<td>保存所有文件</td>
<td>Ctrl + Shift + S</td>
</tr>
<tr>
<td>关闭当前文件</td>
<td>Ctrl + F4 / Ctrl + W</td>
</tr>
<tr>
<td>关闭所有文件</td>
<td>Ctrl + Shift + F4 / Ctrl + Shift + W</td>
</tr>
</tbody></table>
<h2 id="预览相关"><a href="#预览相关" class="headerlink" title="预览相关"></a>预览相关</h2><table>
<thead>
<tr>
<th>Function</th>
<th>Shortcut Key</th>
</tr>
</thead>
<tbody><tr>
<td>显示/隐藏 底部信息面板</td>
<td>F2</td>
</tr>
<tr>
<td>显示/隐藏 管理左侧面板</td>
<td>Shift + F2</td>
</tr>
<tr>
<td>Move project up (in Project tree)</td>
<td>Ctrl + Shift + Up</td>
</tr>
<tr>
<td>Move project down (in Project tree)</td>
<td>Ctrl + Shift + Down</td>
</tr>
<tr>
<td>激活前一个项目</td>
<td>Alt + F5</td>
</tr>
<tr>
<td>激活下一个项目</td>
<td>Alt + F6</td>
</tr>
<tr>
<td>Zoom in / out</td>
<td>Ctrl + Roll Mouse Wheel</td>
</tr>
<tr>
<td>Focus editor</td>
<td>CTRL + Alt + E</td>
</tr>
</tbody></table>
<h2 id="查找相关"><a href="#查找相关" class="headerlink" title="查找相关"></a>查找相关</h2><table>
<thead>
<tr>
<th>功能</th>
<th>快捷键</th>
</tr>
</thead>
<tbody><tr>
<td>查找</td>
<td>Ctrl + F</td>
</tr>
<tr>
<td>查找下一个</td>
<td>F3</td>
</tr>
<tr>
<td>查找上一个</td>
<td>Shift + F3</td>
</tr>
<tr>
<td>在文件内查找</td>
<td>Crtl + Shift + F</td>
</tr>
<tr>
<td>替换</td>
<td>Ctrl + R</td>
</tr>
<tr>
<td>在文件内替换</td>
<td>Ctrl + Shift + R</td>
</tr>
<tr>
<td>跳转到某行</td>
<td>Ctrl + G</td>
</tr>
<tr>
<td>Goto next changed line</td>
<td>Ctrl + F3</td>
</tr>
<tr>
<td>Goto previous changed line</td>
<td>Ctrl + Shift + F3</td>
</tr>
<tr>
<td>跳转到某文件</td>
<td>Alt + G</td>
</tr>
<tr>
<td>跳转到某个函数</td>
<td>Ctrl + Alt + G</td>
</tr>
<tr>
<td>跳转到上一个函数</td>
<td>Ctrl + PgUp</td>
</tr>
<tr>
<td>跳转到下一个函数</td>
<td>Ctrl + PgDn</td>
</tr>
<tr>
<td>Goto declaration</td>
<td>Ctrl + Shift + .</td>
</tr>
<tr>
<td>Goto implementation</td>
<td>Ctrl + .</td>
</tr>
<tr>
<td>Open include file</td>
<td>Ctrl + Alt + .</td>
</tr>
</tbody></table>
<h2 id="Build"><a href="#Build" class="headerlink" title="Build"></a>Build</h2><table>
<thead>
<tr>
<th>Function</th>
<th>Shortcut Key</th>
</tr>
</thead>
<tbody><tr>
<td>构建</td>
<td>Ctrl + F9</td>
</tr>
<tr>
<td>编译当前文件</td>
<td>Ctrl + Shift + F9</td>
</tr>
<tr>
<td>运行</td>
<td>Ctrl + F10</td>
</tr>
<tr>
<td>构建并运行</td>
<td>F9</td>
</tr>
<tr>
<td>重新构建</td>
<td>Ctrl + F11</td>
</tr>
</tbody></table>
<h2 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a>Debug</h2><table>
<thead>
<tr>
<th>Function</th>
<th>Shortcut Key</th>
</tr>
</thead>
<tbody><tr>
<td>开始调试</td>
<td>F8</td>
</tr>
<tr>
<td>继续调试</td>
<td>Ctrl + F7</td>
</tr>
<tr>
<td>Step over a code block</td>
<td>F7</td>
</tr>
<tr>
<td>Step into a code block</td>
<td>Shift + F7</td>
</tr>
<tr>
<td>Step out of a code block</td>
<td>Ctrl + Shift + F7</td>
</tr>
<tr>
<td>添加/取消断点</td>
<td>F5</td>
</tr>
<tr>
<td>运行到下一个断点</td>
<td>F4</td>
</tr>
<tr>
<td>上一个错误</td>
<td>Alt + F1</td>
</tr>
<tr>
<td>下一个错误</td>
<td>Alt + F2</td>
</tr>
</tbody></table>
<hr>
<p>内容来自官方wiki:<a href="http://wiki.codeblocks.org/index.php?title=Keyboard_Shortcuts">http://wiki.codeblocks.org/index.php?title=Keyboard_Shortcuts</a> ，看来得抽空翻译一下d=====(￣▽￣*)b</p>
]]></content>
  </entry>
  <entry>
    <title>FRP</title>
    <url>/2017/11/01/FRP/</url>
    <content><![CDATA[<p>这里应该@大老板一下的，这是一个很有意思的小工具，其实也不小，这里仅作推广，作者的文档已经足够详细，使用得当的话，非常方便。<br>于是，我把作者的文档完整的扣过来了，希望不会被打o(<em>￣▽￣</em>)o<br>项目位于<a href="https://github.com/fatedier/frp">https://github.com/fatedier/frp</a></p>
<h2 id="frp-的作用"><a href="#frp-的作用" class="headerlink" title="frp 的作用"></a>frp 的作用</h2><ul>
<li>利用处于内网或防火墙后的机器，对外网环境提供 http 或 https 服务。</li>
<li>对于 http, https 服务支持基于域名的虚拟主机，支持自定义域名绑定，使多个域名可以共用一个80端口。</li>
<li>利用处于内网或防火墙后的机器，对外网环境提供 tcp 和 udp 服务，例如在家里通过 ssh 访问处于公司内网环境内的主机。<a id="more"></a>
<h2 id="开发状态"><a href="#开发状态" class="headerlink" title="开发状态"></a>开发状态</h2></li>
</ul>
<p>frp 仍然处于前期开发阶段，未经充分测试与验证，不推荐用于生产环境。</p>
<p>master 分支用于发布稳定版本，dev 分支用于开发，您可以尝试下载最新的 release 版本进行测试。</p>
<p><strong>目前的交互协议可能随时改变，不保证向后兼容，升级新版本时需要注意公告说明同时升级服务端和客户端。</strong></p>
<h2 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h2><p><img src="architecture.png" alt="architecture"></p>
<h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><p>根据对应的操作系统及架构，从 <a href="https://github.com/fatedier/frp/releases">Release</a> 页面下载最新版本的程序。</p>
<p>将 <strong>frps</strong> 及 <strong>frps.ini</strong> 放到具有公网 IP 的机器上。</p>
<p>将 <strong>frpc</strong> 及 <strong>frpc.ini</strong> 放到处于内网环境的机器上。</p>
<h3 id="通过-ssh-访问公司内网机器"><a href="#通过-ssh-访问公司内网机器" class="headerlink" title="通过 ssh 访问公司内网机器"></a>通过 ssh 访问公司内网机器</h3><ol>
<li><p>修改 frps.ini 文件，这里使用了最简化的配置：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frps.ini</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">7000</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>启动 frps：</p>
<p><code>./frps -c ./frps.ini</code></p>
</li>
<li><p>修改 frpc.ini 文件，假设 frps 所在服务器的公网 IP 为 x.x.x.x；</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frpc.ini</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = x.x.x.x</span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="section">[ssh]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">22</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6000</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>启动 frpc：</p>
<p><code>./frpc -c ./frpc.ini</code></p>
</li>
<li><p>通过 ssh 访问内网机器，假设用户名为 test：</p>
<p><code>ssh -oPort=6000 test@x.x.x.x</code></p>
</li>
</ol>
<h3 id="通过自定义域名访问部署于内网的-web-服务"><a href="#通过自定义域名访问部署于内网的-web-服务" class="headerlink" title="通过自定义域名访问部署于内网的 web 服务"></a>通过自定义域名访问部署于内网的 web 服务</h3><p>有时想要让其他人通过域名访问或者测试我们在本地搭建的 web 服务，但是由于本地机器没有公网 IP，无法将域名解析到本地的机器，通过 frp 就可以实现这一功能，以下示例为 http 服务，https 服务配置方法相同， vhost_http_port 替换为 vhost_https_port， type 设置为 https 即可。</p>
<ol>
<li><p>修改 frps.ini 文件，设置 http 访问端口为 8080：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frps.ini</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">7000</span></span><br><span class="line"><span class="attr">vhost_http_port</span> = <span class="number">8080</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>启动 frps；</p>
<p><code>./frps -c ./frps.ini</code></p>
</li>
<li><p>修改 frpc.ini 文件，假设 frps 所在的服务器的 IP 为 x.x.x.x，local_port 为本地机器上 web 服务对应的端口, 绑定自定义域名 <code>www.yourdomain.com</code>:</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frpc.ini</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = x.x.x.x</span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="section">[web]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_port</span> = <span class="number">80</span></span><br><span class="line"><span class="attr">custom_domains</span> = www.yourdomain.com</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动 frpc：</p>
<p><code>./frpc -c ./frpc.ini</code></p>
</li>
<li><p>将 <code>www.yourdomain.com</code> 的域名 A 记录解析到 IP <code>x.x.x.x</code>，如果服务器已经有对应的域名，也可以将 CNAME 记录解析到服务器原先的域名。</p>
</li>
<li><p>通过浏览器访问 <code>http://www.yourdomain.com:8080</code> 即可访问到处于内网机器上的 web 服务。</p>
</li>
</ol>
<h3 id="转发-DNS-查询请求"><a href="#转发-DNS-查询请求" class="headerlink" title="转发 DNS 查询请求"></a>转发 DNS 查询请求</h3><p>DNS 查询请求通常使用 UDP 协议，frp 支持对内网 UDP 服务的穿透，配置方式和 TCP 基本一致。</p>
<ol>
<li><p>修改 frps.ini 文件：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frps.ini</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">7000</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>启动 frps：</p>
<p><code>./frps -c ./frps.ini</code></p>
</li>
<li><p>修改 frpc.ini 文件，设置 frps 所在服务器的 IP 为 x.x.x.x，转发到 Google 的 DNS 查询服务器 <code>8.8.8.8</code> 的 udp 53 端口：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frpc.ini</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = x.x.x.x</span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="section">[dns]</span></span><br><span class="line"><span class="attr">type</span> = udp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">8.8</span>.<span class="number">8.8</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">53</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6000</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>启动 frpc：</p>
<p><code>./frpc -c ./frpc.ini</code></p>
</li>
<li><p>通过 dig 测试 UDP 包转发是否成功，预期会返回 <code>www.google.com</code> 域名的解析结果：</p>
<p><code>dig @x.x.x.x -p 6000 www.goolge.com</code></p>
</li>
</ol>
<h3 id="转发-Unix域套接字"><a href="#转发-Unix域套接字" class="headerlink" title="转发 Unix域套接字"></a>转发 Unix域套接字</h3><p>通过 tcp 端口访问内网的 unix域套接字(和 docker daemon 通信)。</p>
<p>frps 的部署步骤同上。</p>
<ol>
<li><p>启动 frpc，启用 unix_domain_socket 插件，配置如下：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frpc.ini</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = x.x.x.x</span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="section">[unix_domain_socket]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6000</span></span><br><span class="line"><span class="attr">plugin</span> = unix_domain_socket</span><br><span class="line"><span class="attr">plugin_unix_path</span> = /var/run/docker.sock</span><br></pre></td></tr></table></figure>
</li>
<li><p>通过 curl 命令查看 docker 版本信息</p>
<p><code>curl http://x.x.x.x:6000/version</code></p>
</li>
</ol>
<h3 id="安全地暴露内网服务"><a href="#安全地暴露内网服务" class="headerlink" title="安全地暴露内网服务"></a>安全地暴露内网服务</h3><p>对于某些服务来说如果直接暴露于公网上将会存在安全隐患。</p>
<p>使用 <strong>stcp(secret tcp)</strong> 类型的代理可以避免让任何人都能访问到要穿透的服务，但是访问者也需要运行另外一个 frpc。</p>
<p>以下示例将会创建一个只有自己能访问到的 ssh 服务代理。</p>
<p>frps 的部署步骤同上。</p>
<ol>
<li><p>启动 frpc，转发内网的 ssh 服务，配置如下，不需要指定远程端口：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frpc.ini</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = x.x.x.x</span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="section">[secret_ssh]</span></span><br><span class="line"><span class="attr">type</span> = stcp</span><br><span class="line"><span class="comment"># 只有 sk 一致的用户才能访问到此服务</span></span><br><span class="line"><span class="attr">sk</span> = abcdefg</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">22</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在要访问这个服务的机器上启动另外一个 frpc，配置如下：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frpc.ini</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = x.x.x.x</span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="section">[secret_ssh_vistor]</span></span><br><span class="line"><span class="attr">type</span> = stcp</span><br><span class="line"><span class="comment"># stcp 的访问者</span></span><br><span class="line"><span class="attr">role</span> = vistor</span><br><span class="line"><span class="comment"># 要访问的 stcp 代理的名字</span></span><br><span class="line"><span class="attr">server_name</span> = secret_ssh</span><br><span class="line"><span class="attr">sk</span> = abcdefg</span><br><span class="line"><span class="comment"># 绑定本地端口用于访问 ssh 服务</span></span><br><span class="line"><span class="attr">bind_addr</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">6000</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>通过 ssh 访问内网机器，假设用户名为 test：</p>
<p><code>ssh -oPort=6000 test@127.0.0.1</code></p>
</li>
</ol>
<h3 id="通过-frpc-所在机器访问外网"><a href="#通过-frpc-所在机器访问外网" class="headerlink" title="通过 frpc 所在机器访问外网"></a>通过 frpc 所在机器访问外网</h3><p>frpc 内置了 http proxy 和 socks5 插件，可以使其他机器通过 frpc 的网络访问互联网。</p>
<p>frps 的部署步骤同上。</p>
<ol>
<li><p>启动 frpc，启用 http_proxy 或 socks5 插件(plugin 换为 socks5 即可)， 配置如下：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frpc.ini</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = x.x.x.x</span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="section">[http_proxy]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6000</span></span><br><span class="line"><span class="attr">plugin</span> = http_proxy</span><br></pre></td></tr></table></figure>
</li>
<li><p>浏览器设置 http 或 socks5 代理地址为 <code>x.x.x.x:6000</code>，通过 frpc 机器的网络访问互联网。</p>
</li>
</ol>
<h2 id="功能说明"><a href="#功能说明" class="headerlink" title="功能说明"></a>功能说明</h2><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>由于 frp 目前支持的功能和配置项较多，未在文档中列出的功能可以从完整的示例配置文件中发现。</p>
<p><a href="./conf/frps_full.ini">frps 完整配置文件</a></p>
<p><a href="./conf/frpc_full.ini">frpc 完整配置文件</a></p>
<h3 id="Dashboard"><a href="#Dashboard" class="headerlink" title="Dashboard"></a>Dashboard</h3><p>通过浏览器查看 frp 的状态以及代理统计信息展示。</p>
<p>需要在 frps.ini 中指定 dashboard 服务使用的端口，即可开启此功能：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">dashboard_port</span> = <span class="number">7500</span></span><br><span class="line"><span class="comment"># dashboard 用户名密码，默认都为 admin</span></span><br><span class="line"><span class="attr">dashboard_user</span> = admin</span><br><span class="line"><span class="attr">dashboard_pwd</span> = admin</span><br></pre></td></tr></table></figure>

<p>打开浏览器通过 <code>http://[server_addr]:7500</code> 访问 dashboard 界面，用户名密码默认为 <code>admin</code>。</p>
<p><img src="dashboard.png" alt="dashboard"></p>
<h3 id="身份验证"><a href="#身份验证" class="headerlink" title="身份验证"></a>身份验证</h3><p>从 v0.10.0 版本开始，所有 proxy 配置全部放在客户端(也就是之前版本的特权模式)，服务端和客户端的 common 配置中的 <code>privilege_token</code> 参数一致则身份验证通过。</p>
<p>需要注意的是 frpc 所在机器和 frps 所在机器的时间相差不能超过 15 分钟，因为时间戳会被用于加密验证中，防止报文被劫持后被其他人利用。</p>
<p>这个超时时间可以在配置文件中通过 <code>authentication_timeout</code> 这个参数来修改，单位为秒，默认值为 900，即 15 分钟。如果修改为 0，则 frps 将不对身份验证报文的时间戳进行超时校验。</p>
<h3 id="加密与压缩"><a href="#加密与压缩" class="headerlink" title="加密与压缩"></a>加密与压缩</h3><p>这两个功能默认是不开启的，需要在 frpc.ini 中通过配置来为指定的代理启用加密与压缩的功能，压缩算法使用 snappy：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frpc.ini</span></span><br><span class="line"><span class="section">[ssh]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_port</span> = <span class="number">22</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6000</span></span><br><span class="line"><span class="attr">use_encryption</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">use_compression</span> = <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>如果公司内网防火墙对外网访问进行了流量识别与屏蔽，例如禁止了 ssh 协议等，通过设置 <code>use_encryption = true</code>，将 frpc 与 frps 之间的通信内容加密传输，将会有效防止流量被拦截。</p>
<p>如果传输的报文长度较长，通过设置 <code>use_compression = true</code> 对传输内容进行压缩，可以有效减小 frpc 与 frps 之间的网络流量，加快流量转发速度，但是会额外消耗一些 cpu 资源。</p>
<h3 id="客户端热加载配置文件"><a href="#客户端热加载配置文件" class="headerlink" title="客户端热加载配置文件"></a>客户端热加载配置文件</h3><p>当修改了 frpc 中的代理配置，可以通过 <code>frpc --reload</code> 命令来动态加载配置文件，通常会在 10 秒内完成代理的更新。</p>
<p>启用此功能需要在 frpc 中启用 admin 端口，用于提供 API 服务。配置如下：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frpc.ini</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">admin_addr</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">admin_port</span> = <span class="number">7400</span></span><br></pre></td></tr></table></figure>

<p>之后执行重启命令：</p>
<p><code>frpc -c ./frpc.ini --reload</code></p>
<p>等待一段时间后客户端会根据新的配置文件创建、更新、删除代理。</p>
<p><strong>需要注意的是，[common] 中的参数除了 start 外目前无法被修改。</strong></p>
<h3 id="特权模式"><a href="#特权模式" class="headerlink" title="特权模式"></a>特权模式</h3><p>由于从 v0.10.0 版本开始，所有 proxy 都在客户端配置，原先的特权模式是目前唯一支持的模式。</p>
<h4 id="端口白名单"><a href="#端口白名单" class="headerlink" title="端口白名单"></a>端口白名单</h4><p>为了防止端口被滥用，可以手动指定允许哪些端口被使用，在 frps.ini 中通过 privilege_allow_ports 来指定：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frps.ini</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">privilege_allow_ports</span> = <span class="number">2000</span>-<span class="number">3000</span>,<span class="number">3001</span>,<span class="number">3003</span>,<span class="number">4000</span>-<span class="number">50000</span></span><br></pre></td></tr></table></figure>

<p>privilege_allow_ports 可以配置允许使用的某个指定端口或者是一个范围内的所有端口，以 <code>,</code> 分隔，指定的范围以 <code>-</code> 分隔。</p>
<h3 id="TCP-多路复用"><a href="#TCP-多路复用" class="headerlink" title="TCP 多路复用"></a>TCP 多路复用</h3><p>从 v0.10.0 版本开始，客户端和服务器端之间的连接支持多路复用，不再需要为每一个用户请求创建一个连接，使连接建立的延迟降低，并且避免了大量文件描述符的占用，使 frp 可以承载更高的并发数。</p>
<p>该功能默认启用，如需关闭，可以在 frps.ini 和 frpc.ini 中配置，该配置项在服务端和客户端必须一致：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frps.ini 和 frpc.ini 中</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">tcp_mux</span> = <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h3 id="底层通信可选-kcp-协议"><a href="#底层通信可选-kcp-协议" class="headerlink" title="底层通信可选 kcp 协议"></a>底层通信可选 kcp 协议</h3><p>从 v0.12.0 版本开始，底层通信协议支持选择 kcp 协议，在弱网环境下传输效率提升明显，但是会有一些额外的流量消耗。</p>
<p>开启 kcp 协议支持：</p>
<ol>
<li><p>在 frps.ini 中启用 kcp 协议支持，指定一个 udp 端口用于接收客户端请求：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frps.ini</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">7000</span></span><br><span class="line"><span class="comment"># kcp 绑定的是 udp 端口，可以和 bind_port 一样</span></span><br><span class="line"><span class="attr">kcp_bind_port</span> = <span class="number">7000</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在 frpc.ini 指定需要使用的协议类型，目前只支持 tcp 和 kcp。其他代理配置不需要变更：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frpc.ini</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = x.x.x.x</span><br><span class="line"><span class="comment"># server_port 指定为 frps 的 kcp_bind_port</span></span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"><span class="attr">protocol</span> = kcp</span><br></pre></td></tr></table></figure>
</li>
<li><p>像之前一样使用 frp，需要注意开放相关机器上的 udp 的端口的访问权限。</p>
</li>
</ol>
<h3 id="连接池"><a href="#连接池" class="headerlink" title="连接池"></a>连接池</h3><p>默认情况下，当用户请求建立连接后，frps 才会请求 frpc 主动与后端服务建立一个连接。当为指定的代理启用连接池后，frp 会预先和后端服务建立起指定数量的连接，每次接收到用户请求后，会从连接池中取出一个连接和用户连接关联起来，避免了等待与后端服务建立连接以及 frpc 和 frps 之间传递控制信息的时间。</p>
<p>这一功能比较适合有大量短连接请求时开启。</p>
<ol>
<li><p>首先可以在 frps.ini 中设置每个代理可以创建的连接池上限，避免大量资源占用，客户端设置超过此配置后会被调整到当前值：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frps.ini</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">max_pool_count</span> = <span class="number">5</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在 frpc.ini 中为客户端启用连接池，指定预创建连接的数量：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frpc.ini</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">pool_count</span> = <span class="number">1</span></span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="修改-Host-Header"><a href="#修改-Host-Header" class="headerlink" title="修改 Host Header"></a>修改 Host Header</h3><p>通常情况下 frp 不会修改转发的任何数据。但有一些后端服务会根据 http 请求 header 中的 host 字段来展现不同的网站，例如 nginx 的虚拟主机服务，启用 host-header 的修改功能可以动态修改 http 请求中的 host 字段。该功能仅限于 http 类型的代理。</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frpc.ini</span></span><br><span class="line"><span class="section">[web]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_port</span> = <span class="number">80</span></span><br><span class="line"><span class="attr">custom_domains</span> = test.yourdomain.com</span><br><span class="line"><span class="attr">host_header_rewrite</span> = dev.yourdomain.com</span><br></pre></td></tr></table></figure>

<p>原来 http 请求中的 host 字段 <code>test.yourdomain.com</code> 转发到后端服务时会被替换为 <code>dev.yourdomain.com</code>。</p>
<h3 id="获取用户真实-IP"><a href="#获取用户真实-IP" class="headerlink" title="获取用户真实 IP"></a>获取用户真实 IP</h3><p>目前只有 <strong>http</strong> 类型的代理支持这一功能，可以通过用户请求的 header 中的 <code>X-Forwarded-For</code> 和 <code>X-Real-IP</code> 来获取用户真实 IP。</p>
<p><strong>需要注意的是，目前只在每一个用户连接的第一个 HTTP 请求中添加了这两个 header。</strong></p>
<h3 id="通过密码保护你的-web-服务"><a href="#通过密码保护你的-web-服务" class="headerlink" title="通过密码保护你的 web 服务"></a>通过密码保护你的 web 服务</h3><p>由于所有客户端共用一个 frps 的 http 服务端口，任何知道你的域名和 url 的人都能访问到你部署在内网的 web 服务，但是在某些场景下需要确保只有限定的用户才能访问。</p>
<p>frp 支持通过 HTTP Basic Auth 来保护你的 web 服务，使用户需要通过用户名和密码才能访问到你的服务。</p>
<p>该功能目前仅限于 http 类型的代理，需要在 frpc 的代理配置中添加用户名和密码的设置。</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frpc.ini</span></span><br><span class="line"><span class="section">[web]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_port</span> = <span class="number">80</span></span><br><span class="line"><span class="attr">custom_domains</span> = test.yourdomain.com</span><br><span class="line"><span class="attr">http_user</span> = abc</span><br><span class="line"><span class="attr">http_pwd</span> = abc</span><br></pre></td></tr></table></figure>

<p>通过浏览器访问 <code>http://test.yourdomain.com</code>，需要输入配置的用户名和密码才能访问。</p>
<h3 id="自定义二级域名"><a href="#自定义二级域名" class="headerlink" title="自定义二级域名"></a>自定义二级域名</h3><p>在多人同时使用一个 frps 时，通过自定义二级域名的方式来使用会更加方便。</p>
<p>通过在 frps 的配置文件中配置 <code>subdomain_host</code>，就可以启用该特性。之后在 frpc 的 http、https 类型的代理中可以不配置 <code>custom_domains</code>，而是配置一个 <code>subdomain</code> 参数。</p>
<p>只需要将 <code>*.&#123;subdomain_host&#125;</code> 解析到 frps 所在服务器。之后用户可以通过 <code>subdomain</code> 自行指定自己的 web 服务所需要使用的二级域名，通过 <code>&#123;subdomain&#125;.&#123;subdomain_host&#125;</code> 来访问自己的 web 服务。</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frps.ini</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">subdomain_host</span> = frps.com</span><br></pre></td></tr></table></figure>

<p>将泛域名 <code>*.frps.com</code> 解析到 frps 所在服务器的 IP 地址。</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frpc.ini</span></span><br><span class="line"><span class="section">[web]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_port</span> = <span class="number">80</span></span><br><span class="line"><span class="attr">subdomain</span> = test</span><br></pre></td></tr></table></figure>

<p>frps 和 fprc 都启动成功后，通过 <code>test.frps.com</code> 就可以访问到内网的 web 服务。</p>
<p>需要注意的是如果 frps 配置了 <code>subdomain_host</code>，则 <code>custom_domains</code> 中不能是属于 <code>subdomain_host</code> 的子域名或者泛域名。</p>
<p>同一个 http 或 https 类型的代理中 <code>custom_domains</code>  和 <code>subdomain</code> 可以同时配置。</p>
<h3 id="URL-路由"><a href="#URL-路由" class="headerlink" title="URL 路由"></a>URL 路由</h3><p>frp 支持根据请求的 URL 路径路由转发到不同的后端服务。</p>
<p>通过配置文件中的 <code>locations</code> 字段指定一个或多个 proxy 能够匹配的 URL 前缀(目前仅支持最大前缀匹配，之后会考虑正则匹配)。例如指定 <code>locations = /news</code>，则所有 URL 以 <code>/news</code> 开头的请求都会被转发到这个服务。</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frpc.ini</span></span><br><span class="line"><span class="section">[web01]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_port</span> = <span class="number">80</span></span><br><span class="line"><span class="attr">custom_domains</span> = web.yourdomain.com</span><br><span class="line"><span class="attr">locations</span> = /</span><br><span class="line"></span><br><span class="line"><span class="section">[web02]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_port</span> = <span class="number">81</span></span><br><span class="line"><span class="attr">custom_domains</span> = web.yourdomain.com</span><br><span class="line"><span class="attr">locations</span> = /news,/about</span><br></pre></td></tr></table></figure>

<p>按照上述的示例配置后，<code>web.yourdomain.com</code> 这个域名下所有以 <code>/news</code> 以及 <code>/about</code> 作为前缀的 URL 请求都会被转发到 web02，其余的请求会被转发到 web01。</p>
<h3 id="通过代理连接-frps"><a href="#通过代理连接-frps" class="headerlink" title="通过代理连接 frps"></a>通过代理连接 frps</h3><p>在只能通过代理访问外网的环境内，frpc 支持通过 HTTP PROXY 和 frps 进行通信。</p>
<p>可以通过设置 <code>HTTP_PROXY</code> 系统环境变量或者通过在 frpc 的配置文件中设置 <code>http_proxy</code> 参数来使用此功能。</p>
<p>仅在 <code>protocol = tcp</code> 时生效。</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frpc.ini</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = x.x.x.x</span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"><span class="attr">http_proxy</span> = http://user:pwd@<span class="number">192.168</span>.<span class="number">1.128</span>:<span class="number">8080</span></span><br></pre></td></tr></table></figure>

<h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><p>默认情况下，frpc 只会转发请求到本地 tcp 或 udp 端口。</p>
<p>插件模式是为了在客户端提供更加丰富的功能，目前内置的插件有 <strong>unix_domain_socket</strong>、<strong>http_proxy</strong>、<strong>socks5</strong>。具体使用方式请查看<a href="#%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B">使用示例</a>。</p>
<p>通过 <code>plugin</code> 指定需要使用的插件，插件的配置参数都以 <code>plugin_</code> 开头。使用插件后 <code>local_ip</code> 和 <code>local_port</code> 不再需要配置。</p>
<p>使用 <strong>http_proxy</strong> 插件的示例:</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frpc.ini</span></span><br><span class="line"><span class="section">[http_proxy]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6000</span></span><br><span class="line"><span class="attr">plugin</span> = http_proxy</span><br><span class="line"><span class="attr">plugin_http_user</span> = abc</span><br><span class="line"><span class="attr">plugin_http_passwd</span> = abc</span><br></pre></td></tr></table></figure>

<p><code>plugin_http_user</code> 和 <code>plugin_http_passwd</code> 即为 <code>http_proxy</code> 插件可选的配置参数。</p>
<h2 id="开发计划"><a href="#开发计划" class="headerlink" title="开发计划"></a>开发计划</h2><p>计划在后续版本中加入的功能与优化，排名不分先后，如果有其他功能建议欢迎在 <a href="https://github.com/fatedier/frp/issues">issues</a> 中反馈。</p>
<ul>
<li>frps 记录 http 请求日志。</li>
<li>frps 支持直接反向代理，类似 haproxy。</li>
<li>frpc 支持负载均衡到后端不同服务。</li>
<li>frpc 支持直接作为 webserver 访问指定静态页面。</li>
<li>支持 udp 打洞的方式，提供两边内网机器直接通信，流量不经过服务器转发。</li>
<li>集成对 k8s 等平台的支持。</li>
</ul>
<h2 id="为-frp-做贡献"><a href="#为-frp-做贡献" class="headerlink" title="为 frp 做贡献"></a>为 frp 做贡献</h2><p>frp 是一个免费且开源的项目，我们欢迎任何人为其开发和进步贡献力量。</p>
<ul>
<li>在使用过程中出现任何问题，可以通过 <a href="https://github.com/fatedier/frp/issues">issues</a> 来反馈。</li>
<li>Bug 的修复可以直接提交 Pull Request 到 dev 分支。</li>
<li>如果是增加新的功能特性，请先创建一个 issue 并做简单描述以及大致的实现方法，提议被采纳后，就可以创建一个实现新特性的 Pull Request。</li>
<li>欢迎对说明文档做出改善，帮助更多的人使用 frp，特别是英文文档。</li>
<li>贡献代码请提交 PR 至 dev 分支，master 分支仅用于发布稳定可用版本。</li>
<li>如果你有任何其他方面的问题，欢迎反馈至 <a href="mailto:&#102;&#x61;&#x74;&#101;&#x64;&#x69;&#101;&#x72;&#x40;&#x67;&#109;&#97;&#105;&#x6c;&#x2e;&#99;&#111;&#x6d;">&#102;&#x61;&#x74;&#101;&#x64;&#x69;&#101;&#x72;&#x40;&#x67;&#109;&#97;&#105;&#x6c;&#x2e;&#99;&#111;&#x6d;</a> 共同交流。</li>
</ul>
<p><strong>提醒：和项目相关的问题最好在 <a href="https://github.com/fatedier/frp/issues">issues</a> 中反馈，这样方便其他有类似问题的人可以快速查找解决方法，并且也避免了我们重复回答一些问题。</strong></p>
<h2 id="捐助"><a href="#捐助" class="headerlink" title="捐助"></a>捐助</h2><p>如果您觉得 frp 对你有帮助，欢迎给予我们一定的捐助来维持项目的长期发展。</p>
<p>frp 交流群：606194980 (QQ 群号)</p>
<h3 id="支付宝扫码捐赠"><a href="#支付宝扫码捐赠" class="headerlink" title="支付宝扫码捐赠"></a>支付宝扫码捐赠</h3><p><img src="donate-alipay.png" alt="donate-alipay"></p>
<h3 id="微信支付捐赠"><a href="#微信支付捐赠" class="headerlink" title="微信支付捐赠"></a>微信支付捐赠</h3><p><img src="donate-wechatpay.png" alt="donate-wechatpay"></p>
<h3 id="Paypal-捐赠"><a href="#Paypal-捐赠" class="headerlink" title="Paypal 捐赠"></a>Paypal 捐赠</h3><p>海外用户推荐通过 <a href="https://www.paypal.me/fatedier">Paypal</a> 向作者的账户 <strong><a href="mailto:&#x66;&#97;&#x74;&#101;&#x64;&#x69;&#101;&#114;&#64;&#103;&#x6d;&#x61;&#x69;&#108;&#46;&#x63;&#x6f;&#109;">&#x66;&#97;&#x74;&#101;&#x64;&#x69;&#101;&#114;&#64;&#103;&#x6d;&#x61;&#x69;&#108;&#46;&#x63;&#x6f;&#109;</a></strong> 进行捐赠。</p>
]]></content>
  </entry>
  <entry>
    <title>在Windows中手动编译Putty</title>
    <url>/2017/06/30/build-putty-on-Windows/</url>
    <content><![CDATA[<img src="/2017/06/30/build-putty-on-Windows/1.jpg" class="" title="Putty">
<a id="more"></a>
<p>最近琢磨着汉化一下putty，于是下载了其<a href="https://the.earth.li/~sgtatham/putty/latest/putty-src.zip">源代码</a>，解压后，阅读其文档，发现，其实重新编译似乎并不是太麻烦。</p>
<h2 id="使用VS的编译器编译"><a href="#使用VS的编译器编译" class="headerlink" title="使用VS的编译器编译"></a>使用VS的编译器编译</h2><p>第一种办法是使用VS的编译器来编译putty，安装VS后，在开始菜单里面，Visual Studio的子菜单下面找到<code>Developer Command Prompt for vs 2017</code>(PS:我电脑上安装了Visual Studio 2017，所以是for 2017，具体视安装版本而定)，</p>
<img src="/2017/06/30/build-putty-on-Windows/2.jpg" class="">
<p>然后，切换目录到解压后的putty源码所在的目录的<code>windows</code>下面，使用命令<code>namek -f Makefile.vc</code>,即可编译putty，如图:</p>
<img src="/2017/06/30/build-putty-on-Windows/3.jpg" class="">
<p>如图，为编译完成的样子</p>
<img src="/2017/06/30/build-putty-on-Windows/4.jpg" class="">
<p>于是，就可以在Windows文件夹内看到编译好的putty套件了</p>
<img src="/2017/06/30/build-putty-on-Windows/5.jpg" class="">
<p>耗时一分钟都不到，不愧为巨硬出品。</p>
<h2 id="使用MinGW编译"><a href="#使用MinGW编译" class="headerlink" title="使用MinGW编译"></a>使用MinGW编译</h2><p>使用VS的编译器来编译的前提是安装了Visual Studio，但是Visual Studio安装包好几个G，安装时间超长，有时候还联网检查一下更新什么的，巨硬的服务器貌似都在国外，下载速度超慢，所以使用MinGW编译也不失为一个方便的选择。<br>这里直接提供可用的<a href="https://coding.net/u/BDZNH/p/MinGW-w64/">MinGW包</a>， 下载后双击解压，然后把解压后文件夹内的<a href="http://jingyan.baidu.com/article/6b97984da0bd8a1ca2b0bf90.html"><code>bin</code>文件夹添加到环境变量</a>。<br>假设<code>bin</code>文件的完整路径为<code>D:\MinGW-7.1.0\bin</code><br>在开始菜单上点右键，然后点击命令提示符，输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> PATH=D:\MinGW-7.1.0\bin;%PATH%</span><br></pre></td></tr></table></figure>
<p>验证是否添加成功</p>
<img src="/2017/06/30/build-putty-on-Windows/6.jpg" class="">
<p>若出现如上图的提示信息，即表示添加成功。<br>然后，切换目录到putty目录下的<code>windows</code>文件夹内，使用<code>make -f Makefile.mgw</code>即可编译putty<br>如图为编译成功：</p>
<img src="/2017/06/30/build-putty-on-Windows/7.jpg" class="">
<h2 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h2><p>以上为我自己试验之后，成功编译的步骤，中途还是踩了一些坑。使用VS的编译其很顺利，一次就通过了，使用MinGW的编译的过程比较曲折，首先是下载了<a href="https://sourceforge.net/projects/mingw-w64/">MinGW-w64</a>的包，忍受着超级慢的网速安装好之后，发现没有make工具，其bin目录的<code>mingw32-make</code>也无法编译，差不多要放弃的时候，又在Gayhub上发现了这个<a href="https://github.com/StephanTLavavej/mingw-distro">mingw-distro</a>,作者网站为<a href="https://nuwen.net/mingw.html">https://nuwen.net/mingw.html</a>,下载好，配置好环境变量，进行编译的时候又出现这个错误</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gcc  -Wall -O2 -D_WINDOWS -DDEBUG -DWIN32S_COMPAT -D_NO_OLDNAMES -I..&#x2F;.&#x2F; -I..&#x2F;charset&#x2F; -I..&#x2F;windows&#x2F; -I..&#x2F;unix&#x2F; -D_WIN32_IE&#x3D;0x0500 -DWINVER&#x3D;0x0500 -D_WIN32_WINDOWS&#x3D;0x0410 -D_WIN32_WINNT&#x3D;0x0500  -c ..&#x2F;windows&#x2F;window.c</span><br><span class="line">In file included from ..&#x2F;windows&#x2F;window.c:29:0:</span><br><span class="line">d:\mingw-7.1.0\x86_64-w64-mingw32\include\multimon.h: In function &#39;IsPlatformNT&#39;:</span><br><span class="line">d:\mingw-7.1.0\x86_64-w64-mingw32\include\multimon.h:130:38: error: &#39;osvi&#39; undeclared (first use in this function); did you mean &#39;oi&#39;?</span><br><span class="line">     oi.dwOSVersionInfoSize &#x3D; sizeof (osvi);</span><br><span class="line">                                      ^~~~</span><br><span class="line">                                      oi</span><br><span class="line">d:\mingw-7.1.0\x86_64-w64-mingw32\include\multimon.h:130:38: note: each undeclared identifier is reported only once for each function it appears in</span><br><span class="line">make: *** [Makefile.mgw:963: window.o] Error 1</span><br></pre></td></tr></table></figure>
<p>问遍百度不得解，问Google，得到的只是4gbug提交报告。然后又转战MinGW原版，cygwn，均以失败告终，最后还是回到Gayhub的这个版本，最后折腾一番，更改<code>x86_64-w64-mingw32\include\multimon.h</code>的内容如下</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//=============================================================================</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// multimon.h -- Stub module that fakes multiple monitor apis on Win32 OSes</span></span><br><span class="line"><span class="comment">//               without them.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// By using this header your code will get back default values from</span></span><br><span class="line"><span class="comment">// GetSystemMetrics() for new metrics, and the new multimonitor APIs</span></span><br><span class="line"><span class="comment">// will act like only one display is present on a Win32 OS without</span></span><br><span class="line"><span class="comment">// multimonitor APIs.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Exactly one source must include this with COMPILE_MULTIMON_STUBS defined.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Copyright (c) Microsoft Corporation. All rights reserved. </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//=============================================================================</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;winapifamily.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> region Desktop Family</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> &#123;            <span class="comment">// Assume C declarations for C++</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// __cplusplus</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// If we are building with Win95/NT4 headers, we need to declare</span></span><br><span class="line"><span class="comment">// the multimonitor-related metrics and APIs ourselves.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> SM_CMONITORS</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SM_XVIRTUALSCREEN       76</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SM_YVIRTUALSCREEN       77</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SM_CXVIRTUALSCREEN      78</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SM_CYVIRTUALSCREEN      79</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SM_CMONITORS            80</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SM_SAMEDISPLAYFORMAT    81</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// HMONITOR is already declared if WINVER &gt;= 0x0500 in windef.h</span></span><br><span class="line"><span class="comment">// This is for components built with an older version number.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> !defined(HMONITOR_DECLARED) &amp;&amp; (WINVER &lt; 0x0500)</span></span><br><span class="line">DECLARE_HANDLE(HMONITOR);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> HMONITOR_DECLARED</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MONITOR_DEFAULTTONULL       0x00000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MONITOR_DEFAULTTOPRIMARY    0x00000001</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MONITOR_DEFAULTTONEAREST    0x00000002</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MONITORINFOF_PRIMARY        0x00000001</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">tagMONITORINFO</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    DWORD   cbSize;</span><br><span class="line">    RECT    rcMonitor;</span><br><span class="line">    RECT    rcWork;</span><br><span class="line">    DWORD   dwFlags;</span><br><span class="line">&#125; MONITORINFO, *LPMONITORINFO;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> CCHDEVICENAME</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CCHDEVICENAME 32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">tagMONITORINFOEXA</span> :</span> <span class="keyword">public</span> tagMONITORINFO</span><br><span class="line">&#123;</span><br><span class="line">    CHAR        szDevice[CCHDEVICENAME];</span><br><span class="line">&#125; MONITORINFOEXA, *LPMONITORINFOEXA;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">tagMONITORINFOEXW</span> :</span> <span class="keyword">public</span> tagMONITORINFO</span><br><span class="line">&#123;</span><br><span class="line">    WCHAR       szDevice[CCHDEVICENAME];</span><br><span class="line">&#125; MONITORINFOEXW, *LPMONITORINFOEXW;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> UNICODE</span></span><br><span class="line"><span class="keyword">typedef</span> MONITORINFOEXW MONITORINFOEX;</span><br><span class="line"><span class="keyword">typedef</span> LPMONITORINFOEXW LPMONITORINFOEX;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="keyword">typedef</span> MONITORINFOEXA MONITORINFOEX;</span><br><span class="line"><span class="keyword">typedef</span> LPMONITORINFOEXA LPMONITORINFOEX;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// UNICODE</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> <span class="comment">// ndef __cplusplus</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">tagMONITORINFOEXA</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    MONITORINFO;</span><br><span class="line">    CHAR        szDevice[CCHDEVICENAME];</span><br><span class="line">&#125; MONITORINFOEXA, *LPMONITORINFOEXA;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">tagMONITORINFOEXW</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    MONITORINFO;</span><br><span class="line">    WCHAR       szDevice[CCHDEVICENAME];</span><br><span class="line">&#125; MONITORINFOEXW, *LPMONITORINFOEXW;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> UNICODE</span></span><br><span class="line"><span class="keyword">typedef</span> MONITORINFOEXW MONITORINFOEX;</span><br><span class="line"><span class="keyword">typedef</span> LPMONITORINFOEXW LPMONITORINFOEX;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="keyword">typedef</span> MONITORINFOEXA MONITORINFOEX;</span><br><span class="line"><span class="keyword">typedef</span> LPMONITORINFOEXA LPMONITORINFOEX;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// UNICODE</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">BOOL</span> <span class="params">(CALLBACK* MONITORENUMPROC)</span><span class="params">(HMONITOR, HDC, LPRECT, LPARAM)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> DISPLAY_DEVICE_ATTACHED_TO_DESKTOP</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">DISPLAY_DEVICEA</span> &#123;</span></span><br><span class="line">    DWORD  cb;</span><br><span class="line">    CHAR   DeviceName[<span class="number">32</span>];</span><br><span class="line">    CHAR   DeviceString[<span class="number">128</span>];</span><br><span class="line">    DWORD  StateFlags;</span><br><span class="line">    CHAR   DeviceID[<span class="number">128</span>];</span><br><span class="line">    CHAR   DeviceKey[<span class="number">128</span>];</span><br><span class="line">&#125; DISPLAY_DEVICEA, *PDISPLAY_DEVICEA, *LPDISPLAY_DEVICEA;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">DISPLAY_DEVICEW</span> &#123;</span></span><br><span class="line">    DWORD  cb;</span><br><span class="line">    WCHAR  DeviceName[<span class="number">32</span>];</span><br><span class="line">    WCHAR  DeviceString[<span class="number">128</span>];</span><br><span class="line">    DWORD  StateFlags;</span><br><span class="line">    WCHAR  DeviceID[<span class="number">128</span>];</span><br><span class="line">    WCHAR  DeviceKey[<span class="number">128</span>];</span><br><span class="line">&#125; DISPLAY_DEVICEW, *PDISPLAY_DEVICEW, *LPDISPLAY_DEVICEW;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> UNICODE</span></span><br><span class="line"><span class="keyword">typedef</span> DISPLAY_DEVICEW DISPLAY_DEVICE;</span><br><span class="line"><span class="keyword">typedef</span> PDISPLAY_DEVICEW PDISPLAY_DEVICE;</span><br><span class="line"><span class="keyword">typedef</span> LPDISPLAY_DEVICEW LPDISPLAY_DEVICE;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="keyword">typedef</span> DISPLAY_DEVICEA DISPLAY_DEVICE;</span><br><span class="line"><span class="keyword">typedef</span> PDISPLAY_DEVICEA PDISPLAY_DEVICE;</span><br><span class="line"><span class="keyword">typedef</span> LPDISPLAY_DEVICEA LPDISPLAY_DEVICE;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// UNICODE</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DISPLAY_DEVICE_ATTACHED_TO_DESKTOP 0x00000001</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DISPLAY_DEVICE_MULTI_DRIVER        0x00000002</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DISPLAY_DEVICE_PRIMARY_DEVICE      0x00000004</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DISPLAY_DEVICE_MIRRORING_DRIVER    0x00000008</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DISPLAY_DEVICE_VGA_COMPATIBLE      0x00000010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span>  <span class="comment">// SM_CMONITORS</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> GetMonitorInfo</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> GetSystemMetrics</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> MonitorFromWindow</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> MonitorFromRect</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> MonitorFromPoint</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> EnumDisplayMonitors</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> EnumDisplayDevices</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Define COMPILE_MULTIMON_STUBS to compile the stubs;</span></span><br><span class="line"><span class="comment">// otherwise, you get the declarations.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> COMPILE_MULTIMON_STUBS</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//-----------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Implement the API stubs.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//-----------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _MULTIMON_USE_SECURE_CRT</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(__GOT_SECURE_LIB__) &amp;&amp; __GOT_SECURE_LIB__ &gt;= 200402L</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _MULTIMON_USE_SECURE_CRT 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _MULTIMON_USE_SECURE_CRT 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> MULTIMON_FNS_DEFINED</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span>      (WINAPI* g_pfnGetSystemMetrics)(<span class="keyword">int</span>) = <span class="literal">NULL</span>;</span><br><span class="line">HMONITOR (WINAPI* g_pfnMonitorFromWindow)(HWND, DWORD) = <span class="literal">NULL</span>;</span><br><span class="line">HMONITOR (WINAPI* g_pfnMonitorFromRect)(LPCRECT, DWORD) = <span class="literal">NULL</span>;</span><br><span class="line">HMONITOR (WINAPI* g_pfnMonitorFromPoint)(POINT, DWORD) = <span class="literal">NULL</span>;</span><br><span class="line">BOOL     (WINAPI* g_pfnGetMonitorInfo)(HMONITOR, LPMONITORINFO) = <span class="literal">NULL</span>;</span><br><span class="line">BOOL     (WINAPI* g_pfnEnumDisplayMonitors)(HDC, LPCRECT, MONITORENUMPROC, LPARAM) = <span class="literal">NULL</span>;</span><br><span class="line">BOOL     (WINAPI* g_pfnEnumDisplayDevices)(PVOID, DWORD, PDISPLAY_DEVICE,DWORD) = <span class="literal">NULL</span>;</span><br><span class="line">BOOL     g_fMultiMonInitDone = FALSE;</span><br><span class="line">BOOL     g_fMultimonPlatformNT = FALSE;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">IsPlatformNT</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    OSVERSIONINFOA osvi = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    osvi.dwOSVersionInfoSize = <span class="keyword">sizeof</span>(osvi);</span><br><span class="line">    GetVersionExA((OSVERSIONINFOA*)&amp;osvi);</span><br><span class="line">    <span class="keyword">return</span> (VER_PLATFORM_WIN32_NT == osvi.dwPlatformId);    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">InitMultipleMonitorStubs</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HMODULE hUser32;</span><br><span class="line">    <span class="keyword">if</span> (g_fMultiMonInitDone)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> g_pfnGetMonitorInfo != <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    g_fMultimonPlatformNT = IsPlatformNT();</span><br><span class="line">    hUser32 = GetModuleHandle(TEXT(<span class="string">&quot;USER32&quot;</span>));</span><br><span class="line">    <span class="keyword">if</span> (hUser32 &amp;&amp;</span><br><span class="line">        (*(FARPROC*)&amp;g_pfnGetSystemMetrics    = GetProcAddress(hUser32,<span class="string">&quot;GetSystemMetrics&quot;</span>)) != <span class="literal">NULL</span> &amp;&amp;</span><br><span class="line">        (*(FARPROC*)&amp;g_pfnMonitorFromWindow   = GetProcAddress(hUser32,<span class="string">&quot;MonitorFromWindow&quot;</span>)) != <span class="literal">NULL</span> &amp;&amp;</span><br><span class="line">        (*(FARPROC*)&amp;g_pfnMonitorFromRect     = GetProcAddress(hUser32,<span class="string">&quot;MonitorFromRect&quot;</span>)) != <span class="literal">NULL</span> &amp;&amp;</span><br><span class="line">        (*(FARPROC*)&amp;g_pfnMonitorFromPoint    = GetProcAddress(hUser32,<span class="string">&quot;MonitorFromPoint&quot;</span>)) != <span class="literal">NULL</span> &amp;&amp;</span><br><span class="line">        (*(FARPROC*)&amp;g_pfnEnumDisplayMonitors = GetProcAddress(hUser32,<span class="string">&quot;EnumDisplayMonitors&quot;</span>)) != <span class="literal">NULL</span> &amp;&amp;</span><br><span class="line">#ifdef UNICODE</span><br><span class="line">        (*(FARPROC*)&amp;g_pfnEnumDisplayDevices  = GetProcAddress(hUser32,<span class="string">&quot;EnumDisplayDevicesW&quot;</span>)) != <span class="literal">NULL</span> &amp;&amp;</span><br><span class="line">        (*(FARPROC*)&amp;g_pfnGetMonitorInfo      = g_fMultimonPlatformNT ? GetProcAddress(hUser32,<span class="string">&quot;GetMonitorInfoW&quot;</span>) : </span><br><span class="line">                                                GetProcAddress(hUser32,<span class="string">&quot;GetMonitorInfoA&quot;</span>)) != <span class="literal">NULL</span></span><br><span class="line">#<span class="keyword">else</span></span><br><span class="line">        (*(FARPROC*)&amp;g_pfnGetMonitorInfo      = GetProcAddress(hUser32,<span class="string">&quot;GetMonitorInfoA&quot;</span>)) != <span class="literal">NULL</span> &amp;&amp;</span><br><span class="line">        (*(FARPROC*)&amp;g_pfnEnumDisplayDevices  = GetProcAddress(hUser32,<span class="string">&quot;EnumDisplayDevicesA&quot;</span>)) != <span class="literal">NULL</span></span><br><span class="line">#endif</span><br><span class="line">    ) &#123;</span><br><span class="line">        g_fMultiMonInitDone = TRUE;</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        g_pfnGetSystemMetrics    = <span class="literal">NULL</span>;</span><br><span class="line">        g_pfnMonitorFromWindow   = <span class="literal">NULL</span>;</span><br><span class="line">        g_pfnMonitorFromRect     = <span class="literal">NULL</span>;</span><br><span class="line">        g_pfnMonitorFromPoint    = <span class="literal">NULL</span>;</span><br><span class="line">        g_pfnGetMonitorInfo      = <span class="literal">NULL</span>;</span><br><span class="line">        g_pfnEnumDisplayMonitors = <span class="literal">NULL</span>;</span><br><span class="line">        g_pfnEnumDisplayDevices  = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">        g_fMultiMonInitDone = TRUE;</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//-----------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// fake implementations of Monitor APIs that work with the primary display</span></span><br><span class="line"><span class="comment">// no special parameter validation is made since these run in client code</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//-----------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> WINAPI</span><br><span class="line">xGetSystemMetrics(<span class="keyword">int</span> nIndex)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (InitMultipleMonitorStubs())</span><br><span class="line">        <span class="keyword">return</span> g_pfnGetSystemMetrics(nIndex);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (nIndex)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> SM_CMONITORS:</span><br><span class="line">    <span class="keyword">case</span> SM_SAMEDISPLAYFORMAT:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> SM_XVIRTUALSCREEN:</span><br><span class="line">    <span class="keyword">case</span> SM_YVIRTUALSCREEN:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> SM_CXVIRTUALSCREEN:</span><br><span class="line">        nIndex = SM_CXSCREEN;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> SM_CYVIRTUALSCREEN:</span><br><span class="line">        nIndex = SM_CYSCREEN;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> GetSystemMetrics(nIndex);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> xPRIMARY_MONITOR ((HMONITOR)0x12340042)</span></span><br><span class="line"></span><br><span class="line">HMONITOR WINAPI</span><br><span class="line">xMonitorFromPoint(POINT ptScreenCoords, DWORD dwFlags)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (InitMultipleMonitorStubs())</span><br><span class="line">        <span class="keyword">return</span> g_pfnMonitorFromPoint(ptScreenCoords, dwFlags);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((dwFlags &amp; (MONITOR_DEFAULTTOPRIMARY | MONITOR_DEFAULTTONEAREST)) ||</span><br><span class="line">        ((ptScreenCoords.x &gt;= <span class="number">0</span>) &amp;&amp;</span><br><span class="line">        (ptScreenCoords.x &lt; GetSystemMetrics(SM_CXSCREEN)) &amp;&amp;</span><br><span class="line">        (ptScreenCoords.y &gt;= <span class="number">0</span>) &amp;&amp;</span><br><span class="line">        (ptScreenCoords.y &lt; GetSystemMetrics(SM_CYSCREEN))))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> xPRIMARY_MONITOR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">HMONITOR WINAPI</span><br><span class="line">xMonitorFromRect(LPCRECT lprcScreenCoords, DWORD dwFlags)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (InitMultipleMonitorStubs())</span><br><span class="line">        <span class="keyword">return</span> g_pfnMonitorFromRect(lprcScreenCoords, dwFlags);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((dwFlags &amp; (MONITOR_DEFAULTTOPRIMARY | MONITOR_DEFAULTTONEAREST)) ||</span><br><span class="line">        ((lprcScreenCoords-&gt;right &gt; <span class="number">0</span>) &amp;&amp;</span><br><span class="line">        (lprcScreenCoords-&gt;bottom &gt; <span class="number">0</span>) &amp;&amp;</span><br><span class="line">        (lprcScreenCoords-&gt;left &lt; GetSystemMetrics(SM_CXSCREEN)) &amp;&amp;</span><br><span class="line">        (lprcScreenCoords-&gt;top &lt; GetSystemMetrics(SM_CYSCREEN))))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> xPRIMARY_MONITOR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">HMONITOR WINAPI</span><br><span class="line">xMonitorFromWindow(HWND hWnd, DWORD dwFlags)</span><br><span class="line">&#123;</span><br><span class="line">    WINDOWPLACEMENT wp;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (InitMultipleMonitorStubs())</span><br><span class="line">        <span class="keyword">return</span> g_pfnMonitorFromWindow(hWnd, dwFlags);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (dwFlags &amp; (MONITOR_DEFAULTTOPRIMARY | MONITOR_DEFAULTTONEAREST))</span><br><span class="line">        <span class="keyword">return</span> xPRIMARY_MONITOR;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (IsIconic(hWnd) ?</span><br><span class="line">            GetWindowPlacement(hWnd, &amp;wp) :</span><br><span class="line">            GetWindowRect(hWnd, &amp;wp.rcNormalPosition)) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> xMonitorFromRect(&amp;wp.rcNormalPosition, dwFlags);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BOOL WINAPI</span><br><span class="line">xGetMonitorInfo(HMONITOR hMonitor, _Inout_ LPMONITORINFO lpMonitorInfo)</span><br><span class="line">&#123;</span><br><span class="line">    RECT rcWork;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (InitMultipleMonitorStubs())</span><br><span class="line">    &#123;</span><br><span class="line">        BOOL f = g_pfnGetMonitorInfo(hMonitor, lpMonitorInfo);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> UNICODE</span></span><br><span class="line">        <span class="keyword">if</span> (f &amp;&amp; !g_fMultimonPlatformNT &amp;&amp; (lpMonitorInfo-&gt;cbSize &gt;= <span class="keyword">sizeof</span>(MONITORINFOEX)))</span><br><span class="line">        &#123; </span><br><span class="line">            MultiByteToWideChar(CP_ACP, <span class="number">0</span>,</span><br><span class="line">                (LPSTR)((MONITORINFOEX*)lpMonitorInfo)-&gt;szDevice, <span class="number">-1</span>,</span><br><span class="line">                ((MONITORINFOEX*)lpMonitorInfo)-&gt;szDevice, (<span class="keyword">sizeof</span>(((MONITORINFOEX*)lpMonitorInfo)-&gt;szDevice)/<span class="keyword">sizeof</span>(TCHAR)));</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">        <span class="keyword">return</span> f;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((hMonitor == xPRIMARY_MONITOR) &amp;&amp;</span><br><span class="line">        lpMonitorInfo &amp;&amp;</span><br><span class="line">        (lpMonitorInfo-&gt;cbSize &gt;= <span class="keyword">sizeof</span>(MONITORINFO)) &amp;&amp;</span><br><span class="line">        SystemParametersInfoA(SPI_GETWORKAREA, <span class="number">0</span>, &amp;rcWork, <span class="number">0</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        lpMonitorInfo-&gt;rcMonitor.left = <span class="number">0</span>;</span><br><span class="line">        lpMonitorInfo-&gt;rcMonitor.top  = <span class="number">0</span>;</span><br><span class="line">        lpMonitorInfo-&gt;rcMonitor.right  = GetSystemMetrics(SM_CXSCREEN);</span><br><span class="line">        lpMonitorInfo-&gt;rcMonitor.bottom = GetSystemMetrics(SM_CYSCREEN);</span><br><span class="line">        lpMonitorInfo-&gt;rcWork = rcWork;</span><br><span class="line">        lpMonitorInfo-&gt;dwFlags = MONITORINFOF_PRIMARY;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (lpMonitorInfo-&gt;cbSize &gt;= <span class="keyword">sizeof</span>(MONITORINFOEX))</span><br><span class="line">        &#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> UNICODE</span></span><br><span class="line">            MultiByteToWideChar(CP_ACP, <span class="number">0</span>, <span class="string">&quot;DISPLAY&quot;</span>, <span class="number">-1</span>, ((MONITORINFOEX*)lpMonitorInfo)-&gt;szDevice, (<span class="keyword">sizeof</span>(((MONITORINFOEX*)lpMonitorInfo)-&gt;szDevice)/<span class="keyword">sizeof</span>(TCHAR)));</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> <span class="comment">// UNICODE</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> _MULTIMON_USE_SECURE_CRT</span></span><br><span class="line">            strncpy_s(((MONITORINFOEX*)lpMonitorInfo)-&gt;szDevice, (<span class="keyword">sizeof</span>(((MONITORINFOEX*)lpMonitorInfo)-&gt;szDevice)/<span class="keyword">sizeof</span>(TCHAR)), TEXT(<span class="string">&quot;DISPLAY&quot;</span>), (<span class="keyword">sizeof</span>(((MONITORINFOEX*)lpMonitorInfo)-&gt;szDevice)/<span class="keyword">sizeof</span>(TCHAR)) - <span class="number">1</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">            lstrcpyn(((MONITORINFOEX*)lpMonitorInfo)-&gt;szDevice, TEXT(<span class="string">&quot;DISPLAY&quot;</span>), (<span class="keyword">sizeof</span>(((MONITORINFOEX*)lpMonitorInfo)-&gt;szDevice)/<span class="keyword">sizeof</span>(TCHAR)));</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// _MULTIMON_USE_SECURE_CRT</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// UNICODE</span></span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BOOL WINAPI</span><br><span class="line">xEnumDisplayMonitors(</span><br><span class="line">        HDC             hdcOptionalForPainting,</span><br><span class="line">        LPCRECT         lprcEnumMonitorsThatIntersect,</span><br><span class="line">        MONITORENUMPROC lpfnEnumProc,</span><br><span class="line">        LPARAM          dwData)</span><br><span class="line">&#123;</span><br><span class="line">    RECT rcLimit;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (InitMultipleMonitorStubs()) &#123;</span><br><span class="line">        <span class="keyword">return</span> g_pfnEnumDisplayMonitors(</span><br><span class="line">                hdcOptionalForPainting,</span><br><span class="line">                lprcEnumMonitorsThatIntersect,</span><br><span class="line">                lpfnEnumProc,</span><br><span class="line">                dwData);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!lpfnEnumProc)</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line"></span><br><span class="line">    rcLimit.left   = <span class="number">0</span>;</span><br><span class="line">    rcLimit.top    = <span class="number">0</span>;</span><br><span class="line">    rcLimit.right  = GetSystemMetrics(SM_CXSCREEN);</span><br><span class="line">    rcLimit.bottom = GetSystemMetrics(SM_CYSCREEN);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (hdcOptionalForPainting)</span><br><span class="line">    &#123;</span><br><span class="line">        RECT    rcClip;</span><br><span class="line">        POINT   ptOrg;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (GetClipBox(hdcOptionalForPainting, &amp;rcClip))</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">if</span> (!GetDCOrgEx(hdcOptionalForPainting, &amp;ptOrg))</span><br><span class="line">                <span class="keyword">return</span> FALSE;</span><br><span class="line"></span><br><span class="line">            OffsetRect(&amp;rcLimit, -ptOrg.x, -ptOrg.y);</span><br><span class="line">            <span class="keyword">if</span> (IntersectRect(&amp;rcLimit, &amp;rcLimit, &amp;rcClip) &amp;&amp;</span><br><span class="line">                (!lprcEnumMonitorsThatIntersect ||</span><br><span class="line">                     IntersectRect(&amp;rcLimit, &amp;rcLimit, lprcEnumMonitorsThatIntersect))) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//fall thru</span></span><br><span class="line">        <span class="keyword">case</span> NULLREGION:</span><br><span class="line">             <span class="keyword">return</span> TRUE;</span><br><span class="line">        <span class="keyword">case</span> ERROR:</span><br><span class="line">             <span class="keyword">return</span> FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (    lprcEnumMonitorsThatIntersect &amp;&amp;</span><br><span class="line">                !IntersectRect(&amp;rcLimit, &amp;rcLimit, lprcEnumMonitorsThatIntersect)) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> TRUE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> lpfnEnumProc(</span><br><span class="line">            xPRIMARY_MONITOR,</span><br><span class="line">            hdcOptionalForPainting,</span><br><span class="line">            &amp;rcLimit,</span><br><span class="line">            dwData);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BOOL WINAPI</span><br><span class="line">xEnumDisplayDevices(</span><br><span class="line">    PVOID Unused,</span><br><span class="line">    DWORD iDevNum,</span><br><span class="line">    _Inout_ PDISPLAY_DEVICE lpDisplayDevice,</span><br><span class="line">    DWORD dwFlags)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (InitMultipleMonitorStubs())</span><br><span class="line">        <span class="keyword">return</span> g_pfnEnumDisplayDevices(Unused, iDevNum, lpDisplayDevice, dwFlags);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Unused != <span class="literal">NULL</span>)</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (iDevNum != <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (lpDisplayDevice == <span class="literal">NULL</span> || lpDisplayDevice-&gt;cb &lt; <span class="keyword">sizeof</span>(DISPLAY_DEVICE))</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> UNICODE</span></span><br><span class="line">    MultiByteToWideChar(CP_ACP, <span class="number">0</span>, <span class="string">&quot;DISPLAY&quot;</span>, <span class="number">-1</span>, lpDisplayDevice-&gt;DeviceName, (<span class="keyword">sizeof</span>(lpDisplayDevice-&gt;DeviceName)/<span class="keyword">sizeof</span>(TCHAR)));</span><br><span class="line">    MultiByteToWideChar(CP_ACP, <span class="number">0</span>, <span class="string">&quot;DISPLAY&quot;</span>, <span class="number">-1</span>, lpDisplayDevice-&gt;DeviceString, (<span class="keyword">sizeof</span>(lpDisplayDevice-&gt;DeviceString)/<span class="keyword">sizeof</span>(TCHAR)));</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> <span class="comment">// UNICODE</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> _MULTIMON_USE_SECURE_CRT</span></span><br><span class="line">    strncpy_s((LPTSTR)lpDisplayDevice-&gt;DeviceName, (<span class="keyword">sizeof</span>(lpDisplayDevice-&gt;DeviceName)/<span class="keyword">sizeof</span>(TCHAR)), TEXT(<span class="string">&quot;DISPLAY&quot;</span>), (<span class="keyword">sizeof</span>(lpDisplayDevice-&gt;DeviceName)/<span class="keyword">sizeof</span>(TCHAR)) - <span class="number">1</span>);</span><br><span class="line">    strncpy_s((LPTSTR)lpDisplayDevice-&gt;DeviceString, (<span class="keyword">sizeof</span>(lpDisplayDevice-&gt;DeviceString)/<span class="keyword">sizeof</span>(TCHAR)), TEXT(<span class="string">&quot;DISPLAY&quot;</span>), (<span class="keyword">sizeof</span>(lpDisplayDevice-&gt;DeviceName)/<span class="keyword">sizeof</span>(TCHAR)) - <span class="number">1</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">    lstrcpyn((LPTSTR)lpDisplayDevice-&gt;DeviceName,   TEXT(<span class="string">&quot;DISPLAY&quot;</span>), (<span class="keyword">sizeof</span>(lpDisplayDevice-&gt;DeviceName)/<span class="keyword">sizeof</span>(TCHAR)));</span><br><span class="line">    lstrcpyn((LPTSTR)lpDisplayDevice-&gt;DeviceString, TEXT(<span class="string">&quot;DISPLAY&quot;</span>), (<span class="keyword">sizeof</span>(lpDisplayDevice-&gt;DeviceString)/<span class="keyword">sizeof</span>(TCHAR)));</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// _MULTIMON_USE_SECURE_CRT</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// UNICODE</span></span></span><br><span class="line"></span><br><span class="line">    lpDisplayDevice-&gt;StateFlags = DISPLAY_DEVICE_ATTACHED_TO_DESKTOP | DISPLAY_DEVICE_PRIMARY_DEVICE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> xPRIMARY_MONITOR</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> COMPILE_MULTIMON_STUBS</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span>   <span class="comment">// COMPILE_MULTIMON_STUBS</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">int</span>  WINAPI <span class="title">xGetSystemMetrics</span><span class="params">(<span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> HMONITOR WINAPI <span class="title">xMonitorFromWindow</span><span class="params">(HWND, DWORD)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> HMONITOR WINAPI <span class="title">xMonitorFromRect</span><span class="params">(LPCRECT, DWORD)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> HMONITOR WINAPI <span class="title">xMonitorFromPoint</span><span class="params">(POINT, DWORD)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> BOOL WINAPI <span class="title">xGetMonitorInfo</span><span class="params">(HMONITOR, LPMONITORINFO)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> BOOL WINAPI <span class="title">xEnumDisplayMonitors</span><span class="params">(HDC, LPCRECT, MONITORENUMPROC, LPARAM)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> BOOL WINAPI <span class="title">xEnumDisplayDevices</span><span class="params">(PVOID, DWORD, PDISPLAY_DEVICE, DWORD)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span>  <span class="comment">// COMPILE_MULTIMON_STUBS</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// build defines that replace the regular APIs with our versions</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GetSystemMetrics    xGetSystemMetrics</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MonitorFromWindow   xMonitorFromWindow</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MonitorFromRect     xMonitorFromRect</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MonitorFromPoint    xMonitorFromPoint</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GetMonitorInfo      xGetMonitorInfo</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EnumDisplayMonitors xEnumDisplayMonitors</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EnumDisplayDevices  xEnumDisplayDevices</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span>  <span class="comment">// __cplusplus</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> endregion</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>才得以编译通过，在文首给出的链接中，我已经更改这个头文件，也保留了源文件，更改文件名为<code>multimon-bak.h</code>。<br>PS:这个头文件是VS编译器的头文件，我给弄到MinGW里面来了。<br>汉化的事情只能往后再拖一拖了，没想到一个编译就把我给卡住了。</p>
<blockquote class="blockquote-center">
            <p>生命重在折腾</p>

          </blockquote>]]></content>
  </entry>
  <entry>
    <title>一个超乎预料的程序</title>
    <url>/2016/12/31/such-a-program/</url>
    <content><![CDATA[<p>写着写着，发现有点超乎想象，没想到写那么长时间</p>
<a id="more"></a>
<h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">没想到会用那么长时间，果然是说得容易，做得难。</span></span><br><span class="line"><span class="comment">思路是分别提取每个单项式的系数(系数可以确定改单项式的符号)、指数</span></span><br><span class="line"><span class="comment">标准的单项式由以下部分组成</span></span><br><span class="line"><span class="comment">[符号-/+][系数][x^][指数]</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">当指数为0时  显示为(看起来是)</span></span><br><span class="line"><span class="comment">n</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">当系数为±1且指数为1时   显示为</span></span><br><span class="line"><span class="comment">x</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">当系数不为±1且指数为1时  显示为</span></span><br><span class="line"><span class="comment">nx</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">其他的为标准形式的单项式</span></span><br><span class="line"><span class="comment">±nx^a</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//分别定义解决程序所需的七个功能的函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Addition</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Soustraction</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Multiplication</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Division</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Euclid</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Factorization</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//这个结构体，用来存储提取后的系数、指数和符号</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Array_poly</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> coefficient;<span class="comment">//系数</span></span><br><span class="line">    <span class="keyword">int</span> index;<span class="comment">//指数</span></span><br><span class="line">    <span class="keyword">char</span> symbol;<span class="comment">//符号</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//show_info用来显示屏幕的提示信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_info</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; + : Addition\n - : Soustraction\n * : Multiplication\n / : Division\n d : Derivation\n e : Euclid\n f : Factorization\n q : Quit\ncmd&gt; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//freopen(&quot;data.txt&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line">    <span class="keyword">char</span> str;</span><br><span class="line">    show_info();</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;str)!=EOF)<span class="comment">//读入用户所选 &#x27;+&#x27;/-/*......</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span>(str)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;+&#x27;</span> : Addition(); <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">//case &#x27;-&#x27; : Soustraction(); break;</span></span><br><span class="line">            <span class="comment">//case &#x27;*&#x27; : Multiplication(); break;</span></span><br><span class="line">            <span class="comment">//case &#x27;/&#x27; : Division(); break;</span></span><br><span class="line">            <span class="comment">//case &#x27;d&#x27; : Derivation(); break;</span></span><br><span class="line">            <span class="comment">//case &#x27;e&#x27; : Euclid(); break;</span></span><br><span class="line">            <span class="comment">//case &#x27;f&#x27; : Euclid; break;</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;q&#x27;</span> : <span class="keyword">return</span> <span class="number">0</span>; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span> : <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        show_info();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nBoom\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//执行将两个多项式加起来的选项。</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Addition</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> p1x[<span class="number">100</span>]=&#123;<span class="number">0</span>&#125;,p2x[<span class="number">100</span>]=&#123;<span class="number">0</span>&#125;;<span class="comment">//用于存储p1(x)和p2(x)两个字符串</span></span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>,tmp=<span class="number">0</span>,flag=<span class="number">0</span>,k=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">//int coefficient;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Array_poly</span> <span class="title">ans</span>[20]=&#123;</span>&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;&#125;,ans2[<span class="number">20</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;&#125;;<span class="comment">//用于存储提取出来的系数、指数、符号;</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;p1(x) = &quot;</span>);<span class="comment">//提示信息</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,p1x);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;p2(x) = &quot;</span>);<span class="comment">//提示信息</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,p2x);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(p1x[i])<span class="comment">//用于提取p1(x)字符串的指数、系数、符号</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">0</span>&amp;&amp;p1x[i]==<span class="string">&#x27;-&#x27;</span>)<span class="comment">//若第一个字符为&#x27;-&#x27;，则将ans(结构体)的第0个位置的符号记为&#x27;-&#x27;</span></span><br><span class="line">            ans[i++].symbol=<span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">0</span>&amp;&amp;(p1x[i]&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;p1x[i]&lt;=<span class="string">&#x27;9&#x27;</span>))<span class="comment">//若第一个字符是一个数组，则将ans(结构体)的第0个位置的符号记为&#x27;+&#x27;，实际上，这里也留了一个bug，如果第一个字符为&#x27;+&#x27;(不标准输入)</span></span><br><span class="line">            ans[i].symbol=<span class="string">&#x27;+&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span>(p1x[i]==<span class="string">&#x27;x&#x27;</span>&amp;&amp;p1x[i+<span class="number">1</span>]!=<span class="string">&#x27;^&#x27;</span>)<span class="comment">//用于处理指数为1的情况</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(tmp==<span class="number">0</span>)</span><br><span class="line">                tmp=<span class="number">1</span>;</span><br><span class="line">            <span class="comment">//ans[j].symbol=p1x[i-1];</span></span><br><span class="line">            <span class="keyword">if</span>(ans[j].symbol==<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ans[j].coefficient=<span class="number">0</span>-tmp;</span><br><span class="line">                ans[j++].index=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ans[j].coefficient=tmp;</span><br><span class="line">                ans[j++].index=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            i++;</span><br><span class="line">            tmp=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(p1x[i]==<span class="string">&#x27;x&#x27;</span>)<span class="comment">//指数不为1的情况</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(tmp==<span class="number">0</span>)</span><br><span class="line">                tmp=<span class="number">1</span>;</span><br><span class="line">            ans[j].coefficient=tmp;</span><br><span class="line">            tmp=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(ans[j].symbol==<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">                ans[j].coefficient=<span class="number">0</span>-ans[j].coefficient;</span><br><span class="line">            i++;</span><br><span class="line">            flag=<span class="number">1</span>;<span class="comment">//标记，这个比较重要，标记这个单项式是标准单项式</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(p1x[i]&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;p1x[i]&lt;=<span class="string">&#x27;9&#x27;</span>)<span class="comment">//用于提取系数或者指数，并存储在临时的变量tmp中</span></span><br><span class="line">        &#123;</span><br><span class="line">            tmp=tmp*<span class="number">10</span>+p1x[i]<span class="number">-48</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="number">0</span>&amp;&amp;(p1x[i+<span class="number">1</span>]==<span class="number">0</span>||p1x[i+<span class="number">1</span>]==<span class="string">&#x27;+&#x27;</span>||p1x[i+<span class="number">1</span>]==<span class="string">&#x27;-&#x27;</span>)&amp;&amp;p1x[i]&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;p1x[i]&lt;=<span class="string">&#x27;9&#x27;</span>)<span class="comment">//当单项式不标准，也就是，单项式为一个纯数字的情况</span></span><br><span class="line">        &#123;</span><br><span class="line">            ans[j].coefficient=tmp;</span><br><span class="line">            ans[j].index=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(ans[j].symbol==<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">                ans[j].coefficient=<span class="number">0</span>-ans[j].coefficient;</span><br><span class="line">            <span class="comment">//ans[++j].symbol=p1x[i];</span></span><br><span class="line">            i++;</span><br><span class="line">            tmp=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(p1x[i]==<span class="string">&#x27;+&#x27;</span>||p1x[i]==<span class="string">&#x27;-&#x27;</span>)<span class="comment">//遇到一个±号的时候，这个时候这个单项式已经读取 完毕</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(p1x[i<span class="number">-1</span>]==<span class="string">&#x27;x&#x27;</span>)<span class="comment">//如果这个±前面是一个&#x27;x&#x27;，那么改单项式为指数为1的单项式。</span></span><br><span class="line">            &#123;</span><br><span class="line">                ans[j].symbol=p1x[i];</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="comment">//如果是标准单项式，则存储该单项式的符号和指数</span></span><br><span class="line">            &#123;</span><br><span class="line">                ans[j].index=tmp;</span><br><span class="line">                ans[++j].symbol=p1x[i];<span class="comment">//这个++j好好斟酌一下</span></span><br><span class="line">            &#125;</span><br><span class="line">            flag=<span class="number">0</span>;<span class="comment">//将flag清零，表示这个单项式已经存储完毕</span></span><br><span class="line">            tmp=<span class="number">0</span>;<span class="comment">//用于存储系数或者指数的tmp清零</span></span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    j++;</span><br><span class="line">    i=flag=tmp=<span class="number">0</span>;<span class="comment">//同样是清零，防止影响p2(x)的提取</span></span><br><span class="line">    <span class="keyword">while</span>(p2x[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">0</span>&amp;&amp;p2x[i]==<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ans[j].symbol=<span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">0</span>&amp;&amp;(p2x[i]&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;p2x[i]&lt;=<span class="string">&#x27;9&#x27;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            ans[j].symbol=<span class="string">&#x27;+&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(p2x[i]==<span class="string">&#x27;x&#x27;</span>&amp;&amp;p2x[i+<span class="number">1</span>]!=<span class="string">&#x27;^&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(tmp==<span class="number">0</span>)</span><br><span class="line">                tmp=<span class="number">1</span>;</span><br><span class="line">            <span class="comment">//ans[j].symbol=p1x[i-1];</span></span><br><span class="line">            <span class="keyword">if</span>(ans[j].symbol==<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ans[j].coefficient=<span class="number">0</span>-tmp;</span><br><span class="line">                ans[j++].index=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ans[j].coefficient=tmp;</span><br><span class="line">                ans[j++].index=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            i++;</span><br><span class="line">            tmp=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(p2x[i]==<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(tmp==<span class="number">0</span>)</span><br><span class="line">                tmp=<span class="number">1</span>;</span><br><span class="line">            ans[j].coefficient=tmp;</span><br><span class="line">            tmp=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(ans[j].symbol==<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">                ans[j].coefficient=<span class="number">0</span>-ans[j].coefficient;</span><br><span class="line">            i++;</span><br><span class="line">            flag=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(p2x[i]&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;p2x[i]&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            tmp=tmp*<span class="number">10</span>+p2x[i]<span class="number">-48</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="number">0</span>&amp;&amp;(p2x[i+<span class="number">1</span>]==<span class="number">0</span>||p2x[i+<span class="number">1</span>]==<span class="string">&#x27;+&#x27;</span>||p2x[i+<span class="number">1</span>]==<span class="string">&#x27;-&#x27;</span>)&amp;&amp;(p2x[i]&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;p2x[i]&lt;=<span class="string">&#x27;9&#x27;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            ans[j].coefficient=tmp;</span><br><span class="line">            ans[j].index=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(ans[j].symbol==<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">                ans[j].coefficient=<span class="number">0</span>-ans[j].coefficient;</span><br><span class="line">            <span class="comment">//ans[++j].symbol=p2x[i];</span></span><br><span class="line">            i++;</span><br><span class="line">            tmp=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(p2x[i]==<span class="string">&#x27;+&#x27;</span>||p2x[i]==<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(p2x[i<span class="number">-1</span>]==<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ans[j].symbol=p2x[i];</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ans[j].index=tmp;</span><br><span class="line">                ans[++j].symbol=p2x[i];</span><br><span class="line">            &#125;</span><br><span class="line">            flag=<span class="number">0</span>;</span><br><span class="line">            tmp=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//j++;</span></span><br><span class="line">    flag=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(flag) <span class="comment">//此时已经将p1(x)和p2(x)的系数、指数、符号都存储于ans中了，现在将他们按照指数的大小，从小到大排序，算法为冒泡。</span></span><br><span class="line">    &#123;</span><br><span class="line">        flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=j;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(ans[i].index&lt;ans[i<span class="number">-1</span>].index)</span><br><span class="line">            &#123;</span><br><span class="line">                flag=ans[i].index;<span class="comment">//嗯，这里把flag当作一个过渡变量来用了(其实我只是懒得多定义一个过渡变量)</span></span><br><span class="line">                ans[i].index=ans[i<span class="number">-1</span>].index;</span><br><span class="line">                ans[i<span class="number">-1</span>].index=flag;</span><br><span class="line">                flag=ans[i].coefficient;</span><br><span class="line">                ans[i].coefficient=ans[i<span class="number">-1</span>].coefficient;</span><br><span class="line">                ans[i<span class="number">-1</span>].coefficient=flag;</span><br><span class="line">                flag=ans[i].symbol;</span><br><span class="line">                ans[i].symbol=ans[i<span class="number">-1</span>].symbol;</span><br><span class="line">                ans[i<span class="number">-1</span>].symbol=flag;</span><br><span class="line">                flag=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//将同类项合并，并存储到ans2中</span></span><br><span class="line">    ans2[<span class="number">0</span>].coefficient=ans[<span class="number">0</span>].coefficient;</span><br><span class="line">    ans2[<span class="number">0</span>].index=ans[<span class="number">0</span>].index;</span><br><span class="line">    ans2[<span class="number">0</span>].symbol=ans[<span class="number">0</span>].symbol;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=j;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(ans[i].index==ans2[k].index)</span><br><span class="line">        &#123;</span><br><span class="line">            ans2[k].coefficient+=ans[i].coefficient;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            ans2[++k].coefficient=ans[i].coefficient;</span><br><span class="line">            ans2[k].index=ans[i].index;</span><br><span class="line">            ans2[k].symbol=ans[i].symbol;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;p1(x) + p2(x) = &quot;</span>);<span class="comment">//准备输出啦</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=k;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(ans2[i].coefficient==<span class="number">0</span>)<span class="comment">//若系数为零，则直接进行下一个循环</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(ans2[i].coefficient==<span class="number">1</span>)<span class="comment">//系数为1的情况</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(tmp)<span class="comment">//系数是正数，且不是第一次输出的话，需要输出一个&#x27;+&#x27;号，因为正数输出，不带符号</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(ans2[i].index!=<span class="number">0</span>)<span class="comment">//若系数为1且指数不为0，则输出x^ans[i].index</span></span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;+x^%d&quot;</span>,ans2[i].index);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;+1&quot;</span>);<span class="comment">//若系数为1且指数为0，则输出1</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span><span class="comment">//系数是正数，且是第一次输出的话，标记一下tmp，表示已经输出过了，第一次输出如果为正数，是不需要输出&#x27;+&#x27;的</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(ans2[i].index!=<span class="number">0</span>)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;x^%d&quot;</span>,ans2[i].index);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">                tmp=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ans2[i].coefficient&gt;<span class="number">0</span>)<span class="comment">//系数不为0、不为1，且大于0的时候</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(tmp)<span class="comment">//系数是正数，且不是第一次输出的话，需要输出一个&#x27;+&#x27;号，因为正数输出，不带符号&#x27;+&#x27;</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(ans2[i].index!=<span class="number">0</span>)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;+%dx^%d&quot;</span>,ans2[i].coefficient,ans2[i].index);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;+%d&quot;</span>,ans2[i].coefficient);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">else</span><span class="comment">//系数是正数，且是第一次输出的话，标记一下tmp，表示已经输出过了，第一次输出如果为正数，是不需要输出&#x27;+&#x27;的</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(ans2[i].index!=<span class="number">0</span>)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%dx^%d&quot;</span>,ans2[i].coefficient,ans2[i].index);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,ans2[i].coefficient);</span><br><span class="line">                tmp=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span><span class="comment">//系数小于0的情况，直接输出就好了，因为负数自己带着&#x27;-&#x27;号</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%dx^%d&quot;</span>,ans2[i].coefficient,ans2[i].index);</span><br><span class="line">            tmp=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="运行示例"><a href="#运行示例" class="headerlink" title="运行示例"></a>运行示例</h2><img src="/2016/12/31/such-a-program/1.jpg" class="" title="仅含数字的情况">
<img src="/2016/12/31/such-a-program/2.jpg" class="" title="含数字、指数为1">
<img src="/2016/12/31/such-a-program/3.jpg" class="" title="含数字、指数为1">

<h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><h3 id="从字符串中提取系数、指数、符号"><a href="#从字符串中提取系数、指数、符号" class="headerlink" title="从字符串中提取系数、指数、符号"></a>从字符串中提取系数、指数、符号</h3><p>思路是这样的：<br>对于正常的单项式<code>[±][n]x^[a]</code>(a为整数，n为正整数),遇到字符“x”的时候，表示它前面的数字是系数，遇到字符“±”时，表示它前面的数字是指数。<br>系数或者指数用这样的办法来提取</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">i=tmp=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(str[i]&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;str[i]&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">    tmp=tmp*<span class="number">10</span>+str[i]<span class="number">-48</span>;<span class="comment">//减去48的原因是我们将多项式当作字符串读入，要将字符&#x27;0&#x27;或者&#x27;1&#x27;之类的转化成相对应的整数，得减去48之后赋值给一个int类型的变量。</span></span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这样，我们就拿到系数或者指数了<br>当遇到一个x的时候，需要将拿到的系数tmp给保存起来，那就这样做</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(str[i]==<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">    &#123;</span><br><span class="line">            <span class="keyword">if</span>(tmp==<span class="number">0</span>)<span class="comment">//若tmp为0，表示x前面是一个“±”号，也就是系数为1的情况，那么tmp是不会变成1的，所以这里判断之后，将tmp变成1</span></span><br><span class="line">                tmp=<span class="number">1</span>;</span><br><span class="line">            ans[j].coefficient=tmp;<span class="comment">//将tmp存储</span></span><br><span class="line">            tmp=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(ans[j].symbol==<span class="string">&#x27;-&#x27;</span>)<span class="comment">//若这个单项式的符号为“-”，那么就将存储好的系数变成负数</span></span><br><span class="line">                ans[j].coefficient=<span class="number">0</span>-ans[j].coefficient;</span><br><span class="line">            i++;</span><br><span class="line">            flag=<span class="number">1</span>;<span class="comment">//标记，这个比较重要，标记这个单项式是有指数的单项式，也就是说，标记一下这个单项式不是纯数字</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>当遇到一个“±”号的时候，需要将拿到的指数tmp保存，这样做</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(p1x[i]==<span class="string">&#x27;+&#x27;</span>||p1x[i]==<span class="string">&#x27;-&#x27;</span>)<span class="comment">//遇到一个±号的时候，这个时候这个单项式已经读取 完毕</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(p1x[i<span class="number">-1</span>]==<span class="string">&#x27;x&#x27;</span>)<span class="comment">//如果这个±前面是一个&#x27;x&#x27;，那么该单项式为指数为1的单项式。</span></span><br><span class="line">    &#123;</span><br><span class="line">        ans[j].symbol=p1x[i];</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="comment">//如果是标准单项式，则存储该单项式的符号和指数</span></span><br><span class="line">    &#123;</span><br><span class="line">        ans[j].index=tmp;</span><br><span class="line">        ans[++j].symbol=p1x[i];<span class="comment">//将j加一个1，准备存储下一个系数、指数、符号</span></span><br><span class="line">    &#125;</span><br><span class="line">    flag=<span class="number">0</span>;<span class="comment">//将flag清零，表示这个单项式已经存储完毕</span></span><br><span class="line">    tmp=<span class="number">0</span>;<span class="comment">//用于存储系数或者指数的tmp清零</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>对于指数为1的情况，特殊对待一下</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(p1x[i]==<span class="string">&#x27;x&#x27;</span>&amp;&amp;p1x[i+<span class="number">1</span>]!=<span class="string">&#x27;^&#x27;</span>)<span class="comment">//用于处理指数为1的情况，也就是，遇到一个“x”，但是它后面不是“^”的情况</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(tmp==<span class="number">0</span>)</span><br><span class="line">        tmp=<span class="number">1</span>;</span><br><span class="line">    <span class="comment">//ans[j].symbol=p1x[i-1];</span></span><br><span class="line">    <span class="keyword">if</span>(ans[j].symbol==<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ans[j].coefficient=<span class="number">0</span>-tmp;</span><br><span class="line">        ans[j++].index=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        ans[j].coefficient=tmp;</span><br><span class="line">        ans[j++].index=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    i++;</span><br><span class="line">    tmp=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>对于单项式为纯数字的情况</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(flag==<span class="number">0</span>&amp;&amp;(p1x[i+<span class="number">1</span>]==<span class="number">0</span>||p1x[i+<span class="number">1</span>]==<span class="string">&#x27;+&#x27;</span>||p1x[i+<span class="number">1</span>]==<span class="string">&#x27;-&#x27;</span>)&amp;&amp;p1x[i]&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;p1x[i]&lt;=<span class="string">&#x27;9&#x27;</span>)<span class="comment">//当单项式不标准，也就是，单项式为一个纯数字的情况</span></span><br><span class="line"><span class="comment">//若flag为0，且当前字符是一个数字，且这个字符后面是“±”号或者字符串末尾，则这个单项式是纯数字</span></span><br><span class="line">&#123;</span><br><span class="line">    ans[j].coefficient=tmp;</span><br><span class="line">    ans[j].index=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(ans[j].symbol==<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">        ans[j].coefficient=<span class="number">0</span>-ans[j].coefficient;</span><br><span class="line">    <span class="comment">//ans[++j].symbol=p1x[i];</span></span><br><span class="line">    i++;</span><br><span class="line">    tmp=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="合并同类项"><a href="#合并同类项" class="headerlink" title="合并同类项"></a>合并同类项</h3><p>经过一番奋战，我们终于拿到了两个字符串的系数、指数、符号了，并且把他们都存储在了ans中，合并同类项之前，先把他们按照系数，从小到大排序</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(flag) <span class="comment">//此时已经将p1(x)和p2(x)的系数、指数、符号都存储于ans中了，现在将他们按照指数的大小，从小到大排序，算法为冒泡。</span></span><br><span class="line">&#123;</span><br><span class="line">    flag=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=j;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(ans[i].index&lt;ans[i<span class="number">-1</span>].index)</span><br><span class="line">        &#123;</span><br><span class="line">            flag=ans[i].index;<span class="comment">//嗯，这里把flag当作一个过渡变量来用了(其实我只是懒得多定义一个过渡变量)</span></span><br><span class="line">            ans[i].index=ans[i<span class="number">-1</span>].index;</span><br><span class="line">            ans[i<span class="number">-1</span>].index=flag;</span><br><span class="line">            flag=ans[i].coefficient;</span><br><span class="line">            ans[i].coefficient=ans[i<span class="number">-1</span>].coefficient;</span><br><span class="line">            ans[i<span class="number">-1</span>].coefficient=flag;</span><br><span class="line">            flag=ans[i].symbol;</span><br><span class="line">            ans[i].symbol=ans[i<span class="number">-1</span>].symbol;</span><br><span class="line">            ans[i<span class="number">-1</span>].symbol=flag;</span><br><span class="line">            flag=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后合并同类项(我将合并后的多项式存储到ans2中)</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">ans2[<span class="number">0</span>].coefficient=ans[<span class="number">0</span>].coefficient;</span><br><span class="line">ans2[<span class="number">0</span>].index=ans[<span class="number">0</span>].index;</span><br><span class="line">ans2[<span class="number">0</span>].symbol=ans[<span class="number">0</span>].symbol;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=j;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(ans[i].index==ans2[k].index)</span><br><span class="line">    &#123;</span><br><span class="line">        ans2[k].coefficient+=ans[i].coefficient;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        ans2[++k].coefficient=ans[i].coefficient;</span><br><span class="line">        ans2[k].index=ans[i].index;</span><br><span class="line">        ans2[k].symbol=ans[i].symbol;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;p1(x) + p2(x) = &quot;</span>);<span class="comment">//准备输出啦</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=k;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(ans2[i].coefficient==<span class="number">0</span>)<span class="comment">//若系数为零，则直接进行下一个循环</span></span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    <span class="keyword">if</span>(ans2[i].coefficient==<span class="number">1</span>)<span class="comment">//系数为1的情况</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(tmp)<span class="comment">//系数是正数，且不是第一次输出的话，需要输出一个&#x27;+&#x27;号，因为正数输出，不带符号</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(ans2[i].index!=<span class="number">0</span>)<span class="comment">//若系数为1且指数不为0，则输出x^ans2[i].index</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;+x^%d&quot;</span>,ans2[i].index);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;+1&quot;</span>);<span class="comment">//若系数为1且指数为0，则输出1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span><span class="comment">//系数是正数，且是第一次输出的话，标记一下tmp，表示已经输出过了，第一次输出如果为正数，是不需要输出&#x27;+&#x27;的</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(ans2[i].index!=<span class="number">0</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;x^%d&quot;</span>,ans2[i].index);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">            tmp=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ans2[i].coefficient&gt;<span class="number">0</span>)<span class="comment">//系数不为0、不为1，且大于0的时候</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(tmp)<span class="comment">//系数是正数，且不是第一次输出的话，需要输出一个&#x27;+&#x27;号，因为正数输出，不带符号&#x27;+&#x27;</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(ans2[i].index!=<span class="number">0</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;+%dx^%d&quot;</span>,ans2[i].coefficient,ans2[i].index);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;+%d&quot;</span>,ans2[i].coefficient);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span><span class="comment">//系数是正数，且是第一次输出的话，标记一下tmp，表示已经输出过了，第一次输出如果为正数，是不需要输出&#x27;+&#x27;的</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(ans2[i].index!=<span class="number">0</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%dx^%d&quot;</span>,ans2[i].coefficient,ans2[i].index);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,ans2[i].coefficient);</span><br><span class="line">            tmp=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span><span class="comment">//系数小于0的情况，直接输出就好了，因为负数自己带着&#x27;-&#x27;号</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%dx^%d&quot;</span>,ans2[i].coefficient,ans2[i].index);</span><br><span class="line">        tmp=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote class="blockquote-center">
            <p>生命重在折腾 </p>

          </blockquote>]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>我的世界合成表</title>
    <url>/2017/02/01/Minecraft-synthetic-lists/</url>
    <content><![CDATA[<img src="/2017/02/01/Minecraft-synthetic-lists/mc.jpg" class="">
<a id="more"></a>
<h1 id="基本合成"><a href="#基本合成" class="headerlink" title="基本合成"></a>基本合成</h1><table>
<thead>
<tr>
<th><strong>名称</strong></th>
<th><strong>材料</strong></th>
<th><strong>合成示意图</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>木板Wooden Planks</td>
<td>原木Wood</td>
<td><a href="112931J17-0.png"><img src="112931J17-0.png" alt="Craft Wooden Planks"></a></td>
<td>木板是最基本的材料，1个原木可以得到4个木板，所得到的的木板是我们游戏中重要的建造材料，并且木头可以用模板烧制成木炭！</td>
</tr>
<tr>
<td>木棍Sticks</td>
<td>木板Wooden Planks</td>
<td><a href="1129314U7-1.png"><img src="1129314U7-1.png" alt="Craft Sticks"></a></td>
<td>木棍用来合成火把,弓箭,栅栏,木牌,工具和武器。是游戏中另外一个基础的材料物品，游戏中消耗非常大，建议多做几组备用！</td>
</tr>
<tr>
<td>火把Torches</td>
<td>煤碳和木棍Coal &amp; Stick</td>
<td><a href="1129312I0-2.png"><img src="1129312I0-2.png" alt="Craft Torches"></a></td>
<td>提供照明,避免刷怪,融化雪和冰块。火把在夜晚照明以及挖矿的时候都非常的有用，还可以防止刷怪！在火把旁边的冰块雪块，可以很快的融化掉！注意，在亮度小于7的地方就会刷怪！</td>
</tr>
<tr>
<td>工作台Crafting Table</td>
<td>木板Wooden Planks</td>
<td><a href="1129312V0-3.png"><img src="1129312V0-3.png" alt="img"></a></td>
<td>工作台可以为我们提供一个3X3的物品合成区域，比直接按E建出现的2X2区域多了很多，，游戏中所有高级的物品都需要在工作台上合成！</td>
</tr>
<tr>
<td>熔炉Furnace</td>
<td>圆石Cobblestone</td>
<td><a href="112931JS-4.png"><img src="112931JS-4.png" alt="Craft Furnace"></a></td>
<td>由8个圆石围一圈得来，主要用来烧制烧制物品。各种生肉烧之后可以得到熟肉，各种矿石烧制之后可以得到相应的矿物！和工作台一样是必不可少的工具！</td>
</tr>
<tr>
<td>箱子Chest</td>
<td>木板Wooden Planks</td>
<td><a href="1129314062-5.png"><img src="1129314062-5.png" alt="Craft Chest"></a></td>
<td>用于存放物品、迷路时暂存身上物品,两个箱子并排放可以增加存放空间.可以多做一些以免东西溢出！</td>
</tr>
<tr>
<td>梯子Ladders</td>
<td>木棍Sticks</td>
<td><a href="1129312103-6.png"><img src="1129312103-6.png" alt="Craft Ladders"></a></td>
<td>用来爬墙. 注：在挖矿开始就铺上梯子，即使在很深的矿道里面也可以回到地面！在梯子上按住SHIFT就可以在一点不动了！</td>
</tr>
<tr>
<td>栅栏Fence</td>
<td>木棍Sticks</td>
<td><a href="1129312001-7.png"><img src="1129312001-7.png" alt="img"></a></td>
<td>用于围地、圈地 注：不跨越栅栏,别墅内的隔栏(装饰品)、防止跌落。可以制作出养鸡场、养牛场之类的农场，也可以在自己家周围围一圈，防止怪物靠近。栅栏是跳不过去的！</td>
</tr>
<tr>
<td>船Boat</td>
<td>木板Wooden Planks</td>
<td><a href="1129314414-8.png"><img src="1129314414-8.png" alt="img"></a></td>
<td>在水中行驶。注：船当然就是在水里面行驶啦，速度很快的哦，需要注意的是船在水中航行不要碰到水中的章鱼，否则就会被破坏掉，另外如果撞到其他物体，也会粉碎，船被破坏之后会掉落木板和木棍！</td>
</tr>
<tr>
<td>木质台阶Wooden Slabs</td>
<td>木板Wooden Planks</td>
<td><a href="1129311140-9.gif"><img src="1129311140-9.gif" alt="img"></a></td>
<td>用于建造台阶、屋檐、窗台等.是一个非常不错的装饰用具！也就是我们常说的半砖，有上半砖和下半砖的铺发区别，如果上半砖和下半砖叠加起来就是一个完整的方块模板了</td>
</tr>
<tr>
<td>石质台阶Stone Slabs</td>
<td>石头,砖,石砖,砂石,圆石,地狱砖,石英Stone or Brick or Stone Brick or Sandstone or Cobblestone or Nether Brick or Quartz</td>
<td><a href="11293155K-10.gif"><img src="11293155K-10.gif" alt="img"></a></td>
<td>用于建造台阶、屋檐、窗台等.也可以改造刷怪笼、刷怪塔。注：同木质台阶作用一样，只不过是这个是石头做的哦！详情见上面</td>
</tr>
<tr>
<td>告示牌Sign</td>
<td>木板和木棍Wooden Planks &amp; Stick</td>
<td><a href="1129313V6-11.png"><img src="1129313V6-11.png" alt="img"></a></td>
<td>门牌、路标、告示牌、贴在楼梯两侧可组成沙发. 注：你可以在木牌上面写字哦！纯净版只能打英文，需要下载中文输入补丁才能打中文！在服务器中用木牌可以设置私有物品，不会被其他玩家破坏</td>
</tr>
<tr>
<td>门Doors</td>
<td>木板或者铁锭Wooden Planks or Iron Ingots</td>
<td><a href="1129316194-12.gif"><img src="1129316194-12.gif" alt="img"></a></td>
<td>木门能够用手打开或者红石系统打开. 铁门需要激活才能打开.注：在困难模式下，僵尸会将木门破坏，从而破门而入！</td>
</tr>
</tbody></table>
<hr>
<h1 id="方块合成"><a href="#方块合成" class="headerlink" title="方块合成"></a>方块合成</h1><p>　　</p>
<table>
<thead>
<tr>
<th><strong>名称</strong></th>
<th><strong>材料</strong></th>
<th><strong>合成示意图</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>萤石块Glowstone</td>
<td>萤石粉Glowstone Dust</td>
<td><a href="1129314a9-13.png"><img src="1129314a9-13.png" alt="img"></a></td>
<td>能够用于水下照明.注：萤石可以放在喷泉顶上，到了夜晚喷泉就会散发一些光芒！可以替代火把的一种照明工具，常用于室内装潢！</td>
</tr>
<tr>
<td>雪块Snow Block</td>
<td>雪球Snowballs</td>
<td><a href="1129311639-14.png"><img src="1129311639-14.png" alt="Craft Snow Block"></a></td>
<td>建筑材料.注：雪块可以用来制作雪傀儡！雪傀儡可以保卫我们的家园，还可以无限刷雪</td>
</tr>
<tr>
<td>TNT</td>
<td>火药和沙子Gunpowder &amp; Sand</td>
<td><a href="1129315202-15.png"><img src="1129315202-15.png" alt="Craft TNT"></a></td>
<td>爆炸物. 注：在创造模式下，TNT放置不宜很多，因为如果机器不好，会很卡。TNT也是熊孩子毁服常用的工具。游戏中沙漠神殿会有9个TNT！</td>
</tr>
<tr>
<td>粘土块Clay Block</td>
<td>粘土Clay</td>
<td><a href="112931A91-16.png"><img src="112931A91-16.png" alt="Craft Clay"></a></td>
<td>建筑材料.用于装饰</td>
</tr>
<tr>
<td>砖块Brick Block</td>
<td>红砖Clay Bricks</td>
<td><a href="112931E46-17.png"><img src="112931E46-17.png" alt="Craft Brickblock"></a></td>
<td>坚硬的建筑材料.用于装饰，建筑党必备装饰材料</td>
</tr>
<tr>
<td>书架Bookshelf</td>
<td>木板和书本Wooden Planks &amp; Books</td>
<td><a href="11293153F-18.png"><img src="11293153F-18.png" alt="Craft Bookshelf"></a></td>
<td>装饰和附魔. 注：附魔出来的效果是随机的，如果你的RP不好，很可能附魔很多次才能附魔出你想要的东西</td>
</tr>
<tr>
<td>沙石Sandstone Block</td>
<td>沙子Sand</td>
<td><a href="1129312396-19.png"><img src="1129312396-19.png" alt="img"></a></td>
<td>建筑材料.用于装饰，可在熔炉中烧制成玻璃！</td>
</tr>
<tr>
<td>平滑沙石Smooth Sandstone</td>
<td>沙石Sandstone Block</td>
<td><a href="1129311145-20.png"><img src="1129311145-20.png" alt="img"></a></td>
<td>建筑材料.用于装饰用</td>
</tr>
<tr>
<td>錾制Decorative Sandstone</td>
<td>沙质台阶Sandstone Slabs</td>
<td><a href="1129314V4-21.png"><img src="1129314V4-21.png" alt="img"></a></td>
<td>建筑材料.用于装饰用，属于半砖的一种</td>
</tr>
<tr>
<td>音符盒Note Block</td>
<td>木板和红石Wooden Planks &amp; Redstone</td>
<td><a href="112931JV-22.png"><img src="112931JV-22.png" alt="img"></a></td>
<td>当点击时发出音符.注：可以发出很多美妙的音乐哦，你一定会喜欢的！放在不同的地面会发出不同的声音</td>
</tr>
<tr>
<td>南瓜灯Jack-O Lantern</td>
<td>南瓜和火把Pumpkin &amp; Torch</td>
<td><a href="112931O16-23.png"><img src="112931O16-23.png" alt="Craft Jacko"></a></td>
<td>光源. 注：在晚上看起来会非常的漂亮。也是制作万圣节地图必备的物品之一哦！漂亮的南瓜灯也是室内装修必备物品！</td>
</tr>
<tr>
<td>青金石块Lapis Lazuli Block</td>
<td>青金石染料Lapis Lazuli Dye</td>
<td><a href="1129315913-24.png"><img src="1129315913-24.png" alt="Lapiz Lazuli Block"></a></td>
<td>存储青金石染料. 注：可以用染料将羊毛染色</td>
</tr>
<tr>
<td>钻石块Diamond Block</td>
<td>钻石Diamonds</td>
<td><a href="1129315I0-25.jpg"><img src="1129315I0-25.jpg" alt="Craft Diamond Block"></a></td>
<td>存储钻石. 注：主要为了节省空间</td>
</tr>
<tr>
<td>金块Gold Block</td>
<td>金锭Gold Ingots</td>
<td><a href="1129313F7-26.jpg"><img src="1129313F7-26.jpg" alt="Craft Gold Block"></a></td>
<td>存储金锭.注：主要为了节省空间</td>
</tr>
<tr>
<td>铁块Iron Block</td>
<td>铁锭Iron Ingots</td>
<td><a href="112931L22-27.jpg"><img src="112931L22-27.jpg" alt="Craft IronBlock"></a></td>
<td>存储铁锭.注：主要为了节省空间</td>
</tr>
<tr>
<td>绿宝石块Emerald Block</td>
<td>绿宝石Emeralds</td>
<td><a href="112931GD-28.png"><img src="112931GD-28.png" alt="img"></a></td>
<td>存储绿宝石.注：主要为了节省空间，也可做信标底座！</td>
</tr>
<tr>
<td>石砖Stone Brick</td>
<td>石头Stone</td>
<td><a href="1129312O4-29.png"><img src="1129312O4-29.png" alt="img"></a></td>
<td>建筑材料. 注：用于室外的装潢</td>
</tr>
<tr>
<td>木质楼梯Wooden Stairs</td>
<td>木板Wooden Planks</td>
<td><a href="112931C22-30.gif"><img src="112931C22-30.gif" alt="img"></a></td>
<td>做楼梯.注：用于室外和室内的装潢，也可用于矿道</td>
</tr>
<tr>
<td>石质楼梯Stone Stairs</td>
<td>圆石,沙,砖石,石砖,地狱砖,石英Cobblestone or Sandstone or Brick or Stone Brick or Nether Brick or Quartz</td>
<td><a href="11293164H-31.gif"><img src="11293164H-31.gif" alt="img"></a></td>
<td>做楼梯.注：用于室外和室内的装潢，也可用于矿道</td>
</tr>
<tr>
<td>圆石墙Cobblestone Wall</td>
<td>圆石或者苔石Cobblestone or Moss Stone</td>
<td><a href="1129311302-32.gif"><img src="1129311302-32.gif" alt="img"></a></td>
<td>类似于栅栏的作用.注：比栅栏坚固一些，非常好的划分区域工具！</td>
</tr>
<tr>
<td>红石块Block of Redstone</td>
<td>红石Redstone</td>
<td><a href="1129313956-33.png"><img src="1129313956-33.png" alt="img"></a></td>
<td>红石电源.注：在制作红石机器的时候经常使用到哦。</td>
</tr>
<tr>
<td>地狱砖块Nether Brick</td>
<td>地狱砖Nether Brick (Item)</td>
<td><a href="1129312b2-34.png"><img src="1129312b2-34.png" alt="img"></a></td>
<td>建筑材料.注：非常不错的建筑材料哦！</td>
</tr>
<tr>
<td>石英块Block of Quartz</td>
<td>下界石英Nether Quartz</td>
<td><a href="1129312259-35.png"><img src="1129312259-35.png" alt="img"></a></td>
<td>建筑材料.注：游戏中公认最漂亮的建筑材料，有白色大理石的感觉！</td>
</tr>
<tr>
<td>錾制石英块Chiseled Quartz Block</td>
<td>石英台阶Quartz Slabs</td>
<td><a href="1129311432-36.png"><img src="1129311432-36.png" alt="img"></a></td>
<td>建筑材料.注：非常不错的建筑材料哦！</td>
</tr>
<tr>
<td>竖纹石英块Pillar Quartz Block</td>
<td>石英块Block of Quartz</td>
<td><a href="1129313O7-37.png"><img src="1129313O7-37.png" alt="img"></a></td>
<td>建筑材料.注：具有纹理的石英块！</td>
</tr>
</tbody></table>
<hr>
<h1 id="工具合成"><a href="#工具合成" class="headerlink" title="工具合成"></a>工具合成</h1><p>　　</p>
<table>
<thead>
<tr>
<th><strong>Name</strong></th>
<th><strong>Ingredients</strong></th>
<th><strong>Image</strong></th>
<th><strong>Description</strong></th>
</tr>
</thead>
<tbody><tr>
<td>镐Pickaxe</td>
<td>木棍加木板或圆石或铁锭或金锭或钻石Sticks &amp; Wooden Planks or Cobblestone or Iron Ingots or Gold Ingots or Diamonds</td>
<td><a href="11293122P-38.gif"><img src="11293122P-38.gif" alt="img"></a></td>
<td>挖方块和资源.注：石头以及各种矿物是不能用手直接挖掉的，这时候必须使用镐头，根据材料的不同，挖掘的速度也会不一样！金镐头耐久度非常低！</td>
</tr>
<tr>
<td>斧头Axes</td>
<td>木棍加木板或圆石或铁锭或金锭或钻石Sticks &amp; Wooden Planks or Cobblestone or Iron Ingots or Gold Ingots or Diamonds</td>
<td><a href="1129315L6-39.gif"><img src="1129315L6-39.gif" alt="img"></a></td>
<td>比用拳头砍树快. 注：根据材料的不同，砍伐木头的速度也会不一样！钻石是最好的，其次是铁和石头，金一般不推荐制作工具</td>
</tr>
<tr>
<td>锹Shovels</td>
<td>木棍加木板或圆石或铁锭或金锭或钻石Sticks &amp; Wooden Planks or Cobblestone or Iron Ingots or Gold Ingots or Diamonds</td>
<td><a href="1129313D9-40.gif"><img src="1129313D9-40.gif" alt="img"></a></td>
<td>用来挖沙子,沙砾,图,草和雪.注：根据材料的不同，挖掘的速度和耐久也会不一样！</td>
</tr>
<tr>
<td>锄Hoes</td>
<td>木棍加木板或圆石或铁锭或金锭或钻石Sticks &amp; Wooden Planks or Cobblestone or Iron Ingots or Gold Ingots or Diamonds</td>
<td><a href="1129315Z0-41.gif"><img src="1129315Z0-41.gif" alt="img"></a></td>
<td>用来锄地.注：根据材料的不同，可用耐久也会不同！因为耕地不是太多，所以建议一般用石锄就可以了！</td>
</tr>
<tr>
<td>钓鱼竿Fishing Rod</td>
<td>木棍和线Sticks &amp; String</td>
<td><a href="1129315051-42.png"><img src="1129315051-42.png" alt="img"></a></td>
<td>钓鱼.注：用来钓鱼还可以放上胡萝卜骑在猪身上，控制猪的前进方向</td>
</tr>
<tr>
<td>打火石Flint &amp; Steel</td>
<td>铁锭和燧石Iron Ingot &amp; Flint</td>
<td><a href="1129311505-43.png"><img src="1129311505-43.png" alt="img"></a></td>
<td>生火. 注：可以点燃地狱岩以及树木，部分活塞也可以点燃。也可以点燃游戏中的苦力怕，让他直接自爆！</td>
</tr>
<tr>
<td>指南针Compass</td>
<td>铁锭和红石Iron Ingots &amp; Redstone</td>
<td><a href="11293132U-44.png"><img src="11293132U-44.png" alt="img"></a></td>
<td>指向出生点. 注：迷失方向的时候，指南针当然是我们最好的伙伴啦！</td>
</tr>
<tr>
<td>钟Clock</td>
<td>金锭和红石Gold Ingots &amp; Redstone</td>
<td><a href="1129313330-45.png"><img src="1129313330-45.png" alt="img"></a></td>
<td>显示时间和白天黑夜. 注：在地下挖矿不知道地面上是白天还是黑夜吗？这个物品就能帮助到你哦！</td>
</tr>
<tr>
<td>铁桶Bucket</td>
<td>铁锭Iron Ingots</td>
<td><a href="112931D15-46.png"><img src="112931D15-46.png" alt="img"></a></td>
<td>用来装水,岩浆,牛奶.注：桶自然是用来装各种液体的了~装的牛奶可以解除各种负面状态！</td>
</tr>
<tr>
<td>剪刀Shears</td>
<td>铁锭Iron Ingots</td>
<td><a href="1129316022-47.png"><img src="1129316022-47.png" alt="img"></a></td>
<td>用来剪羊毛和树叶.注：当然在水塘里面遇到荷叶还可以剪一些荷叶哦！</td>
</tr>
</tbody></table>
<hr>
<h1 id="防具合成"><a href="#防具合成" class="headerlink" title="防具合成"></a>防具合成</h1><table>
<thead>
<tr>
<th><strong>名称</strong></th>
<th><strong>材料</strong></th>
<th><strong>合成示意图</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>头盔Helmet</td>
<td>皮革或铁锭或金锭或钻石Leather or Iron Ingots or Gold Ingots or Diamonds</td>
<td><a href="11293110S-48.gif"><img src="11293110S-48.gif" alt="img"></a></td>
<td>提供1.5护甲值（钻石）.给我们提供盔甲，减少我们受到的伤害。注：金头盔还有照明的作用，当在黑暗的环境下，带上金头盔，周围就会被点亮了哦！钻石防具是最好的防具！</td>
</tr>
<tr>
<td>胸甲Chestplate</td>
<td>皮革或铁锭或金锭或钻石Leather or Iron Ingots or Gold Ingots or Diamonds</td>
<td><a href="1129311159-49.gif"><img src="1129311159-49.gif" alt="img"></a></td>
<td>提供4点护甲值（钻石）.给我们提供盔甲，减少我们受到的伤害。钻石防具是最好的防具！</td>
</tr>
<tr>
<td>护腿Leggings</td>
<td>皮革或铁锭或金锭或钻石Leather or Iron Ingots or Gold Ingots or Diamonds</td>
<td><a href="1129315V5-50.gif"><img src="1129315V5-50.gif" alt="img"></a></td>
<td>提供3点护甲值（钻石）.给我们提供盔甲，减少我们受到的伤害。钻石防具是最好的防具！</td>
</tr>
<tr>
<td>靴子Boots</td>
<td>皮革或铁锭或金锭或钻石Leather or Iron Ingots or Gold Ingots or Diamonds</td>
<td><a href="112931HM-51.gif"><img src="112931HM-51.gif" alt="img"></a></td>
<td>提供1.5点护甲值（钻石）.给我们提供盔甲，减少我们受到的伤害。钻石防具是最好的防具！</td>
</tr>
<tr>
<td>剑Sword</td>
<td>木棍加上木板或圆石或铁锭或金锭或钻石Sticks &amp; Wooden Planks or Cobblestone or Iron Ingots or Gold Ingots or Diamonds</td>
<td><a href="1129312531-52.gif"><img src="1129312531-52.gif" alt="img"></a></td>
<td>对怪物造成更多的伤害.这是我们和怪物战斗用的利器！注：小编经验来看铁剑的性价比在前期最高，后期当然是钻石附魔剑了！</td>
</tr>
<tr>
<td>弓Bow</td>
<td>线和木棍String &amp; Sticks</td>
<td><a href="1129312Y8-53.png"><img src="1129312Y8-53.png" alt="img"></a></td>
<td>射箭. 注：击杀骷髅之后会掉落，后期可以附魔无限弓！</td>
</tr>
<tr>
<td>箭Arrow</td>
<td>燧石和木棍和羽毛Flint &amp; Stick &amp; Feather</td>
<td><a href="11293130P-54.png"><img src="11293130P-54.png" alt="img"></a></td>
<td>箭.注： 击杀骷髅之后会掉落，在丛林神庙的发射器里面也可以找到！在打末影龙boss时候需要多准备几组箭</td>
</tr>
</tbody></table>
<hr>
<h1 id="道具合成"><a href="#道具合成" class="headerlink" title="道具合成"></a>道具合成</h1><table>
<thead>
<tr>
<th><strong>名称</strong></th>
<th><strong>材料</strong></th>
<th><strong>合成示意图</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>压力版Pressure Plates</td>
<td>木板或石头Wooden Planks or Stone</td>
<td><a href="1129314338-55.gif"><img src="1129314338-55.gif" alt="img"></a></td>
<td>有生物或玩家站在上面时会发出红石信号. 注：旁边如果有TNT就会发生爆炸！也可以作为一个开门工具</td>
</tr>
<tr>
<td>活板门Trapdoor</td>
<td>木板Wooden Planks</td>
<td><a href="1129312020-56.png"><img src="1129312020-56.png" alt="img"></a></td>
<td>可以通过右键点击和红石打开.一般用于制作天窗</td>
</tr>
<tr>
<td>栅栏门Fence Gate</td>
<td>木板和木棍Wooden Planks &amp; Sticks</td>
<td><a href="11293112S-57.png"><img src="11293112S-57.png" alt="img"></a></td>
<td>可以像门一样被打开. 注：用栅栏圈地的时候记得留一个格子放栅栏门，不然你会出不去的哦！右键点击即可打开！</td>
</tr>
<tr>
<td>按钮Button</td>
<td>石头或者木板Stone or Wooden Plank</td>
<td><a href="1129312148-58.gif"><img src="1129312148-58.gif" alt="img"></a></td>
<td>按下的时候发送一个短的脉冲信号。注：用于制作各种红石机器！</td>
</tr>
<tr>
<td>拉杆Lever</td>
<td>木棍和圆石Stick &amp; Cobblestone</td>
<td><a href="1129314E4-59.png"><img src="1129314E4-59.png" alt="img"></a></td>
<td>通过开关来控制红石信号的输出.注：用于制作各种红石机器！和按钮不一样，拉杆给予一个长的连续的信号。</td>
</tr>
<tr>
<td>中继器Redstone Repeater</td>
<td>石头,红石火把,红石和石头Stone &amp; Redstone Torch &amp; Redstone</td>
<td><a href="112931M46-60.gif"><img src="112931M46-60.gif" alt="img"></a></td>
<td>红石电路的二极管或者延时器.注：右击不同的次数，会产生不同的延迟！总共分三档</td>
</tr>
<tr>
<td>红石火把Redstone Torch</td>
<td>木棍和红石Stick &amp; Redstone</td>
<td><a href="112931Ba-61.png"><img src="112931Ba-61.png" alt="img"></a></td>
<td>不间断发送红石信号.</td>
</tr>
<tr>
<td>唱片机Jukebox</td>
<td>木板和钻石Wooden Planks &amp; Diamond</td>
<td><a href="1129316105-62.png"><img src="1129316105-62.png" alt="img"></a></td>
<td>将唱片插入可以播放音乐.注：唱片只有小白杀死苦力怕之后才能获得，所以唱片很难得到哦！</td>
</tr>
<tr>
<td>发射器Dispenser</td>
<td>圆石,弓和红石Cobblestone &amp; Bow &amp; Redstone</td>
<td><a href="1129313308-63.png"><img src="1129313308-63.png" alt="img"></a></td>
<td>开启的适合发射物品. 注：里面可以放箭以及其他物品，可以用来制作射箭器，也能用来制作树场！可以发射几乎所有的东西</td>
</tr>
<tr>
<td>活塞Piston</td>
<td>木板,原始,铁锭和红石Wooden Planks &amp; Cobblestone &amp; Iron Ingot &amp; Redstone</td>
<td><a href="1129315214-64.png"><img src="1129315214-64.png" alt="img"></a></td>
<td>推动方块. 注：当被激活就会将活塞推出</td>
</tr>
<tr>
<td>粘性活塞Sticky Piston</td>
<td>活塞和史莱姆球Piston &amp; Slime Ball</td>
<td><a href="1129314044-65.png"><img src="1129314044-65.png" alt="img"></a></td>
<td>推拉方块.注：当被激活就会将活塞推出，还可以收回</td>
</tr>
<tr>
<td>矿车Minecart</td>
<td>铁锭Iron Ingots</td>
<td><a href="1129314157-66.png"><img src="1129314157-66.png" alt="img"></a></td>
<td>在铁轨上行驶.也可以利用上下矿车的原理制作出矿车电梯</td>
</tr>
<tr>
<td>动力矿车Powered Minecart</td>
<td>矿车和熔炉Minecart &amp; Furnace</td>
<td><a href="1129316329-67.png"><img src="1129316329-67.png" alt="img"></a></td>
<td>烧碳来产生能量推动其他矿车前进.注：作用类似火车头</td>
</tr>
<tr>
<td>运输矿车Storage Minecart</td>
<td>矿车和箱子Minecart &amp; Chest</td>
<td><a href="1129311359-68.png"><img src="1129311359-68.png" alt="img"></a></td>
<td>通过铁路运送材料和物资.</td>
</tr>
<tr>
<td>铁轨Rail</td>
<td>铁锭和木棍Iron Ingots &amp; Stick</td>
<td><a href="1129311I7-69.png"><img src="1129311I7-69.png" alt="img"></a></td>
<td>铁轨.注：没什么好说的，做铁路的基本材料。</td>
</tr>
<tr>
<td>充能铁轨Powered Rail</td>
<td>金锭,木棍和红石Gold Ingots &amp; Stick &amp; Redstone</td>
<td><a href="11293114O-70.jpg"><img src="11293114O-70.jpg" alt="img"></a></td>
<td>被激活的时候加速矿车. 注：当矿车经过时，会产生加速度的效果哦！</td>
</tr>
<tr>
<td>探测铁轨Detector Rail</td>
<td>铁锭,石质压力板和红石Iron Ingots &amp; Stone Pressure Plate &amp; Redstone</td>
<td><a href="1129312214-71.jpg"><img src="1129312214-71.jpg" alt="img"></a></td>
<td>矿车在其上面经过时产生红石信号.可以用于激活一些红石装置</td>
</tr>
<tr>
<td>红石灯Redstone Lamp</td>
<td>红石和萤石块Redstone &amp; Glowstone Block</td>
<td><a href="1129314N7-72.png"><img src="1129314N7-72.png" alt="img"></a></td>
<td>照明设施,需红石能量激活. 注：非常不错的照明用品</td>
</tr>
<tr>
<td>绊线Tripwire Hook</td>
<td>铁锭,木棍和木板Iron Ingot &amp; Stick &amp; Wooden Plank</td>
<td><a href="1129312647-73.png"><img src="1129312647-73.png" alt="img"></a></td>
<td>通过时产生红石信号. 注：可以用来制作陷阱，丛林神庙里面的机关就是利用它实现的，只要触碰到就会产生信号，从而激活红石装置</td>
</tr>
<tr>
<td>激活铁轨Activator Rail</td>
<td>铁锭,木棍和红石火把Iron Ingots &amp; Sticks &amp; Redstone Torch</td>
<td><a href="11293155X-74.png"><img src="11293155X-74.png" alt="img"></a></td>
<td>常用来激活TNT矿车和漏斗矿车.</td>
</tr>
<tr>
<td>阳光传感器Daylight Sensor</td>
<td>玻璃,下界石英和木板Glass &amp; Nether Quartz &amp; Wooden Slabs</td>
<td><a href="1129315554-75.png"><img src="1129315554-75.png" alt="img"></a></td>
<td>发出红石信号.在白天有太阳的时候使用</td>
</tr>
<tr>
<td>投掷器Dropper</td>
<td>圆石和红石Cobblestone &amp; Redstone</td>
<td><a href="1129316096-76.png"><img src="1129316096-76.png" alt="img"></a></td>
<td>扔出物品（类似发射器）.</td>
</tr>
<tr>
<td>漏斗Hopper</td>
<td>铁锭和箱子Iron Ingots &amp; Chest</td>
<td><a href="112931LQ-77.png"><img src="112931LQ-77.png" alt="img"></a></td>
<td>物品通过漏斗在箱子中移进或者移出. 注：有时候被熊孩子用作偷东西。叠放的漏斗可以传送物品可看成是一个类似红石电线的东西！可以看成是一个管道！</td>
</tr>
<tr>
<td>漏斗矿车Minecart with Hopper</td>
<td>漏斗和矿车Hopper &amp; Minecart</td>
<td><a href="1129314B5-78.png"><img src="1129314B5-78.png" alt="img"></a></td>
<td>类似漏斗的功能.</td>
</tr>
<tr>
<td>TNT矿车Minecart with TNT</td>
<td>TNT和矿车TNT &amp; Minecart</td>
<td><a href="1129311958-79.png"><img src="1129311958-79.png" alt="img"></a></td>
<td>通过激活的铁道发生爆炸或者手动爆炸. 注：可以用来炸山洞和杀怪物</td>
</tr>
<tr>
<td>红石比较器Redstone Comparator</td>
<td>红石火把,原始和下界石英Redstone Torches &amp; Stone &amp; Nether Quartz</td>
<td><a href="1129316032-80.png"><img src="1129316032-80.png" alt="img"></a></td>
<td>仅在红石电路中使用.比较信号大小，接收大的那一方信号！</td>
</tr>
<tr>
<td>陷进箱Trapped Chest</td>
<td>箱子和绊线Chest &amp; Tripwire Hook</td>
<td><a href="1129313048-81.png"><img src="1129313048-81.png" alt="img"></a></td>
<td>打开箱子的适合发出红石信号.注：不同于普通箱子的是，如果在他前面铺红石，红石不会和他产生连接</td>
</tr>
<tr>
<td>测重压力板Weighted Pressure Plates</td>
<td>铁锭或者金锭Iron Ingots or Gold Ingots</td>
<td><a href="1129315558-82.gif"><img src="1129315558-82.gif" alt="img"></a></td>
<td>类似普通的压力板,但是只能用物品激活. 物品的数量绝对红石信号的强度.</td>
</tr>
</tbody></table>
<hr>
<h1 id="食物合成"><a href="#食物合成" class="headerlink" title="食物合成"></a>食物合成</h1><p>　　</p>
<table>
<thead>
<tr>
<th><strong>名称</strong></th>
<th><strong>材料</strong></th>
<th><strong>合成示意图</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>碗Bowl</td>
<td>木板Wooden Planks</td>
<td><a href="1129313031-83.png"><img src="1129313031-83.png" alt="img"></a></td>
<td>装蘑菇煲. 注：吃完之后碗可以重复使用！</td>
</tr>
<tr>
<td>蘑菇煲Mushroom Stew</td>
<td>碗,红蘑菇和棕色蘑菇Bowl &amp; Red Mushroom &amp; Brown Mushroom</td>
<td><a href="1129312346-84.png"><img src="1129312346-84.png" alt="img"></a></td>
<td>恢复4点饥饿值.注：吃完之后碗可以重复使用！非常不错的食物</td>
</tr>
<tr>
<td>面包Bread</td>
<td>小麦Wheat</td>
<td><a href="1129314107-85.png"><img src="1129314107-85.png" alt="img"></a></td>
<td>恢复2.5点饥饿值. 注：非常不错的食物</td>
</tr>
<tr>
<td>金苹果Golden Apple</td>
<td>苹果和金粒Apple &amp; Gold Nuggets</td>
<td><a href="112931FX-86.png"><img src="112931FX-86.png" alt="img"></a></td>
<td>恢复2点饥饿值. 注：可以在不是满饥饿度的时候恢复生命，打末影龙和凋零必备食物！也是游戏中最好食材</td>
</tr>
<tr>
<td>附魔金苹果Enchanted Golden Apple</td>
<td>苹果和金块Apple &amp; Gold Blocks</td>
<td><a href="112931C95-87.png"><img src="112931C95-87.png" alt="img"></a></td>
<td>恢复2点饥饿值. 同时给予30秒的抗火属性. 注：金苹果的升级版，也是游戏中最好食材</td>
</tr>
<tr>
<td>糖Sugar</td>
<td>甘蔗Sugar Cane</td>
<td><a href="1129313536-88.png"><img src="1129313536-88.png" alt="img"></a></td>
<td>用来制作蛋糕.</td>
</tr>
<tr>
<td>蛋糕Cake</td>
<td>牛奶桶,汤,小麦和鸡蛋Milk Buckets &amp; Sugar &amp; Wheat &amp; Egg</td>
<td><a href="1129312392-89.png"><img src="1129312392-89.png" alt="img"></a></td>
<td>每块恢复1.5饥饿值,一共6块.</td>
</tr>
<tr>
<td>曲奇Cookies</td>
<td>小麦和可可豆Wheat &amp; Cocoa Beans</td>
<td><a href="11293134O-90.png"><img src="11293134O-90.png" alt="img"></a></td>
<td>恢复1点饥饿值.</td>
</tr>
<tr>
<td>西瓜Melon Block</td>
<td>西瓜片Melon Slice</td>
<td><a href="112931B63-91.png"><img src="112931B63-91.png" alt="img"></a></td>
<td>西瓜.可以食用</td>
</tr>
<tr>
<td>西瓜种子Melon Seeds</td>
<td>西瓜片Melon Slice</td>
<td><a href="11293130Z-92.png"><img src="11293130Z-92.png" alt="img"></a></td>
<td>能够种植在耕地上.注：成熟以后可以得到西瓜</td>
</tr>
<tr>
<td>南瓜种子Pumpkin Seeds</td>
<td>南瓜Pumpkin</td>
<td><a href="11293140X-93.png"><img src="11293140X-93.png" alt="img"></a></td>
<td>能够种植在耕地上.注：成熟以后可以得到南瓜</td>
</tr>
<tr>
<td>金胡萝卜Golden Carrot</td>
<td>胡萝卜和金粒Carrot &amp; Gold Nuggets</td>
<td><a href="1129313M3-94.png"><img src="1129313M3-94.png" alt="img"></a></td>
<td>酿造原料,恢复3点饥饿值.</td>
</tr>
<tr>
<td>南瓜派Pumpkin Pie</td>
<td>南瓜,鸡蛋和糖Pumpkin &amp; Egg &amp; Sugar</td>
<td><a href="11293123L-95.png"><img src="11293123L-95.png" alt="img"></a></td>
<td>恢复4点饥饿值.非常不错的食物！</td>
</tr>
</tbody></table>
<hr>
<h1 id="其他合成"><a href="#其他合成" class="headerlink" title="其他合成"></a>其他合成</h1><p>　　</p>
<table>
<thead>
<tr>
<th><strong>名称</strong></th>
<th><strong>材料</strong></th>
<th><strong>合成示意图</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>床Bed</td>
<td>木板和羊毛Wooden Planks &amp; Wool</td>
<td><a href="1129315047-96.png"><img src="1129315047-96.png" alt="img"></a></td>
<td>在晚上睡觉快速度过夜晚. 注：当然周围不能有僵尸，不然无法进入睡眠！另外在末地可以利用床炸末影龙，是打末影龙的高端技巧！</td>
</tr>
<tr>
<td>画Painting</td>
<td>木棍和羊毛Sticks &amp; Wool</td>
<td><a href="1129314B0-97.png"><img src="1129314B0-97.png" alt="img"></a></td>
<td>装饰.得到的画是随机图案！</td>
</tr>
<tr>
<td>纸Paper</td>
<td>甘蔗Sugar Cane</td>
<td><a href="1129311510-98.png"><img src="1129311510-98.png" alt="img"></a></td>
<td>用来制造地图和书本.</td>
</tr>
<tr>
<td>书Book</td>
<td>纸Paper</td>
<td><a href="1129313U4-99.png"><img src="1129313U4-99.png" alt="img"></a></td>
<td>用来制造书架和书与笔.</td>
</tr>
<tr>
<td>书与笔Book and Quill</td>
<td>书,羽毛和墨囊Book &amp; Feather &amp; Ink Sac</td>
<td><a href="1129312621-100.png"><img src="1129312621-100.png" alt="img"></a></td>
<td>能够写文章. 注：写出来的文章可以阅读哦！</td>
</tr>
<tr>
<td>地图Map</td>
<td>纸和指南针Paper &amp; Compass</td>
<td><a href="11293144X-101.png"><img src="11293144X-101.png" alt="img"></a></td>
<td>能够显示附近一块的地图. 注：可以用几张地图合成出一张大地图</td>
</tr>
<tr>
<td>玻璃板Glass Pane</td>
<td>玻璃Glass Blocks</td>
<td><a href="1129311016-102.png"><img src="1129311016-102.png" alt="img"></a></td>
<td>类似栅栏的窗格玻璃.注：非常不错的装饰物品</td>
</tr>
<tr>
<td>铁栏杆Iron Bars</td>
<td>铁锭Iron Ingots</td>
<td><a href="1129315345-103.png"><img src="1129315345-103.png" alt="img"></a></td>
<td>类似栅栏但是只有1个方块的高度.常见于末影遗迹和地牢！</td>
</tr>
<tr>
<td>金锭Gold Ingot</td>
<td>金粒Gold Nugget</td>
<td><a href="1129312444-104.png"><img src="1129312444-104.png" alt="img"></a></td>
<td>用来制造其他东西. 注：也可以烧制金矿石获得。在地狱打僵尸猪人会爆金粒</td>
</tr>
<tr>
<td>地狱砖栅栏Nether Brick Fence</td>
<td>地狱砖块Nether Brick</td>
<td><a href="1129312c5-105.png"><img src="1129312c5-105.png" alt="img"></a></td>
<td>类似普通的栅栏只不过原料不同.</td>
</tr>
<tr>
<td>末影之眼Eye of Ender</td>
<td>末影珍珠和烈焰粉Ender Pearl &amp; Blaze Powder</td>
<td><a href="112931F95-106.png"><img src="112931F95-106.png" alt="img"></a></td>
<td>定位末地传送门. 注：使用方法：右键斜向上抛出，跟着末影之眼的方向走，当他只望头顶飞的时候，这时候向下挖即可！</td>
</tr>
<tr>
<td>附魔台Enchantment Table</td>
<td>书,钻石和黑曜石Book, Diamond &amp; Obsidian.</td>
<td><a href="1129311Y5-107.png"><img src="1129311Y5-107.png" alt="img"></a></td>
<td>用来附魔工具.附魔所需等级最高30级，30级满16个书架附魔也被称为顶级附魔！</td>
</tr>
<tr>
<td>火焰弹Fire Charge</td>
<td>烈焰粉,碳和火药Blaze Powder &amp; Coal &amp; Gunpowder</td>
<td><a href="1129314332-108.png"><img src="1129314332-108.png" alt="img"></a></td>
<td>能够通过发射器发射的火球.</td>
</tr>
<tr>
<td>末影箱Ender Chest</td>
<td>黑曜石和末影之眼Obsidian &amp; Eye of Ender</td>
<td><a href="1129311I3-109.png"><img src="1129311I3-109.png" alt="img"></a></td>
<td>用于储存. 所有末影箱共享一个物品栏. 注：可以在其他地方拿到你想用的东西！</td>
</tr>
<tr>
<td>信标Beacon</td>
<td>玻璃,黑曜石和下界之心Glass &amp; Obsidian &amp; Nether Star</td>
<td><a href="1129312J4-110.png"><img src="1129312J4-110.png" alt="img"></a></td>
<td>用于放置在钻石块，金块，绿宝石块或铁块（或这四种方块的任意组合）结构的金字塔顶端，可以向天空直射光束的功能型方块.  注：用于装饰！和定位，可以加上玻璃变成彩色信标！</td>
</tr>
<tr>
<td>铁跕Anvil</td>
<td>铁块和铁锭Iron Block &amp; Iron Ingot</td>
<td><a href="1129313Y3-111.png"><img src="1129313Y3-111.png" alt="img"></a></td>
<td>修复物品和合并附魔.注：铁砧使用过后会损坏，有一定的使用次数！</td>
</tr>
<tr>
<td>花盆Flower Pot</td>
<td>红砖Bricks</td>
<td><a href="1129314148-112.png"><img src="1129314148-112.png" alt="img"></a></td>
<td>装饰.可以栽种小花，是室内盆景必备！</td>
</tr>
<tr>
<td>物品展示框Item Frame</td>
<td>木棍和皮革Sticks &amp; Leather</td>
<td><a href="112931K29-113.png"><img src="112931K29-113.png" alt="img"></a></td>
<td>放在墙上展示物品和方块. 注：可以将任意物品放入物品展示框</td>
</tr>
<tr>
<td>萝卜钓竿Carrot on a Stick</td>
<td>钓竿和胡萝卜Fishing Rod &amp; Carrot</td>
<td><a href="1129313620-114.png"><img src="1129313620-114.png" alt="img"></a></td>
<td>控制猪. 注：骑上猪，猪就会跟你跑啦！</td>
</tr>
<tr>
<td>烟花火箭Firework Rocket</td>
<td>火药,纸和烟火之星Gunpowder &amp; Paper &amp; Firework Star</td>
<td><a href="1129315352-115.gif"><img src="1129315352-115.gif" alt="img"></a></td>
<td>烟花.</td>
</tr>
<tr>
<td>烟火之星Firework Star</td>
<td>火药,燃料和附加物品（可选）Gunpowder &amp; Dye &amp; an extra ingredient (optional)</td>
<td><a href="1129315225-116.gif"><img src="1129315225-116.gif" alt="img"></a></td>
<td>不同的烟火之星决定不同的烟花效果.</td>
</tr>
</tbody></table>
<hr>
<h1 id="染料合成"><a href="#染料合成" class="headerlink" title="染料合成"></a>染料合成</h1><p>　　</p>
<table>
<thead>
<tr>
<th><strong>名称</strong></th>
<th><strong>材料</strong></th>
<th><strong>合成示意图</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>骨粉Bone Meal</td>
<td>骨头Bone</td>
<td><a href="11293114O-117.gif"><img src="11293114O-117.gif" alt="img"></a></td>
<td>用来使农作物树木快速长大. 也可以催熟蘑菇！注：可以和发射器一起制作出半自动农场，效率超高</td>
</tr>
<tr>
<td>淡灰色染料Light Gray Dye</td>
<td>骨粉和墨囊Bonemeal &amp; Ink Sac</td>
<td><a href="1129314359-118.png"><img src="1129314359-118.png" alt="img"></a></td>
<td>用于制作淡灰色羊毛.</td>
</tr>
<tr>
<td>灰色染料Gray Dye</td>
<td>骨粉和墨囊Bonemeal &amp; Ink Sac</td>
<td><a href="11293145B-119.png"><img src="11293145B-119.png" alt="img"></a></td>
<td>用于制作灰色羊毛.</td>
</tr>
<tr>
<td>玫瑰红Rose Red</td>
<td>玫瑰花Rose</td>
<td><a href="1129315150-120.png"><img src="1129315150-120.png" alt="img"></a></td>
<td>用于制作红色羊毛.</td>
</tr>
<tr>
<td>橙色染料Orange Dye</td>
<td>玫瑰红和蒲公英黄Rose Red &amp; Dandelion Yellow</td>
<td><a href="1129316152-121.png"><img src="1129316152-121.png" alt="img"></a></td>
<td>用于制作橙色羊毛.</td>
</tr>
<tr>
<td>蒲公英黄Dandelion Yellow</td>
<td>蒲公英Dandelion</td>
<td><a href="112931N01-122.png"><img src="112931N01-122.png" alt="img"></a></td>
<td>用于制作黄色羊毛.</td>
</tr>
<tr>
<td>黄绿色染料Lime Dye</td>
<td>仙人掌绿和骨粉Cactus Green &amp; Bone Meal</td>
<td><a href="1129316452-123.png"><img src="1129316452-123.png" alt="img"></a></td>
<td>用于制作黄绿色羊毛.</td>
</tr>
<tr>
<td>淡蓝色染料Light Blue Dye</td>
<td>青金石染料和骨粉Lapis Lazuli Dye &amp; Bone Meal</td>
<td><a href="1129315a4-124.png"><img src="1129315a4-124.png" alt="img"></a></td>
<td>用于制作淡蓝色羊毛.</td>
</tr>
<tr>
<td>青色染料Cyan Dye</td>
<td>青金石染料和仙人掌绿Lapis Lazuli Dye &amp; Cactus Green</td>
<td><a href="112931FX-125.png"><img src="112931FX-125.png" alt="img"></a></td>
<td>用于制作青色羊毛.</td>
</tr>
<tr>
<td>紫色染料Purple Dye</td>
<td>青金石染料和玫瑰红Lapis Lazuli Dye &amp; Rose Red</td>
<td><a href="1129314063-126.png"><img src="1129314063-126.png" alt="img"></a></td>
<td>用于制作紫色羊毛.</td>
</tr>
<tr>
<td>品红染料Magenta Dye</td>
<td>粉红色染料和紫色染料Purple Dye &amp; Pink Dye</td>
<td><a href="1129314062-127.png"><img src="1129314062-127.png" alt="img"></a></td>
<td>用于制作品红羊毛.</td>
</tr>
<tr>
<td>粉红色染料Pink Dye</td>
<td>骨粉和玫瑰红Bone Meal &amp; Rose Red</td>
<td><a href="1129313649-128.png"><img src="1129313649-128.png" alt="img"></a></td>
<td>用于制作粉红色羊毛.</td>
</tr>
</tbody></table>
<hr>
<h1 id="羊毛合成"><a href="#羊毛合成" class="headerlink" title="羊毛合成"></a>羊毛合成</h1><p>　　</p>
<table>
<thead>
<tr>
<th><strong>名称</strong></th>
<th><strong>材料</strong></th>
<th><strong>合成示意图</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>羊毛Wool</td>
<td>线String</td>
<td><a href="112931D08-129.png"><img src="112931D08-129.png" alt="img"></a></td>
<td>建筑材料能被染色.注： 可以用剪刀从羊身上获取，也可以直接杀死羊获取</td>
</tr>
<tr>
<td>浅灰色羊毛Light Gray Wool</td>
<td>羊毛和浅灰色染料Wool &amp; Light Gray Dye</td>
<td><a href="1129315922-130.png"><img src="1129315922-130.png" alt="img"></a></td>
<td>建筑和装饰材料.</td>
</tr>
<tr>
<td>灰色羊毛Gray Wool</td>
<td>羊毛和灰色染料Wool &amp; Gray Dye</td>
<td><a href="11293154P-131.png"><img src="11293154P-131.png" alt="img"></a></td>
<td>建筑和装饰材料.</td>
</tr>
<tr>
<td>黑色羊毛Black Wool</td>
<td>羊毛和墨囊Wool &amp; Ink Sac</td>
<td><a href="1129313160-132.png"><img src="1129313160-132.png" alt="img"></a></td>
<td>建筑和装饰材料.</td>
</tr>
<tr>
<td>红色羊毛Red Wool</td>
<td>羊毛和玫瑰红Wool &amp; Rose Red</td>
<td><a href="1129311C1-133.png"><img src="1129311C1-133.png" alt="img"></a></td>
<td>建筑和装饰材料.</td>
</tr>
<tr>
<td>橙色羊毛Orange Wool</td>
<td>羊毛和橙色染料Wool &amp; Orange Dye</td>
<td><a href="112931I00-134.png"><img src="112931I00-134.png" alt="img"></a></td>
<td>建筑和装饰材料. 注：在沙漠神殿可以得到</td>
</tr>
<tr>
<td>黄色羊毛Yellow Wool</td>
<td>羊毛和蒲公英黄Wool &amp; Dandelion Yellow</td>
<td><a href="112931G61-135.png"><img src="112931G61-135.png" alt="img"></a></td>
<td>建筑和装饰材料.</td>
</tr>
<tr>
<td>黄绿色羊毛Lime Wool</td>
<td>羊毛和黄绿色染料Wool &amp; Lime Dye</td>
<td><a href="112931D60-136.png"><img src="112931D60-136.png" alt="img"></a></td>
<td>建筑和装饰材料.</td>
</tr>
<tr>
<td>绿色羊毛Green Wool</td>
<td>羊毛和仙人掌绿Wool &amp; Cactus Green</td>
<td><a href="112931M51-137.png"><img src="112931M51-137.png" alt="img"></a></td>
<td>建筑和装饰材料.</td>
</tr>
<tr>
<td>淡蓝色羊毛Light Blue Wool</td>
<td>羊毛和淡蓝色染料Wool &amp; Light Blue Dye</td>
<td><a href="1129313435-138.png"><img src="1129313435-138.png" alt="img"></a></td>
<td>建筑和装饰材料.</td>
</tr>
<tr>
<td>青色羊毛Cyan Wool</td>
<td>羊毛和青色染料Wool &amp; Cyan Dye</td>
<td><a href="1129312064-139.png"><img src="1129312064-139.png" alt="img"></a></td>
<td>建筑和装饰材料.</td>
</tr>
<tr>
<td>蓝色羊毛Blue Wool</td>
<td>羊毛和青金石染料Wool &amp; Lapis Lazuli Dye</td>
<td><a href="1129312348-140.png"><img src="1129312348-140.png" alt="img"></a></td>
<td>建筑和装饰材料.注： 在沙漠神殿可以得到</td>
</tr>
<tr>
<td>紫色羊毛Purple Wool</td>
<td>羊毛和紫色染料Wool &amp; Purple Dye</td>
<td><a href="1129314925-141.png"><img src="1129314925-141.png" alt="img"></a></td>
<td>建筑和装饰材料.</td>
</tr>
<tr>
<td>品红色羊毛Magenta Wool</td>
<td>羊毛和品红色染料Wool &amp; Magenta Dye</td>
<td><a href="1129313457-142.png"><img src="1129313457-142.png" alt="img"></a></td>
<td>建筑和装饰材料.</td>
</tr>
<tr>
<td>粉红色羊毛Pink Wool</td>
<td>羊毛和粉红色染料Wool &amp; Pink Dye</td>
<td><a href="112931N30-143.png"><img src="112931N30-143.png" alt="img"></a></td>
<td>建筑和装饰材料.</td>
</tr>
<tr>
<td>棕色羊毛Brown Wool</td>
<td>羊毛和可可豆Wool &amp; Cocoa Beans</td>
<td><a href="1129311953-144.png"><img src="1129311953-144.png" alt="img"></a></td>
<td>建筑和装饰材料.</td>
</tr>
</tbody></table>
<hr>
<h1 id="炼金合成"><a href="#炼金合成" class="headerlink" title="炼金合成"></a>炼金合成</h1><p>　　</p>
<table>
<thead>
<tr>
<th><strong>名称</strong></th>
<th><strong>材料</strong></th>
<th><strong>合成示意图</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>玻璃瓶Glass Bottle</td>
<td>玻璃Glass</td>
<td><a href="112931O49-145.png"><img src="112931O49-145.png" alt="img"></a></td>
<td>用于酿造.注：打女巫可以掉落玻璃瓶！</td>
</tr>
<tr>
<td>炼药锅Cauldron</td>
<td>铁锭Iron Ingot</td>
<td><a href="112931D53-146.png"><img src="112931D53-146.png" alt="img"></a></td>
<td>填满玻璃瓶的水.用于酿造药水！</td>
</tr>
<tr>
<td>酿造台Brewing Stand</td>
<td>烈焰棒和圆石Blaze Rod &amp; Cobblestone</td>
<td><a href="1129311R4-147.png"><img src="1129311R4-147.png" alt="img"></a></td>
<td>用于酿造.</td>
</tr>
<tr>
<td>烈焰粉Blaze Powder</td>
<td>烈焰棒Blaze Rod</td>
<td><a href="112931M20-148.png"><img src="112931M20-148.png" alt="img"></a></td>
<td>用于制造末影眼和岩浆膏.注：地狱烈焰人掉落，找寻末影遗迹必备材料！</td>
</tr>
<tr>
<td>研究膏Magma Cream</td>
<td>史莱姆和烈焰粉Slimeball &amp; Blaze Powder</td>
<td><a href="1129311A6-149.png"><img src="1129311A6-149.png" alt="img"></a></td>
<td>用于药剂制作.</td>
</tr>
<tr>
<td>发酵蜘蛛眼Fermented Spider Eye</td>
<td>蜘蛛眼,棕色蘑菇和糖Spider Eye, Brown Mushroom &amp; Sugar</td>
<td><a href="1129316014-150.png"><img src="1129316014-150.png" alt="img"></a></td>
<td>用于药剂制作.</td>
</tr>
<tr>
<td>闪烁的西瓜Glistering Melon</td>
<td>西瓜片和金粒Melon Slice &amp; Gold Nugget</td>
<td><a href="11293114T-151.png"><img src="11293114T-151.png" alt="img"></a></td>
<td>用于药剂制作.</td>
</tr>
</tbody></table>
<hr>
<h1 id="1-8新增合成"><a href="#1-8新增合成" class="headerlink" title="1.8新增合成"></a>1.8新增合成</h1><p>　　</p>
<table>
<thead>
<tr>
<th><strong>名称</strong></th>
<th><strong>材料</strong></th>
<th><strong>合成示意图</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>兔肉煲</td>
<td>兔肉、碗、蘑菇、胡萝卜、土豆</td>
<td><a href="1-150402112443.jpg"><img src="1-150402112443.jpg" alt="img"></a></td>
<td>用于食用，可恢复饱食度！</td>
</tr>
<tr>
<td>皮革</td>
<td>兔子皮</td>
<td><a href="1-150402112444.jpg"><img src="1-150402112444.jpg" alt="img"></a></td>
<td>与皮革作用一样</td>
</tr>
<tr>
<td>新栅栏</td>
<td>木板、木棍</td>
<td><a href="1-150402112445.jpg"><img src="1-150402112445.jpg" alt="img"></a></td>
<td>用于圈地和制作农场、牧场</td>
</tr>
<tr>
<td>海晶灯</td>
<td>海晶碎片和海晶沙粒</td>
<td><a href="1-150402112445-50.jpg"><img src="1-150402112445-50.jpg" alt="img"></a></td>
<td>用于水下照明</td>
</tr>
<tr>
<td>海晶石</td>
<td>海晶碎片</td>
<td><a href="1-150402112447.jpg"><img src="1-150402112447.jpg" alt="img"></a></td>
<td>用于装饰</td>
</tr>
<tr>
<td>海晶石砖</td>
<td>海晶碎片</td>
<td><a href="1-150402112448.jpg"><img src="1-150402112448.jpg" alt="img"></a></td>
<td>用于装饰</td>
</tr>
<tr>
<td>暗海晶石</td>
<td>海晶碎片、墨囊</td>
<td><a href="1-150402112449.jpg"><img src="1-150402112449.jpg" alt="img"></a></td>
<td>用于装饰</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>Minecraft</tag>
      </tags>
  </entry>
  <entry>
    <title>作品推荐《我的三体》</title>
    <url>/2018/02/27/The-three-body-problem/</url>
    <content><![CDATA[<img src="/2018/02/27/The-three-body-problem/index.png" class="">

<a id="more"></a>

<p>BiliBili的up主<a href="https://space.bilibili.com/614801#/">神游八方</a>的作品，还原度很高，第一季是很典型的摆拍型，MC气息很浓啊，第二季质量就非常高了，超赞！</p>
<p>附带三个童话故事</p>
<blockquote>
<h3 id="王国的新画师"><a href="#王国的新画师" class="headerlink" title="王国的新画师"></a>王国的新画师</h3><p>很久很久以前，有一个王国叫无故事王国，它一直没有故事。其实对于一个王国而言，没有故事是最好的，没有故事的国王中的人民是最幸福的，因为故事就意味着曲折和灾难。<br>无故事王国有一个贤明的国王、一个善良的王后和一群正直能干的大臣，还有勤劳朴实的人民。王国的生活像镜而一样平静，昨天像今天，今天像明天，去年像今年，今年像明年，一直没有故事。<br>直到王子和公主长大。<br>国王有两个儿子，分别是深水王子和冰沙王子，还有一个女儿：露珠公主。<br>深水王子小时候去了饕餮海中的墓岛上，再也没有回来，原因后面再讲。<br>冰沙王子在父王和母后身边长大，但也让他们深深忧虑。这孩子很聪明，但从小就显示出暴虐的品性。他让仆役们从王宫外搜集许多小动物，他就和这些小动物玩帝国游戏，他自封为皇帝，小动物们为臣民，臣民们都是奴隶，稍有不从就砍头，往往游戏结束时小动物们都被杀了，冰沙就站在一地鲜血中狂笑不已……王子长大后性格收敛了一些，变得沉默寡言，目光阴沉。国王知道这只是狼藏起了撩牙，冰沙心中有一窝冬眠的毒蛇，在等待着苏醒的机会。国王终于决定取消冰沙王子的王位继承权，由露珠公主继承王位，无故事王国在未来将有一位女王。<br>假如父王和母后传给后代的美德是有一个定量的，那冰沙王子缺少的部分一定都给了露珠公主。公主聪明善良，且无与伦比地美丽，她在白天出来太阳会收敛光辉，她在夜晚散步月亮会睁大眼睛，她一说话百鸟会停止鸣唱，她踏过的荒地会长出绚丽的花朵。露珠成为女王必定为万民拥戴，大臣们也会全力辅佐，就连冰沙王子对此也没有说什么，只是目光更阴沉了。<br>于是，无故事王国有了故事。<br>国王是在他的六十寿辰这一天正式宣布这一决定的。在这个庆典之夜，夜空被焰火装点成流光溢彩的花园，灿烂的灯火几乎把王宫照成透明的水晶宫殿，在欢歌笑语中，美酒如河水般流淌……<br>每一个人都沉浸在幸福快乐中，连冰沙王子那颗冰冷的心似乎也被融化，他一改往日的阴沉，恭顺地向父王祝寿，愿他的生命之光像太阳一样永远照耀王国。他还赞颂父王的决定，说露珠公主确实比自己更适合成为君主。他祝福妹妹，希望她多多向父王学习治国本领，以备将来担当重任。他的真诚和善意让所有的人为之动容。<br>“吾儿，看到你这样我真是高兴。”国王抚着王子的头说，“真想永远留住这美好的时光。”<br>于是有大臣建议，应该制作一幅巨型油画，把庆典的场景画下来，挂在宫殿中以资纪念。<br>国王摇摇头，“我的画师老了，世界在他昏花的老眼中已蒙上了雾霭，他颇抖的老手已绘不出我们幸福的笑容。”<br>“我正要说这个，”冰沙王子对国王深深鞠躬，“我的父王，我正要献给您一位新画师。”<br>王子说完对后面示意了一下，新画师立刻走了进来。这是一个大男孩，看上去也就十四五岁的样子，裹着一件修士的灰色斗篷，在这金碧辉煌的宫殿和珠光宝气的宾客中像一只惊恐的小老鼠。他走路时，已经很瘦小的身子紧缩成一根树枝一般，仿佛时时躲避着身边看不见的荆刺。<br>国王看着眼前的画师显得有些失望，“他这么年轻，能掌握那高深的技巧吗?”<br>王子再次鞠躬，“我的父王，他叫针眼，从赫尔辛根默斯肯来，是空灵大画师最好的学生。他自五岁起就跟大画师学画，现已学了十年，深得空灵画师的真传。他对世界的色彩和形状，就像我们对烧红的烙铁一样敏感，这种感觉通过他如神的画笔凝固在画布上，除了空灵画师，他举世无双。”王子转向针眼画师，“作为画师，你可以直视国王，不算无礼。”<br>针眼画师抬头看了一眼国王，立刻又低下了头。<br>国王有些吃惊，“孩子，你的目光很锐利，像烈焰旁出鞘的牙剑，与你的年龄极不相称。”<br>针眼画师第一次说话了：“至高无上的国王，请宽怒一个卑微画师的冒犯。这是一个画师的眼睛，他要先在心里绘画，我已经把您，还有您的威严和贤明一起画在心里，我会画到画里的。”<br>“你也可以看王后。”王子说。<br>针眼画师看了一眼王后，低下头说：“最最尊敬的王后，请宽怒一个卑微画师的冒犯，我已经把您，还有您的高贵和典维一起画在心里，我会画到画里的。”<br>“再看看公主，未来的女王，你也要画她。”<br>针眼画师看露珠公主的时间更短，如闪电般看了一眼后就低头说：”最最受人景仰的公主，请宽怒一个卑微画师的冒犯。您的美丽像正午的阳光刺伤了我，我第一次感到了自己画笔的无力，但我已经把您，还有您无与伦比的美丽一起画在心里，我会画到画里的。”<br>然后王子又让针眼画师看看大臣们。他挨着看了，目光在每个人的身上只停留一瞬间，最后低下头说：“最最尊敬的大人们，请宽怒一个卑微画师的冒犯。我已经把你们，还有你们的才能和智慧一起画在心里，我会画到画里的。”<br>盛宴继续进行，冰沙王子把针眼画师拉到宫殿的一个角落，低声问道：“都记住了吗?”<br>针眼画师头低低的，脸全部隐藏在斗篷帽的阴影里，使那件斗篷看上去仿佛是空的，里面只有黑影没有躯体。“记住了，我的王。”<br>“全记住了?”<br>“我的王，全记住了，即使给他们每人的每根头发和汗毛各单画一幅特写，我都能画得真真切切分毫不差。”<br>宴会到后半夜才结束，王宫中的灯火渐渐熄灭。这正是黎明前最黑暗的时候，月亮已经西沉，乌云自西向东，像帷幕一样遮住了夜空，大地像是浸在墨汁中一般。一阵阴冷的寒风吹来，鸟儿在巢中颤抖，花儿惊惧地合上了花瓣。<br>有两匹快马像幽灵一般出了王宫，向西方奔驰而去，骑在马上的分别是冰沙王子和针眼画师。他们来到了距王宫十多里的一处幽深的地堡中。这里处于夜之海的最深处，潮湿阴森，像一个沉睡着的冷血巨怪的腹腔。两人的影子在火炬的光芒中摇曳，他们的身躯只是那长长影子末端的两个黑点。针眼画师拆开一幅画，那画有一人高，他把包画的帆布掀开后让王子看。这是一位老人的肖像，老人的白发和白须像银色的火焰包围着头脸，他的眼神很像针眼画师，但锐利中多了一份深沉，这画显示出画师高超的技艺，纤毫毕现，栩栩如生。<br>“我的王，这是我的老师，空灵大画师。”<br>王子打量着画，点点头说：“你先把他画出来是明智的。”<br>“是的，我的王，以免他先把我画出来。”针眼画师说着，小心翼冀地把画挂到潮湿的墙上，“好了，我现在可以为您做新画了。”<br>针眼画师从地堡的一个暗角抱出一卷雪白的东西，“我的王，这是赫尔辛根默斯肯的雪浪树的树干，这树百年长成后，它的树干就是一大卷纸，上好的画纸啊!我的画只有画在雪浪纸上才有魔力。”他把树干纸卷放到一张石桌上，拉出一段纸来，压在一大块黑曜石石板下，然后用一把锋利的小匕首沿石板把压着的纸切下，掀开石板后，那张纸已经平平展展地铺在石桌上，它一片雪白，仿佛自己会发光似的。然后画师从帆布包中拿出各种绘画工具，“我的王，看这些画笔，是用赫尔辛根默斯肯的狼的耳毛做的。这几罐颜料也都来自赫尔辛根默斯肯，这罐红的，是那里巨编蝠的血;黑的，是那里深海乌贼的墨汁;蓝的和黄的，都是从那里的古老陨石中提取的……这些都要用一种叫月毯的大鸟的眼泪来调和。”<br>“赶快画画吧。”王子不耐烦地说。<br>“好的，我的王，先画谁呢?”<br>“国王。”<br>针眼画师拿起画笔开始作画。他画得很随意，用不同的色彩这里点一点，那里画一道，画纸上的色彩渐渐多了起来，但看不出任何形状，就像把画纸暴露在一场彩色的雨中，五彩的雨滴不断滴到纸面上。画面渐渐被色彩填满，一片纷繁迷乱的色彩，像被马群践踏的花园。画笔继续在这色彩的迷宫中游走，仿佛不是画师在运笔，而是画笔牵着他的手游移。王子在旁边疑惑地看着，他想提问，但画面上色彩的涌现和聚集有一种作用，让他着迷。突然，几乎是在一瞬间，就像波光粼粼的水面被冻祥，所有的色块都有了联系，所有的色彩都有了意义，形状出现了，并很快变得精细清晰。<br>王子现在看到，针眼画师画的确实是国王，画面上的国王就是他在宴会上看到的装束，头戴金色的王冠，身穿华丽的礼服，但表情大不相同，国王的目光中没有了威严和睿智，而是透出一种极其复杂的东西，如梦初醒、迷惑、震惊、悲哀……藏在这一切后面的是来不及浮现的巨大恐俱，就像看到自己最亲密的人突然拔剑刺来的那一瞬间。<br>“我的王，画完了，我把国王画到画里了。”针眼画师说。<br>“你把他画到画里了，很好。”王子看着国王的画像满意地点点头，他的眸子中映着火把的火光，像灵魂在深井中燃烧。<br>在十几里外的王宫中，在国王的寝室里，国王消失了。在那张床腿是四个天神雕像的大床上，被褥还有他身体的余温，床单上还有他压出的凹印，但他的躯体消失得无影无踪。<br>王子把已完成的画从石桌上拿起扔到地上，“我会把这幅画装裱起来，挂在这里的墙上，没事的时候经常来看一看。下面画王后吧。”<br>针眼画师又用黑曜石石板压平了一张雪浪纸，开始画王后的肖像。这次王子没有站在旁边看，而是来回踱步，空旷的地堡中回荡着单调的脚步声。这次画师作画的速度更快，只用了画上幅画一半的时间就完成了。<br>“我的王，画完了，我把王后画到画里了。”<br>“你把她画到画里了，很好。”<br>在王宫中，在王后的寝室里，王后消失了。在那张床腿是四个天使雕像的大床上，被褥还有她身体的余温，床单上还有她压出的凹印，但她的躯体消失得无影无踪。<br>在宫殿外面的深院中，一只狼犬觉察到了什么，狂吠了几声，但它的叫声立刻被无边的黑暗吞没，它自己也在前所未有的恐惧中沉默了，缩到角落不住地颤抖着，与黑暗融为一体。<br>“该画公主了吧？”针眼画师问。<br>“不，等画完了大臣们再画她，大臣们比她危险。当然，只画那些忠于国王的大臣，你应该记得他们的样子吧?”<br>“当然.我的王，全记住了，即使给他们每人的每根头发和汗毛各画一幅特写……”<br>“好了，快画吧，天亮前画完。”<br>“没问题，我的王，天亮前我会把忠于国王的大臣，还有公主，都画到画里。”<br>针眼画师一次压平了好几张雪浪纸，开始疯狂作画。他每完成一幅画，画中的人就从睡榻上消失。随着黑夜的流逝，冰沙王子要消灭的人一个接一个变成了挂在地堡墙上的画像。<br>露珠公主在睡梦中被一阵敲门声惊醒，那声音又急又响，从来没有人敢这样敲她的门。她从床上起身，来到门前时看到宽姨已经把门打开了。宽姨是露珠的奶妈，一直照顾她长大，公主与她建立的亲情甚至超过了生母王后。宽姨看到门外站着王宫的卫队长，他的盔甲还带着外面暗夜的寒气。<br>“你太无礼了!竟敢吵醒公主？！她这几天一直失眠睡不好觉!”<br>卫队长没有理会宽姨的责骂，只是向公主匆匆敬礼，“公主，有人要见你!”然后闪到一边，露出他身后的人，那是一位老者，白发和白须像银色的火焰包围着头脸，他的目光锐利而深沉，他就是针眼画师向王子展示的第一幅画中的人。他的脸上和斗篷上满是尘土，靴覆满泥巴，显然是长途跋涉而来。他背着一个硕大的帆布袋，但奇怪的是打着一把伞，更奇怪的是他打伞的方式：一直不停地转动着伞。细看一下伞的结构，就知道他这样做的原因：那把伞的伞面和伞柄都足乌黑色，每根伞骨的末端都固定着一只小圆球，是某种半透明的石头做成的，有一定重量。可以看到伞里面几根伞撑都折断了，无法把全伞撑起来，只有让伞不断转动，把伞骨末端的小石球甩起来，才能把伞撑开。<br>“你怎么随便让外人进来，还是这么个怪老头?!”宽姨指着老者责问道。<br>“哨兵当然没让他进王宫，但他说……”卫队长忧虑地看了一眼公主，“他说国王已经没了。”<br>“你在说什么?!你疯了吗?”宽姨大喊，公主仍没有做声，只是双手抓紧了胸前的睡袍。<br>“但国王确实不见了，王后也不见了，我派人看过，他们的寝室都是空的。”<br>公主短促地惊叫了一声，一手扶住宽姨好让自己站稳。<br>老者开口了：“尊敬的公主，请允许我把事情说清楚。”<br>“让老人家进来，你守在门口。”公主对卫队长说。<br>老者转着伞，对公主鞠躬，似乎对于公主能够这么快镇静下来心存敬意。<br>“你转那把伞干什么?你是马戏团的小丑吗?”宽姨说。<br>“我必须一直打着这把伞，否则也会像，国王和王后一样消失。”<br>“那就打着伞进来吧。”公主说，宽姨把门大开，以便让老者举伞通过。<br>老者进入房间后，把肩上的帆布袋放到地毯上，疲惫地长出一口气，但仍转着黑伞，伞沿的小石球在烛光中闪亮，在周围的墙壁上投映出一圈旋转的星光。<br>“我是赫尔辛根默斯肯的空灵画师，王宫里新来的那个针眼画师是我的学生。”老者说。<br>“我见过他。”公主点点头说。<br>“那他见过你吗?他看过你吗?”空灵画师紧张地问。<br>“是的，他当然看过我。”<br>“糟透了，我的公主，那糟透了!”空灵画师长叹一声，“他是个魔鬼，掌握着魔鬼的画技，他能把人画到画里。”<br>“真是废话!”宽姨说，“不能把人画到画里那叫画师吗?”<br>空灵画师摇摇头，“不是那个意思，他把人画到画里后，人在外面就没了，人变成了死的画。”<br>“那还不快派人找到他杀了他?!”<br>卫队长从门外探进头来说：“我派全部的卫队去找了，找不到。我原想去找军机大臣，他可以出动王宫外的禁卫军搜查，可这个老人家说军机大臣此时大概也没了。”<br>空灵画师又摇摇头，“禁卫军没有用，冰沙王子和针眼可能根本就不在王宫里，针眼在世界上任何地方作画，都能杀掉王宫中的人。”<br>“你说冰沙王子?”宽姨问。<br>“是的，王子要以针眼画师作武器，除掉国王和忠诚于他的人，夺取王位。”<br>空灵画师看到，公主、宽姨和门口的卫队长对他的话似乎都没感到意外。<br>“还是先考虑眼前的生死大事吧!针眼随时可能把公主画出来，他可能已经在画了。”<br>宽姨大惊失色，她一把抱住公主，似乎这样就能保护她。<br>空灵画师接着说：“只有我能除掉针眼，现在他已经把我画出来了，但这把伞能保护我不消失，我只要把他画出来，他就没了。”<br>“那你就在这里画吧!”宽姨说，“让我替你打伞!”<br>空灵画师又摇摇头，“不行，我的画只有画在雪浪纸上才有魔力，我带来的纸还没有压平，不能作画。”<br>宽姨立刻打开画师的帆布包，从中取出一截雪浪树的树干，树干已经刮了外皮，露出白花花的纸卷来。宽姨和公主从树干纸卷上抽出一段纸，纸面现出一片雪白，房间里霎时亮了许多。她们试图在地板上把纸压平•但不管怎样努力，只要一松手，那段纸就弹回原状又卷了回去。<br>画师说：“不行的，只有赫尔辛根默斯肯的黑曜石石板才能压平雪浪纸，那种黑曜石石板很稀有，我只有一块，让针眼偷走了!”<br>“这纸用别的东西真的弄不平吗?”<br>“弄不平的，只有用赫尔辛根默斯肯的黑曜石石板才能压平，我本来是希望能够从针眼那里夺回它的。”<br>“赫尔辛根默斯肯的黑曜石?”宽姨一拍脑袋，“我有一个熨斗，只在熨公主最好的晚礼服时才用，就是赫尔辛根默斯肯出产的，是黑曜石!”<br>“也许能用。”空灵画师点点头。<br>宽姨转身跑出去，很快拿着一个乌黑银亮的熨斗进来了。她和公主再次把雪浪纸从纸卷中拉出一段，用熨斗在地板上压住纸的一角，压了几秒钟后松开，那一角的纸果然压平了。<br>“你来给我打伞，我来压!”空灵画师对宽姨说。在把伞递给她的时候，他嘱咐道，“这伞要一直转着打开，一合上我就没了!”看到宽姨把伞继续旋转着打开举在他的头顶，他才放心地蹲下用熨斗压纸，只能一小块一小块地挨着压。<br>“不能给这伞做个伞撑吗?”公主看着旋转的伞问。<br>“我的公主，以前是有伞撑的。”空灵画师边埋头用熨斗压纸边说，“这把黑伞的来历很不寻常。从前，赫尔辛根默斯肯的其他画师也有这种画技，除了人，他们也能把动物和植物画到画里。但有一天，飞来了一条渊龙，那龙通体鸟黑，既能弃深海潜游，又能在高空飞翔，先后有三个大画师画下了它，但它仍然在画外潜游和飞翔。后来，画师们筹钱雇了一名魔法武士，武士用火剑杀死了渊龙，那场搏杀使赫尔辛根默斯肯的大海都沸腾了。渊龙的尸体大部分都被烧焦了，我就从灰堆中收集了少量残骸，制成了这把伞。伞面是用渊龙的翼膜做的，伞骨、伞柄和伞撑都是用它的乌骨做成，伞沿的那些宝石，其实是从渊龙已经烧焦的肾中取出的结石。这把伞能够保护打着它的人不被画到画里。后来伞骨断了，我曾用几根竹棍做了伞撑，但发现伞的魔力竟消失了，拆去新伞撑后，魔力又恢复了。后来试验用手在里面撑开伞也不行，伞中是不能加入任何异物的，可我现在已经没有渊龙的骨头了，只能这样打开伞……”<br>这时房间一角的钟敲响了，空灵画师抬头看看，已是凌晨，天快亮了。他再看看雪浪纸，压平的一段从纸卷中伸了出来，平铺在地板上不再卷回去，但只有一掌宽的一条，远不够绘一幅画的。他扔下熨斗，长叹一声。<br>“来不及了，我画出画来还需要不少时间，来不及了，针眼随时会画完公主，你们——”空灵画师指指宽姨和卫队长，“针眼见过你们吗?”<br>“他肯定没见过我。”宽姨说。<br>“他进王宫时我远远地看到过他，但我想他应该没看见我。”卫队长说。<br>“很好，”空灵画师站起身来，“你们俩护送公主去饕餮海，去墓岛找深水王子!”<br>“可……即使到了饕餮海，我们也上不了墓岛的，你知道海里有……”<br>“到了再想办法吧，只有这一条生路了。天一亮，所有忠于国王的大臣都会被画到画里，禁卫军将被冰沙控制，他将篡夺王位，只有深水王子能制止他。”<br>“深水王子回到王宫，不是也会被针眼画到画里吗?”会主问。<br>“放心，不会的，针眼画不出深水王子。深水是王国中针眼唯一画不出来的人，很幸运，我只教过针眼西洋画派，没有向他传授东方画派。”<br>公主和其他两人都不太明白空灵画师的话，但老画师没有进一步解释，只是继续说：“你们一定要让深水回到王宫，杀掉针眼，并找到公主的画像，烧掉那幅画，公主就安全了。”<br>“如果也能找到父王和母后的画像……”公主拉住空灵画师急切地说。<br>老画师缓缓地摇摇头，“我的公主，来不及了，他们已经没有了，他们现在就是那两幅画像了，如果找到不要毁掉，留作祭奠吧。”<br>露珠公主被巨大的悲痛压倒，她跌坐在地上掩面痛哭起来。<br>“我的公主，现在不是哀伤的时候，要想为国王和王后复仇，就赶快上路吧!”老画师说着，转向宽姨和卫队长，“你们要注意，在找到并毁掉公主的画像之前，伞要一直给她打着，一刻都不能离开.也不能合上。”他把伞从宽姨手中拿过来，继续转动着，“伞不能转得太慢，那样它就会合上，也不能太快，因为这伞年代已久，转得太快会散架的。黑伞有灵气，如果转得慢了，它会发出像鸟叫的声音，你们听，就足这样子——”老画师把伞转慢了些.伞面在边缘那些石球的重量下慢慢下垂，这时能听到它发出像夜莺一样的叫声，伞转得越慢声音越大。老画师重新加快了转伞的速度，鸟鸣声变小消失了。“如果转得太快，它会发出铃声，就像这样——”老画师继续加快转伞的速度，能听到一阵由小到大的铃声，像风铃，但更急促，“好了，现在快把伞给公主打上。”他说着，把伞又递给宽姨。<br>“老人家，我们俩一起打伞走吧。”露珠公主抬起泪眼说。<br>“不行，黑伞只能保护一个人，如果两个被针眼画出的人一起打伞，那他们都会死，而且死得更惨：每个人的一半被画入画中，一半留在外面……快给公主打伞，拖延一刻危险就大一分，针眼随时可能把她画出来!”<br>宽姨看看公主，又看看空灵画师，犹豫着。<br>老画师说：“是我把这画技传授给那个孽种，我该当此罪。你还等什么？想看着公主在你面前消失?!”<br>最后一句话令宽姨颤抖了一下，她立刻把伞移到公主上方。<br>老画师抚着白须从容地笑起来，“这就对了，老夫绘画一生，变成一幅画也算死得其所。我相信那个孽种的技艺，那会是一幅精致好画的……”<br>空灵大画师的身体渐渐变得透明，然后像雾气一般消失了。<br>露珠公主看着老画师消失的那片空间，喃喃地说：“好吧，我们走，去饕餮海。”<br>宽姨对门口的卫队长说：“你快过来给公主打伞，我去收拾一下。”<br>卫队长接过伞后说：“要快些，现在外面都是冰沙王子的人了，天亮后我们可能出不了王宫。”<br>“可我总得给公主带些东西，她从来没有出过远门，我要带她的斗篷和靴子，她的好多衣服，她喝的水，至少……至少要带上那块赫尔辛根默斯肯出产的好香皂，公主只有用那香皂洗澡才能睡着觉……”宽姨唠唠叨叨地走出房间。<br>半个小时后，在初露的曙光中，一辆轻便马车从一个侧门驶出王宫，卫队长赶着车，车上坐着露珠公主和给她打伞的宽姨，他们都换上了平民装束。马车很快消失在远方的雾霭中。这时，在那个阴森的地堡中，针眼画师刚刚完成露珠公主的画像，他对冰沙王子说，这是他画过的最美的一幅画。</p>
</blockquote>
<blockquote>
<h3 id="饕餮海"><a href="#饕餮海" class="headerlink" title="饕餮海"></a>饕餮海</h3><p>出了王宫后，卫队长驾车一路狂奔。三个人都很紧张，他们感觉在未尽的夜色里，影影绰绰掠过的树木和田野中充满危险。天亮了一些后，车驶上了一个小山冈，卫队长勒住马，他们向来路眺望。王国的大地在他们下面铺展开未，他们来的路像一条把世界分成两部分的长线，线的尽头是王宫，已远在天边，像被遗失在远方的一小堆积木玩具。没有看到追兵，显然冰沙王子认为公主已经不存在了，被画到了画中。<br>以后他们可以从容地赶路了。在天亮的过程中，周围的世界就像是一幅正在绘制中的画，开始只有朦胧的轮廓和模糊的色彩，后来，景物的形状和线条渐渐清晰精细，色彩也丰富明快起来。在太阳升起前的一刹那，这幅画已经完成。常年深居王宫的公主从来没有见过这祥大块大块的鲜艳色彩：森林草地和田野的大片绿色、花丛的大片鲜红和嫩黄、湖泊倒映着的清晨天空的银色、早出的羊群的雪白……太阳升起时，仿佛绘制这幅画的画师抓起一把金粉豪爽地撒向整个画面。<br>“外面真好，我们好像已经在画中呢。”公主赞叹道。<br>“是啊，公主，可在这幅画里你活着，在那幅画中你就死了。”打伞的宽姨说。<br>这话又让公主想起了已经离去的父王和母后，但她抑制住了眼泪，她知道自己现在再也不是一个小女孩.她应该担当起国王的重任了。<br>他们谈起了深水王子。<br>“他为什么被流放到墓岛上?”公主问。<br>“人们都说他是怪物。”卫队长说。<br>“深水王子不是怪物!”宽姨反驳道。<br>“人们说他是巨人。”<br>“深水不是巨人!他小的时候我还抱过他，他不是巨人。”<br>“等我们到海边你就会看到的，他肯定是巨人，好多人都看到了。”<br>“就算深水是巨人，他也是王子，为什么要流放到岛上?”公主问。<br>“他没有被流放，他小时候坐船去墓岛上钓鱼，正好那时饕餮鱼在海上出现，他就回不来了，只好在岛上长大。”<br>……<br>太阳升起后，路上的行人和马车渐渐多起来。由于公主以前几乎没有出过王宫，所以人们都不认识她，但尽管她现在还戴着面纱，只露出两只眼睛，看到她的人仍惊叹她的美丽。人们也称赞驾车的小伙子的孔武英俊，笑话那个老妈妈为她的美丽女儿打着的那把奇怪的伞和她那奇怪的打伞方式。好在没有人质疑伞的用途，今天阳光灿烂，人们都以为这是遮阳伞。<br>不知不觉到了中午，卫队长用弓箭射了两只兔子做午餐。三人坐在路边树丛间的空地上吃饭。露珠公主摸着身旁柔软的草地，嗅着青草和鲜花的清香，看着阳光透过树叶投在草地上的光斑，听着林中的鸟鸣和远处牧童的笛声，对这个新世界充满了好奇和惊喜。<br>宽姨却长叹一声，“唉，公主啊，离开王宫这么远，真让你受罪了。”<br>“我觉得外面比王宫好。”公主说。<br>“我的公主哇，外面哪有王宫里好?你真是不知道，外面有很多难处呢，现在是春天，冬天外面会冷，夏天会热，外面会刮风下雨，外面什么样的人都有，外面……”<br>“可我以前对外面什么都不知道。我在王宫里学音乐，学绘画，学诗歌和算术，还学着两种谁都不说的语言，可没人告诉我外面是什么样子，我这样怎么能统治王国呢?”<br>“公主，大臣们会帮你的。”<br>“能帮我的大臣都被画到画里了……我还是觉得外面好。”<br>从王宫到海边有一个白天的路程，但公主一行不敢走大道，遇到城镇就绕开，所以直到半夜才到达。<br>露珠公主从来没有见过这样广阔的星空，也第一次领略了夜的黑暗和寂静，车上的火把只能照亮周围一小块地方。再往远处，世界就是一大块模糊的黑天鹅绒。马蹄声很响，像要把星星震下来。公主突然拉住卫队长，让他把马车停下。<br>“听，这是什么声音？像巨人的呼吸。”<br>“公主，这是海的声音。”<br>又前行了一段，公主看到两旁有许多在夜色中隐约可见的物体，像一根根大香蕉。<br>“那些是什么?”她问。<br>卫队长又停下车，取下车上的火把走到最近的一个旁边，“公主，你应该认识这个的。”<br>“船?”<br>“是的，公主，是船。”<br>“可船为什么在陆地上？”<br>“因为海里有饕餮鱼。”<br>在火把的光芒中可以看到，这艘船已经很旧了，船身被沙子埋住一半，露在外面的部分像巨兽的白骨。<br>“啊，看那里!”公主又指着前方惊叫，“好像有一条白色的大蛇!”<br>“不要怕公主，那不是蛇，是海浪，我们到海边了。”<br>公主和为她打伞的宽姨一起下车，她看到了大海。她以前只在画中见过海，那画的是蓝天下的蓝色海洋，与这夜空下的黑色海洋完全不同这泛着星光的博大与神秘，仿佛是另一个液态的星空。公主不由自主地向海走去，却被卫队长和宽姨拦住了。<br>“公主，离海太近危险。”卫队长说。<br>“我看前面水不深，能淹死我吗?”公主指指沙滩上的白浪说。<br>“海里有饕餮鱼，它们会把你撕碎吃掉的！”宽姨说。<br>卫队长拾起一块破船板，走上前去把船板扔到海中。船板在海面晃荡了儿下，很快附近一个黑影浮出水面向它扑去，由于大部分在水下，看不出那东西的大小、它身上的鳞片在火把的光中闪亮。紧接着又有三四个黑影飞快地游向船板，在水中争抢成一团，伴随着哗哗的水声，可以听到利齿发出的咔嚓咔嚓声，仅一转眼的工夫，黑影和船板都不见了。<br>“看到了吗?它们能在很短的时间里把一艘大船咬成碎片。”卫队长说。<br>“墓岛呢?”宽姨问。<br>“在那个方向，”卫队长指指黑暗的水天相连处，“夜里看不见，天一亮就能看见。”<br>他们在沙滩上露营。宽姨把伞交给卫队长打，从马车上拿下一个小木盆。<br>“公主呀，今天是不能洗澡了，可你至少该洗洗脸的。”<br>卫队长把伞交还给宽姨，说他去找水，就拿着盆消失在夜色中。<br>“他是个好小伙子。”宽姨打着哈欠说。<br>卫队长很快回来，不知从什么地方打来了一盆清水。宽姨为公主洗脸，她拿一块香皂在水中只蘸了一下，一声轻微的吱啦声后，盆面立刻堆满了雪白的泡沫，鼓出圆圆的一团，还不断地从盆沿溢出来。<br>卫队长盯着泡沫看了一会儿，对宽姨说：“让我看看那块香皂。”<br>宽姨从包裹中小心翼冀地拿出一块雪白的香皂，递给卫队长，“拿好了，它比羽毛还轻，一点儿分量都没有，一松手就飘走了。”<br>卫队长接过香皂，真的感觉不到一点儿分量，像拿着一团白色的影子。“这还真是赫尔辛根默斯肯香皂，现在还有这东西?”<br>“我只有两块了，整个王宫，我想整个王国，也只剩这最后两块了，是我早些年特意给公主留的。唉，赫尔辛根默斯肯的东西都是好东西，可惜现在越来越少了。”宽姨说着，把香皂拿回来小心地放回包裹中。<br>看着那团白泡沫，公主在出行后第一次回忆起王宫中的生活。每天晚上，在她那精美华丽的浴宫中，大浴池上就浮着一大团这样的泡沫，灯光从不同方向照来，大团泡沫忽而雪白，像从白天的天空中抓来的一朵云;忽而变幻出宽彩，像宝石堆成的，泡到那团泡沫中，公主会感到身体变得面条般柔软，感到自己在融化，成了泡沫的一部分，那舒服的感觉让她再也不想动弹，只能由女仆把她抱出去擦干，再抱她去床上睡觉。那种美妙的感觉可以一直持续到第二天早晨。<br>现在，公主用赫尔辛根默斯肯香皂洗过的脸很轻松很柔软，身上却僵硬而疲劳。随便吃了些东西后，她便在沙滩上躺下，开始时铺了一张毯子，后来发现直接躺到沙上更舒服。柔软的沙层带着白天阳光的温度，她感觉像被一只温暖的大手捧在手心，涛声像催眠曲，她很快睡着了。<br>不知过了多长时间，露珠公主被一阵铃声从无梦的酣睡中惊醒，那声音是从她上方旋转的黑伞中发出的。宽姨睡在她旁边，打伞的是卫队长，火把已经熄灭，夜色像天鹅绒般笼罩着一切，卫队长是星空背景前的一个剪影，只有他的盔甲映出星光，还可以看到海风吹起他的头发。伞在他的手中稳撼地旋转着，像一个小小的穹顶遮住了一半夜空。她看不见他的眼睛，但能感觉到他的目光，他与无数眨眼的星星一起看着自己。<br>“对不起公主，我刚才转得太快了。”卫队长低声说。<br>“现在什么时间了?”<br>“后半夜了。”<br>“我们离海好像远了。”<br>“公主，这是退潮海水后退了，明天早上还会涨起来。”<br>“你们轮流为我打伞吗?”<br>“是的，公主，宽姨打了一白天，我夜里多打一会儿。”<br>“你也驾了一天车，让我自己打一会儿伞，你也睡吧。”<br>说出这话后，露珠公主自己也有些吃惊，在她的记忆里，这是自己第一次为别人着想。<br>“那不行，公主，你的手那么细嫩，会磨起泡的，还是让我为你打伞吧。”<br>“你叫什么名字?”<br>同行已经一天，她现在才问他的名字。放在以前她会觉得很正常，甚至永远不问都很正常，但现在她为此有些内疚。<br>“我叫长帆。”<br>“帆？”公主转头看看，他们现在是在沙滩上的一艘大船旁边，这里可以避海风。与其他那些搁浅在海滩上的船不同，这艘船的桅杆还在，像一把指向星空的长剑。“帆是不是挂在这根长杆上的大布?”<br>“是的，公主，那叫桅杆，帆挂在上面，风吹帆推动船。”<br>“帆在海面上雪白雪白的，很好看。”<br>“那是在画中吧，真正的帆没有那么白的。”<br>“你好像是赫尔辛根默斯肯人?”<br>“是的，我父亲是赫尔辛根默斯肯的建筑师，在我很小的时候，他带着全家来到了这里。”<br>“你想回家吗，我是说赫尔辛根默斯肯?”<br>“不太想，我小时候就离开那里，记得不太清了，再说想也没用，现在永远也不可能离开无故事王国了。”<br>远处，海浪哗哗地喧响，仿佛在一遍遍地重复着长帆的话：永远不可能离开，永远不可能离开……<br>“给我讲讲外面世界的故事吧，我什么都不知道。”公主说。<br>“你不需要知道，你是无故事王国的公主，王国对你来说当然是无故事的。其实，公主，外面的人们也不给孩子们讲故事，但我的父母不一样，他们是赫尔辛根默斯肯人，他们还是给我讲了一些故事的。”<br>“其实父王说过，无故事王国从前也是有故事的。”<br>“是的……公主，你知道王国的周围都是海吧，王宫在王国的中心，朝任何一个方向走，最后都会走到海边，无故事王国就是一个大岛。”<br>“这我知道。”<br>“以前，王国周围的海不叫饕餮海，那时海中没有饕餮鱼，船可以自由地在海上航行，无故事王国和赫尔辛根默斯肯之间每天都有无数的船只来往。那时无故事王国其实是有故事王国，那时的生活与现在很不一样。”<br>“嗯?”<br>“那时生活中充满了故事，充满了变化和惊奇。那时，王国中有好几座繁华的城市，王宫的周围不是森林和田野，而是繁华的首都。城市中到处可见来自赫尔辛根默斯肯的奇珍异宝和奇异器具。无故事王国，哦不，故事王国的物产也源源不断地从海上运往赫尔辛根默斯肯。那时，人们的生活变幻莫测，像骑着快马在山间飞奔，时而冲上峰顶，时而跌入深谷，充满了机遇和危险。穷人可能一夜暴富，富豪也可能转眼赤贫，早晨醒来，谁也不知道今天要发生什么事，要遇到什么样的人。到处是刺激和惊喜。<br>“但有一天，一艘来自赫尔辛根默斯肯的商船带来一种珍奇的小鱼，这种鱼只有手指长，黑色的，貌不惊人，装在坚硬的铸铁水捅中。卖鱼的商人在王国的集市上表演，他将一把剑伸进铁捅中的水里，只听到一阵刺耳的‘咔嚓咔嚓’声，剑再抽出来时已被咬成了锯齿状。这种鱼叫饕餮鱼，是一种内陆的淡水鱼，生长在赫尔辛根默斯肯岩洞深处黑暗的水潭中。饕餮鱼在王国的市场上销路很好，因为它们的牙齿虽小，但像金钢石一样坚硬，可做钻头;它们的鳍创民锋利，能做箭头或刁、刀。于是，越来越多的饕餮鱼从赫尔辛根默斯肯运到了王国。在一次台风中，一艘运鱼船在王国沿海失事沉没，船上运载的二十多桶饕餮鱼全部倾倒进了海中。<br>“人们发现，饕餮鱼在海中能够飞快地生长，长得比在陆地上要大得多，能达到一人多长，同时繁殖极快，数量飞速增加。饕餮鱼开始捕食所有漂浮在海面上的东西，没来得及拖上岸的船，不管多大，都被啃成碎片，当一艘大船被饕餮鱼群围住时，它的船底很快被啃出大洞，但连沉没都未不及，就在海面上被咬成碎片，像融化掉一般。鱼群在故市王国的沿海环游，很快在王国周国的海中形成一道环形的屏障。<br>“故事三国就这样被周围海域中的饕餮鱼包图，沿海已成为死亡之地，不再有任何船只和风帆，王国被封闭起未，与赫尔辛根默斯肯和整个外部份界斯绝了一切联系，过起了自给自足的田园生活。繁华的城市消失了，变成小镇和牧场，生活日浙宁静平淡，不再有变化，不再有刺激和惊喜，昨天像今天，今天像明天。人们渐渐适应了这样的日子，不再向往其他的生活。对过去的记，就像来自赫尔辛根默斯肯的奇异物品那样日渐稀少，人们甚至有意地忘记过去，也忘记现在。总的来说就是再不要故事了，建立了一个无故事的生活，故事王国也就变成了无故事王国。”<br>露珠公主听得入了迷，长帆停了好久，她才问：“现在海洋上到处都有饕餮鱼吗?”<br>“不，只是无故事王国的沿海有，眼神好的人有时能看到海鸟浮在离岸很远的海面上捕食，那里没有饕餮鱼。海洋很大，无边无际。”<br>“就是说，世界除了无故事王国和赫尔辛根默斯肯，还有别的地方?”<br>“公主，你认为世界只有这两个地方吗?”<br>“小时候我的宫廷老师就是这么说的。”<br>“这话连他自己都不信。世界很大，海洋无边无际，有无数的岛屿，有的比王国小，有的比王国大；还有大陆。”<br>“什么是大陆?”<br>“像海洋一样广阔的陆地，骑着快马走几个月都走不到边。”<br>“世界那么大?”公主轻轻感叹，又突然问道，“你能看到我吗?”<br>“公主，我现在只能看到你的眼睛，那里面有星星。”<br>“那你就能看到我的向往，真想乘着帆船在海上航行，到很远很远的地方去。”<br>“不可能了，公主，我们永远不可能离开无故事王国，永远不能……你要是怕黑，我可以点上火把。”<br>“好的。”<br>火把点燃后，露珠公主看着卫队长，却发现他的目光投向了别的地万。<br>“你在看什么?”公主轻声问。<br>“那里，公主，你看那个。”<br>长帆指的是公主身边一小丛长在沙里的小草，草叶上有几颗小水珠，在火光中晶莹地闪亮。<br>“那叫露珠。”长帆说。<br>“哦，那是我吗？像我吗？”<br>“像你，公主，都像水晶一样美丽。”<br>“天亮后它们在太阳光下会更美的。”<br>卫队长发出一声叹息，很深沉，根本没有声音，但公主感觉到了。<br>“怎么了，长帆?”<br>“露珠在阳光下会很快蒸发消失。”<br>公主轻轻点点头，火光中她的目光黯然了，“那更像我了，这把伞一合上，我就会消失，我就是阳光下的雾珠。”<br>“我不会让你消失的，公主。”<br>“你知道，我也知道，我们到不了墓岛，也不可能把深水王子带回来。”<br>“要是那样，公主，我就永远为你打伞。”</p>
</blockquote>
<blockquote>
<h3 id="深水王子"><a href="#深水王子" class="headerlink" title="深水王子"></a>深水王子</h3><p>露珠公主再次醒来时，天已经亮了，大海由黑色变成了蓝色，但公主仍然感觉与画中见过的完全不同。曾被夜色掩盖的广阔现在一览无遗，在清晨的天光下，海面上一片空旷。但在公主的想象中，这空旷并不是饕餮鱼所致，海是为了她空着，就像王宫中公主的宫殿空着等她入住一样。夜里对长帆说过的那种愿望现在更加强烈，她想象着广阔的海面上出现一叶属于她的白帆，顺风漂去，消失在远方。<br>现在为她打伞的是宽姨，卫队长在前面的海滩上向她们打招呼，让她们过去。等她们走去后，他朝海的方向一指说：“看，那就是墓岛。”<br>公主首先看到的不是墓岛，而是站在小岛上的那个巨人，那显然就是深水王子。他顶天立地站在岛上，像海上的一座孤峰。他的皮肤是日晒的棕色，强健的肌肉像孤峰上的岩石，他的头发在海风飘荡，像峰顶的树丛。他长得很像冰沙，但比冰沙强壮，也没有后者的阴郁，他的目光和表情都给人一种大海般豁达的感觉。这时太阳还没有升起，但巨人的头顶已经沐浴在阳光中。金灿灿的，像着火似的。他用巨手搭凉棚眺望着远有那么一瞬间，公主感觉她和巨人的目光相遇了，就跳着大喊：<br>“深水哥哥!我是露珠!我是你的妹妹露珠!我们在这里!”<br>巨人没有反应，他的目光从这里扫过，移向别处，然后放下手，若有所思地摇摇头，转向另一个方向。<br>“他为什么注意不到我们?”公主焦急地问。<br>“谁会注意到远处的三只小蚂蚁呢?”卫队长说，然后转向宽姨，“我说深水王子是巨人吧，你现在看到了。”<br>“可我抱着他的时候他确实是一个小小的婴儿呀!怎么会长得这么高?不过巨人好啊，谁也挡不住他，他可以惩罚那些恶人，为公主找回画像了!”<br>“那首先得让他知道这里发生了什么事。”卫队长摇摇头说。<br>“我要过去，我们必须过去!到墓岛上去!”公主抓住长帆说。<br>“过不去的，公主，这么多年了，没有人能够登上墓岛，那岛上也没有人能回来。”<br>“真想不出办法吗?”公主急得流出了眼泪，“我们到这里来就是为了找他，你一定知道该怎么办的！”<br>看着公主泪眼婆娑，长帆很不安，“我真的没办法，到这里来是对的，你必须远离王宫，否则就是等死，但我当初就知道不可能去墓岛。也许……可以用信鸽给他送一封信。”<br>“那太好了，我们这就去找信鸽!”<br>“但那又有什么用呢?即使他收到了信，也过不来，他虽然是巨人，到海中也会被饕餮鱼撕碎的……先吃了早饭再想办法吧，我去准备。”<br>“哎呀，我的盆!”宽姨叫起来，由于涨潮，海水涌上了沙滩，把昨天晚上公主洗脸用的木盆卷到了海中。盆已经向海里漂出了一段距离，盆倒扣着，里面的洗脸水在海面泛起一片雪白的肥皂泡沫。可以看到有几条饕餮鱼正在向盆游去，它们黑色的鳍像利刀一样划开水面，眼看木盆就要在它们的利齿下粉身碎骨了。<br>但一件不可思议的事发生了：饕餮鱼没有去啃啮木盆，而是都游进了那片泡沫中，一接触泡沫，它们立刻停止游动，全都浮上了水面，凶悍之气荡然无存，全变成了一副懒洋洋的样子，有的慢慢摆动鱼尾，不是为了游动而是表示惬意；有的则露出白色的肚皮仰躺在水面上。<br>三个人吃惊地看了一会儿，公主说：“我知道它们的感觉，它们在泡沫中很舒服，浑身软软的像没有骨头一样，不愿意动。”<br>宽姨说：“赫尔辛根默斯肯的香皂确实是好东西，可惜只有两块了。”<br>卫队长说：“即使在赫尔辛根默斯肯，这种香皂也很珍贵。你们知道它是怎样造出来的吗？赫尔辛根默斯肯有一片神奇的树林，那些树叫魔泡树，都长了上千年，很高大。平时魔泡树没有什么特别之处，但如果刮起大风，魔泡树就会被吹出肥皂泡来，风越大吹出的泡越多，赫尔辛根默斯肯香皂就是用那种泡泡做成的。收集那些肥皂泡十分困难，那些泡泡在大风中飘得极快，加上它们是全透明的，你站在那里很难看清它们，只有跑得和它们一样快，才能看到它们。骑最快的马才能追上风中的泡泡，这样的快马在整个赫尔辛根默斯肯不超过十匹。当魔泡树吹出泡泡时，制肥皂的人就骑着快马顺风狂奔，在马上用一种薄纱网兜收集泡泡。那些泡泡有大有小，但即使最大的泡泡，被收集到网兜里破裂后，也只剩下肉眼都看不见的那么一小点儿。要收集几十万甚至上百万的泡泡才能造出一块香皂，但香皂中的每一个魔树泡如果再溶于水，就又能生发出上百万个泡泡，这就是香皂泡沫这么多的原因。魔泡树的泡泡都没有重量，所以真正纯的赫尔辛根默斯肯香皂也完全没重量，是世界上最轻的东西，但很贵重。宽姨的那些香皂可能是国王加冕时赫尔辛根默斯肯使团带来的赠礼，后来……”<br>长帆突然停止了讲述，若有所思地盯着海面。那里，在雪白的赫尔辛根默斯肯香皂的泡沫中，那几条饕餮鱼仍然懒散地躺浮着，在它们前，是完好无损的木盆。<br>“好像有一个办法到墓岛上去!”长帆指着海面上的木盆说，“你们想想，那要是一只小船呢?”<br>“想也别想!”宽姨大叫起来，“公主怎么能冒这个险?!”<br>“公主当然不能去，我去。”卫队长从海面收回目光，从他坚定的眼神中，公主看出他已经下定了决心。<br>“你一个人去，怎样让深水王子相信你?”公主说，她兴奋得脸颊通红，“我去，我必须去!”<br>“可就算你到了岛上，又怎么证明自己的身份?”卫队长打量着一身平民装束的公主说。<br>宽姨没有说话，她知道有办法。<br>“我们可以滴血认亲。”公主说。<br>“即使这样公主也不能去!这太吓人了!”宽姨说，但她的口气已经不是那么决绝。<br>“我待在这里就安全吗?”公主指着宽姨手中旋转着的黑伞说，“我们太引人注意了，冰沙很快会知道我们的行踪，在这里，我就是暂时逃过了那张画，也逃不脱禁卫军的追杀，到墓岛上反而安全些。”<br>于是他们决定冒险了。<br>卫队长从沙滩上找了一只最小的船，用马拖到水边，就在浪花刚舔到船首的地方。找不到帆，但从其他的船上找到两支旧桨。他让公主和打伞的宽姨上了船，将宽姨拿出来的赫尔辛根默斯肯香皂穿到剑上递给公主，告诉她船一下海就把香皂浸到水里。然后他向海里推船，一直推到水齐腰深的地方才跳上船全力划桨，小船载着三人向墓岛方向驶去。<br>饕餮鱼的黑鳍在周围的海面上出现，向小船围拢过来。公主坐在船尾，把穿在剑上的赫尔辛根默斯肯香皂浸到海水中，船尾立刻涌现一大团泡沫，在早晨的阳光中发出耀眼的白光，泡沫团迅速膨胀至一人多高，并在船尾保持这个高度，在后面则随着船的前行扩散开来，在海面形成雪白的一片。饕餮鱼纷纷游进泡沫浮在其中，像躺在雪白的毛绒毯上一样享受着无与伦比的舒适惬意。公主第一次这么近看饕餮鱼，它们除了肚皮通体乌黑，像钢铁做成的机器，但一进入泡沫就变得懒散温顺。小船在平静的海面上前进，后面拖曳了一条长长的泡沫尾迹，像一道落在海上的白云带。无数的饕餮鱼从两侧游过来进入泡沫中，像在进行一场云河中的朝圣。偶尔也有几条从前方游来的饕餮鱼啃几下船底，还把卫队长手中的木桨咬下了一小块，但它们很快就被后面的泡沫所吸引，没有造成大的破坏。看着船后海面上雪白的泡沫云河，以及陶醉其中的饕餮鱼，公主不由得想起了牧师讲过的天堂。<br>海岸渐渐远离，小船向墓岛靠近。<br>宽姨突然喊道：“你们看，深水王子好像矮了一些!”<br>公主转头望去，宽姨说得没错，岛上的王子仍是个巨人，但比在岸上看明显矮了一些，此时他仍背对着他们，眺望着别的方向。<br>公主收回目光，看着划船的长帆，他此时显得更加强健有力，强劲的肌肉块块鼓起，两支长桨在他手中像一对飞翔的翅膀，推动着小船平稳前行。这人似乎天生是一个水手，在海上显然比在陆地更加自如。<br>“王子看到我们了!”宽姨又喊道。墓岛上，深水王子转向了这边，一手指着小船的方向，眼中透出惊奇的目光，嘴还在动，像喊着什么。他肯定会感到惊奇，除了这只出现在死亡之海上的小船外，船后的泡沫扩散开来，向后宽度逐渐增大，从他那个高度看过去，海面上仿佛出现了一颗拖着雪白彗尾的彗星。<br>他们很快知道王子并非对他们喊话，他的脚下出现了几个正常身高的人。从这个距离上，他们看上去很小，脸也看不清，但肯定都在朝这个方向看，有的还在挥手。<br>墓岛原是个荒岛，没有原住民。二十年前，深水去岛上钓鱼时，陪同他的有一名监护官、一名王宫老师、几名护卫和仆从。他们刚上岛，成群的饕餮鱼就游到这片沿海，封死了他们回王国的航路。<br>他们发现，现在王子看上去又矮了一些，似乎小船距海岛越近，王子就越矮。<br>小船渐渐接近岛岸，可以看清那些正常身高的人了，他们共八个人，大部分都穿着和王子一样的用帆布做的粗糙衣服，其中有两个老者穿着王宫的制服，但都已经很破旧了，这些人大都挂着剑。他们向海滩跑来，王子远远地跟在后面，这时，他看(上)去仅有其他人的两倍高，不再是巨人了。<br>卫队长加速划行，小船冲向岛岸，一道拍岸浪像巨手把小船向前推，船身震动了一下，差点把公主颠下船去，船底触到了沙滩。那些已经跑到海滩上的人看着小船犹豫不前，显然是怕水中的饕餮鱼，但还是有四个人跑上前来，帮忙把船稳住，扶公主下船。<br>“当心，公主不能离开伞!”下船时宽姨高声说，同时使伞保持在公主上方，她这时打伞已经很熟练了，用一只手也能保持伞的旋转。<br>那些人毫不掩饰自己的惊奇，时而看看旋转的黑伞，时而看看小船经过的海面——那里，赫尔辛根默斯肯香皂的白沫和浮在海面的无数饕餮鱼形成了一条黑白相间的海路，连接着墓岛和王国海岸。<br>深水王子也走上前来，这时，他的身高与普通人无异，甚至比这群人中的两个高个子还矮一些。他看着来人微笑着，像一个宽厚的渔民，但公主却从他身上看到了父王的影子，她扔下剑，热泪盈眶地喊道：“哥哥，我是你的妹妹露珠!”<br>“你像我的妹妹。”王子微笑着，点点头，向公主伸出双手。但几个人同时阻止了公主的靠近，把三位来者与王子隔开，其中有人佩剑已出鞘，警惕地盯着刚下船的卫队长。后者没有理会这边的事，只是拾起公主扔下的剑察看，为了避免对方误会，他小心地握着剑尖，发现经过这段航程，那块穿在剑上的赫尔辛根默斯肯香皂只消耗了三分之一左右。<br>“你们必须证实公主的身份。”一位老者说，他身上破旧的制服打理得很整齐，脸上饱经风霜，但留着像模像样的胡须，显然在这孤岛岁月中他仍尽力保持着王国官员的仪表。“你们不认识我了吗?你是暗林监护官，你——”宽姨指指另一位老者，“是广田老师。”两位老者都点点头。广田老师说：“宽姨，你老了。”“你们也老了。”宽姨说着，腾出一只转伞的手抹眼泪。<br>暗林监护官不为所动，仍一丝不苟地说：“二十多年了，我们一点都不知道王国发生了什么，所以还是必须证实公主的身份，”他转向公主，“请问，您愿意滴血认亲吗?”<br>公主点点头。<br>“我觉得没必要，她肯定是我的�9妹。”王子说。<br>“殿下，必须这样做。”监护官说。<br>有人拿来两把很小的匕首，给监护官和老师每人一把。与这些人锈迹斑斑的佩剑不同，两把匕首寒光闪闪，像新的一样。公主伸出手来，监护官用匕首在她白嫩的食指上轻轻划了一下，用刀尖从破口取了一滴血。暗林老师也从王子的手指上取了血样，监护官从老师手中拿过匕首，小心翼翼地把刀尖上的两滴血混在一起，血立刻变成了纯蓝色。<br>“她是露珠公主。”监护官庄重地对王子说，然后同老师一起向公主鞠躬。其他的几个人都扶着剑柄单膝脆下，然后站起来闪到一边，让王子和公主兄妹拥抱在一起。<br>“小时候我抱过你，那时你才这么大。”王子比画着说。<br>公主向王子哭诉王国已经发生的事，王子握着她的手静静地听着，他那饱经风霜但仍然年轻的脸上表情一直从容镇定。<br>大家都围在王子和公主周围，静静地听着公主的讲述，只有卫队长在做着一件奇怪的事。他时而快步跑开，在海滩上跑到很远的地方看着王子，然后又跑回来从近前看他，如此反复好几次，后来宽姨拉住了他。<br>“还是我说得对，王子不是巨人吧。”宽姨指指王子低声说。<br>“他既是巨人又不是巨人。”卫队长也压低声音说，“是这样的：我们看一般的人，他离得越远在我们眼中就越小，是吧?但王子不是这样，不管远近，他在我们眼中的大小都是一样的，近看他是普通身高，远看还是这么高，所以远看就像巨人了。”<br>宽姨点点头，“好像真是这样。”<br>听完公主的讲述，深水王子只是简单地说：“我们回去。”<br>回王国的船只有两只，王子与公主一行三人坐在小船上，其余八人乘另一只更大些的船，是二十年前载着王子一行来墓岛的船，有些漏水，但还能短程行驶。在来时的航道中，泡沫消散了一些，但无数的饕餮鱼仍然浮在海面上很少动弹，有些饕餮鱼被船头撞上，或被桨碰到，也只是懒洋洋地扭动几下，没有更多的动作。大船破旧的帆还能用，在前面行驶，从漂浮一片的饕餮鱼群中为后面的小船开出一条路来。<br>“你最好还是把香皂放到海里，保险一些，万一它们醒过来怎么办？”宽姨看着船周围黑压压的饕餮鱼，心有余悸地说。<br>公主说：“它们一直醒着，只是很舒服，懒得动。香皂只刹一块半了，不要浪费，而且我以后再也不用它洗澡了。”<br>这时，前面的大船上有人喊道：“禁卫军!”<br>在远处王国的海岸上出现了一支马队，像黑压压的潮水般涌上海滩，马上骑士的盔甲和刀剑在阳光中闪亮。<br>“继续走。”深水王子镇定地说。<br>“他们是来杀我们的。”公主的脸色变得苍白。<br>“不要怕，没事的。”王子拍拍公主的手说。<br>露珠公主看着哥哥，现在她知道他更适合当国王。<br>由于是顺风，尽管航道上有懒洋洋漂浮着的饕餮鱼阻碍，回程也快了许多。当两艘船几乎同时靠上海滩时，禁卫军的马阵围拢过来，密集地挡在他们面前，像一堵森严的墙壁。公主和宽姨都大惊失色，但经验丰富的卫队长却把提着的心多少放下一些，他看到对方的剑都在鞘中，长矛也都竖直着；更重要的是，他看到了那些马上的禁卫军士兵的眼睛，他们都身着重甲，面部只露出双眼，但那些眼睛越过他们盯着海面上那漂浮着饕餮鱼的泡沫航道，目光中都露出深深的敬畏。一名军官翻身下马，向刚靠岸的船跑来。大船上的人都跳下船，监护官、老师和几名执剑的卫士把王子和公主档在后面。<br>“这是深水王子和露珠公主，不得无礼!”监护官暗林对禁卫军举起一只手臂大声说。<br>跑过来的军官一手扶着插在沙滩上的剑，对王子和公主行单膝礼，“我们知道，但我们奉命追杀公主。”<br>“露珠公主是合法的王位继承人！而冰沙是谋害国王的逆绒！你们怎么能听他的调遣？！”<br>“我们知道，所以我们不会执行这个命令，但，冰沙王子已经于昨天下午加冕为国王，所以，禁卫军现在也不知道该听谁的指挥。”<br>监护官还想说什么，但深水王子从后面走上前来制止了他，王子对军官说：“这样吧，我和公主与你们一起回王宫，等见到冰沙后，把事情做个了结。”<br>在王宫最豪华的宫殿中，头戴王冠的冰沙正在同忠于他的大臣们纵酒狂欢。突然有人来报，说深水王子和寨珠公主统帅禁卫军从海岸急速向王宫而来，再有一个时辰就到了。宫殿中顿时陷入一片死寂。<br>“深水?他是怎么过海的?难道他长了翅膀?”冰沙自语道，但并没有像其他人那样面露惊恐，“没什么，禁卫军不会受深水和露珠指挥，除非我死了……针眼画师!”<br>随着冰沙的召唤，针眼画师从暗处无声地走出，他仍然穿着那身灰斗篷，显得更瘦小了。<br>“你，带上雪浪纸和绘画工具，骑快马去深水来的方向，看他一眼，然后把他画下来。你见到深水很容易，不用靠近他，他在天边一出现你就能远远看到的。”<br>“是，我的王。”针眼低声说，然后像老鼠一样无声地离去了。<br>“至于露珠，一个女孩子，成不了大气候，我会尽快把她的那把伞抢走的。”冰沙说着，又端起酒杯。<br>宾会在压抑的气氛中结束，大臣们忧心仲钟地离去，只剩下冰沙一人阴郁地坐在空荡荡的大厅中。<br>不知过了多长时间，冰沙看到针眼画师走了进来，他的心立刻提了起不，不是因为针眼两手空空，也不是因为针眼的样子——画师右上去并没有什么变化，仍是那副小心翼翼的敏感模样，而是因为他听到画师的脚步声。以前，画师走路悄无声息，像灰鼠一般从地面滑过，但这一刻，冰沙听到他发出了吧嗒吧嗒的脚步声，像难以抑制的心跳。<br>“我的王，我见到了深水王子，但我不能把他画下来。”针眼低着头说。“难道他真的长了翅膀?”冰沙冷冷地问。“如果是那样我也能画下他，我能把他翅膀的每一根羽毛都画得栩栩如生.但，我的王，深水王子没有长翅膀，比那更可怕：他不符合透视原理。”<br>“什么是透视?”<br>“世界上所有的景物，在我们的视野中都是近大远小，这就是透视原理。我是西洋画派的画师，西洋画派遵循透视原理，所以我不可能画出他。”<br>“有不遵循透视原理的画派吗?”<br>“有，东方画派，我的王，你看，那就是。”针眼指指大厅墙上挂着的一幅卷轴水墨画，画面上是淡雅飘逸的山水，大片的留白似雾似水，与旁边那些浓墨重彩的油画风格迥异，“你可以看出，那幅画是不讲究透视的。可是我没学过东方画派，空灵画师不肯教我，也许他想到了这一天。”<br>“你去吧。”王子面无表情地说。<br>“是，我的王，深水王子就要到王宫了，他会杀了我，也会杀了你。但我不会等着让他杀死，我将自我了断，我要画出一幅登峰造极的杰作，用我的生命。”针眼画师说完就走了，他离去时的脚步再次变得悄无声息。<br>冰沙招来了侍卫，说：“拿我的剑来。”<br>外面传来密集的马蹄声，开始隐隐约约，但很快逼近，如暴雨般急骤，最后在宫殿外面戛然而止。<br>冰沙站起身，提剑走出宫殿。他看到深水王子正走上宫殿前长长的宽石阶，露珠公主跟在他后面，宽姨为她打着黑伞。在石阶下面的广场上，是黑压压的禁卫军阵列，军队只是沉默地等待，没有明确表示支持哪一方。冰沙第一眼看到深水王子时，他有普通人的一倍身高，但随着他在台阶上越走越近，身高也在冰沙的眼中渐渐降低。<br>有那么一瞬间，冰沙的思绪回到了二十多年前的童年。那时，他已经知道了饕餮鱼群正在游向墓岛海域，但还是诱骗深水去墓岛钓鱼。当时父王在焦虑中病倒了，他告诉深水，墓岛有一种鱼，做成的鱼肝油能治好父王的病。一向稳重的深水竞然相信了他，结果如他所愿一去不返，王国里没人知道真相，这一直是他最得意的一件事。<br>冰沙很快打断思绪回到现实，深水已经走上宫殿前宽阔的平台，他的身高已与正常人差不多了。<br>冰沙看着深水说：“我的哥哥，欢迎你和妹妹回来，但你们要明白，这是我的王国，我是国王，你们必须立刻宣布臣服于我。”<br>深水一手按在腰间生铸佩剑的剑柄上，一手指着冰沙说：“你犯下了不可饶怒的罪行!”<br>冰沙冷冷一笑，“针眼不能画出你的画像，我的利剑却可以刺穿你的心脏!”说着他拔剑出鞘。<br>冰沙与深水的剑术不相上下，但由于后者不符合透视原理，冰沙很难准确判断自己与对手的距离，处于明显劣势。决斗很快结束，冰沙被深水一剑刺穿胸膛，从高高的台阶上滚下去，在石阶上拖出一条长长的血迹。<br>禁卫军欢呼起来，他们宣布忠于深水王子和露珠公主。<br>与此同时，卫队长在王宫中搜寻针眼画师。有人告诉他，画师去了自己的画室。画室位于王宫僻静的一角，平时戒备森严，但由于王宫中突发的变故，守卫大部分离去，只留下了一个哨兵。此人原是长帆的部下，说针眼在半个时辰前就进了画室，一直待在里而没有出来。卫队长于是破门而入。<br>画室没有窗户，两个银烛台上的蜡烛大部分已经燃尽，使这里像地堡一样阴冷。卫队长没有看到针眼画师，这里空无一人，但他看到了画架上的一幅画，是刚刚完成的，颜料还未干，这是针眼的自画像。确实是一幅精妙绝伦的杰作，画面像一扇通向另一个世界的窗口，针眼就在窗的另一边望着这个世界。尽管雪浪纸翘起的一角证明这只足一幅没有生命的画，卫队长还是尽力避开画中人那犀利的目光。<br>长帆环顾四周，看到了墙上挂着一排画像，有国王、王后和忠于他们的大臣，他一眼就从中认出了露珠公主的画像。画中的公主让他感到这阴暗的画室如天国一般明亮起来，画中人的眼睛摄住了他的魂，使他久久陶醉其中。但长帆最后还是清醒了，他取下画，拆掉画框，把画幅卷起来，毫不扰豫地在蜡烛上点燃了。<br>画刚刚烧完，门开了，现实中的露珠公主走了进来，她仍然穿着那身朴素的平民衣服，自己打着黑伞。<br>“宽姨呢?”长帆问。<br>“我没让她来，我有话要对你说。”<br>“你的画像已经烧了。”长帆指指地上仍然冒着红光的灰烬说，“不用打伞了。”<br>公主让手中的伞转速慢下来，很快出现了夜莺的鸣叫声，随着伞面的下垂，鸟鸣声越来越大，也越来越急促，最后由夜莺的叫声变成寒鸽的嘶鸣，那是死神降临前的最后警告。当伞最后合上时，随着伞沿那几颗石球吧嗒的碰撞，伞安静下来。<br>公主安然无恙。<br>卫队长看着公主，长长地出了一口气，又低头看看灰烬，“可惜了，是幅好画，真该让你看看，但我不敢再拖下去了……画得真美。”<br>“比我还美吗?”<br>“那就是你。”长帆深情地说。<br>公主拿出了那一块半赫尔辛根默斯肯香皂，她一松手，没有重量的雪白香皂就像羽毛似的飘浮在空气中。<br>“我要离开王国，去大海上航行，你愿意跟我去吗?”公主问。<br>“什么?深水王子不是已经宣布，你明天要加冕为女王吗?他还说他会全力辅佐你的。”<br>公主摇摇头，“哥哥比我更适合当国王，再说，如果不是被困墓岛，王位本来就应该由他继承。他如果成为国王，站在王宫的高处，全国都能看到他。而我，我不想当女王，我觉得外面比王宫里好，我也不想一辈子都待在无故事王国，想到有故事的地方去。”<br>“那种生活艰难又危险。”<br>“我不怕。”公主的双眼在烛光中焕发出生命的光芒，让长帆感到周围又亮了起来。<br>“我当然更不怕，公主我可以跟着你到海的尽头，到世界尽头。”<br>“那我们就是最后两个走出王国的人了。”公主说着，抓住了那一块半飘浮的香皂。<br>“这次我们乘帆船。”<br>“对，雪白的帆。”<br>第二天早晨，在王国的另一处海岸上，有人看到海中出现了一张白帆，那艘帆船后面拖曳着一道白云般的泡沫，在朝阳中驶向远方。<br>以后，王国中的人们再也没有得到露珠公主和长帆的消息。事实上王国得不到任何外界的消息，公主带走了王国中最后一块半赫尔辛根默斯肯香皂，再也没有人能够冲破饕餮鱼的封锁。但没有人抱怨，人们早已习惯了这样的生活，这个故事结束后，无故事王国永远无故事了。<br>但有时夜深人静，也有人讲述不是故事的故事，那是对露珠公主和长帆经历的想象。每个人的想象都不一样，但人们都认为他俩到过无数神奇的国度，还到过像大海一样广阔的陆地，他们永远在航行和旅途中，不管走到哪里，他们总是幸福地生活在一起。</p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>从获取微信小程序码说起</title>
    <url>/2021/06/12/wxacode/</url>
    <content><![CDATA[<p>微信官方对于小程序码的获取可以查看连接<a href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/qr-code.html">https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/qr-code.html</a></p>
<p>接口B，可以生成不受数量限制的小程序码，并且支持不太长的path和不超过32字符的参数。这样的话，就可以使用path和对应的参数来做一些事情。</p>
<a id="more"></a>

<p>接口B的介绍，可以查看<a href="https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/qr-code/wxacode.getUnlimited.html">https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/qr-code/wxacode.getUnlimited.html</a></p>
<p>简单来说，生成小程序码，是访问网址<code>https://api.weixin.qq.com/wxa/getwxacodeunlimit?access_token=ACCESS_TOKEN</code>，并发起 post 请求，请求参数是一个 json 字符串，json 字符串的具体说明可以查看<a href="https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/qr-code/wxacode.getUnlimited.html">接口B的说明</a></p>
<p>我从官网摘下来了</p>
<table>
<thead>
<tr>
<th align="center">属性</th>
<th align="center">类型</th>
<th align="center">默认值</th>
<th align="center">必填</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">access_token</td>
<td align="center">string</td>
<td align="center"></td>
<td align="center">是</td>
<td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/access-token/auth.getAccessToken.html">接口调用凭证</a></td>
</tr>
<tr>
<td align="center">scene</td>
<td align="center">string</td>
<td align="center"></td>
<td align="center">是</td>
<td align="center">最大32个可见字符，只支持数字，大小写英文以及部分特殊字符：!#$&amp;’()*+,/:;=?@-._~，其它字符请自行编码为合法字符（因不支持%，中文无法使用 urlencode 处理，请使用其他编码方式）</td>
</tr>
<tr>
<td align="center">page</td>
<td align="center">string</td>
<td align="center">主页</td>
<td align="center">否</td>
<td align="center">必须是已经发布的小程序存在的页面（否则报错），例如 pages/index/index,   根路径前不要填加 /,不能携带参数（参数请放在scene字段里），如果不填写这个字段，默认跳主页面</td>
</tr>
<tr>
<td align="center">width</td>
<td align="center">number</td>
<td align="center">430</td>
<td align="center">否</td>
<td align="center">小程序码宽度，单位是px，最小280px，最大 1280px</td>
</tr>
<tr>
<td align="center">auto_color</td>
<td align="center">boolean</td>
<td align="center">false</td>
<td align="center">否</td>
<td align="center">自动配置线条颜色，如果颜色依然是黑色，则说明不建议配置主色调，默认 false</td>
</tr>
<tr>
<td align="center">line_color</td>
<td align="center">Object</td>
<td align="center">{“r”:0,”g”:0,”b”:0}</td>
<td align="center">否</td>
<td align="center">auto_color 为   false 时生效，使用 rgb 设置颜色   例如 {“r”:”xxx”,”g”:”xxx”,”b”:”xxx”} 十进制表示</td>
</tr>
<tr>
<td align="center">is_hyaline</td>
<td align="center">boolean</td>
<td align="center">false</td>
<td align="center">否</td>
<td align="center">是否需要透明底色，为   true 时，生成透明底色的小程序</td>
</tr>
</tbody></table>
<p>access_token 是使用小程序的 appid 和 appsecret 生成的，可以查看<a href="https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/access-token/auth.getAccessToken.html">接口调用凭证</a></p>
<p>简单来说，就是访问使用 appid 和 appsecret 拼接而成的 <code>https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=APPID&amp;secret=APPSECRET</code> ，发起 Get 请求，appid和appsecret 正确的情况下，会返回一个 json 字符串。</p>
<p>本文使用 libcurl 来实现访问微信服务器并最后获得小程序码的步骤。</p>
<h2 id="libcurl-发起-post-请求和-get-请求"><a href="#libcurl-发起-post-请求和-get-请求" class="headerlink" title="libcurl 发起 post 请求和 get 请求"></a>libcurl 发起 post 请求和 get 请求</h2><p>为了方便操作，建议使用linux操作系统，Windows可能会面临一系列的 libcurl 及其库的编译，不熟悉的情况下，操作是十分繁琐的。</p>
<p>下面的实现是参考了 libcurl 的sample来实现的</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;curl/curl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;memory.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __cplusplus</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> <span class="keyword">bool</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> true 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> false 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// __cplusplus</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*存储以POST方式需要发送的数据*/</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Request</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span>* readptr;</span><br><span class="line">    <span class="keyword">size_t</span> sizeleft;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Response</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span>* response;</span><br><span class="line">    <span class="keyword">size_t</span> size;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*发送数据的回调函数*/</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">size_t</span> <span class="title">send_callback</span><span class="params">(<span class="keyword">char</span>* dest, <span class="keyword">size_t</span> size, <span class="keyword">size_t</span> nmemb, <span class="keyword">void</span>* userp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Request</span>* <span class="title">wt</span> = (<span class="title">struct</span> <span class="title">Request</span>*)<span class="title">userp</span>;</span></span><br><span class="line">    <span class="keyword">size_t</span> buffer_size = size * nmemb;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (wt-&gt;sizeleft) &#123;</span><br><span class="line">        <span class="comment">/* copy as much as possible from the source to the destination */</span></span><br><span class="line">        <span class="keyword">size_t</span> copy_this_much = wt-&gt;sizeleft;</span><br><span class="line">        <span class="keyword">if</span> (copy_this_much &gt; buffer_size)</span><br><span class="line">            copy_this_much = buffer_size;</span><br><span class="line">        <span class="built_in">memcpy</span>(dest, wt-&gt;readptr, copy_this_much);</span><br><span class="line"></span><br><span class="line">        wt-&gt;readptr += copy_this_much;</span><br><span class="line">        wt-&gt;sizeleft -= copy_this_much;</span><br><span class="line">        <span class="keyword">return</span> copy_this_much; <span class="comment">/* we copied this many bytes */</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">/* no more data left to deliver */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*接收数据的回调函数*/</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">size_t</span> <span class="title">receive_callback</span><span class="params">(<span class="keyword">void</span>* data, <span class="keyword">size_t</span> size, <span class="keyword">size_t</span> nmemb, <span class="keyword">void</span>* userp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">size_t</span> realsize = size * nmemb;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Response</span>* <span class="title">mem</span> = (<span class="title">struct</span> <span class="title">Response</span>*)<span class="title">userp</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span>* ptr = (<span class="keyword">char</span>*)<span class="built_in">realloc</span>(mem-&gt;response, mem-&gt;size + realsize + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (ptr == <span class="literal">NULL</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;  <span class="comment">/* out of memory! */</span></span><br><span class="line"></span><br><span class="line">    mem-&gt;response = ptr;</span><br><span class="line">    <span class="built_in">memcpy</span>(&amp;(mem-&gt;response[mem-&gt;size]), data, realsize);</span><br><span class="line">    mem-&gt;size += realsize;</span><br><span class="line">    mem-&gt;response[mem-&gt;size] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> realsize;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*如果定义了 USE_SPECCIFIC_CACERT_PEM ，那么函数第一个参数应该指向一个 catcert.pem 证书*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> USE_SPECCIFIC_CACERT_PEM</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">handle_https_callback</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* certpem, <span class="keyword">const</span> <span class="keyword">char</span>* url, <span class="keyword">const</span> <span class="keyword">char</span>* parameter, <span class="keyword">size_t</span> size_send, <span class="keyword">void</span>** responsedata, <span class="keyword">size_t</span>* size_receive, <span class="keyword">char</span>** content_type, <span class="keyword">bool</span> post, <span class="keyword">bool</span> verbose)</span></span></span><br><span class="line"><span class="function"><span class="meta">#<span class="meta-keyword">else</span></span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">handle_https_callback</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* url, <span class="keyword">const</span> <span class="keyword">char</span>* parameter, <span class="keyword">size_t</span> size_send, <span class="keyword">void</span>** responsedata, <span class="keyword">size_t</span>* size_receive, <span class="keyword">char</span>** content_type, <span class="keyword">bool</span> post, <span class="keyword">bool</span> verbose)</span></span></span><br><span class="line"><span class="function"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// USE_SPECCIFIC_CACERT_PEM</span></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    assert(url);</span><br><span class="line">    CURL* curl;</span><br><span class="line">    CURLcode res;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Request</span> <span class="title">request</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Response</span> <span class="title">response</span> = &#123;</span> <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">curl_slist</span>* <span class="title">headers</span> = <span class="title">NULL</span>;</span></span><br><span class="line">    <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*如果parameter非空，那么有数据要发送，就申请相应的发送数据的空间*/</span></span><br><span class="line">    <span class="keyword">bool</span> hasParameter = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">bool</span> hasParameter = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (parameter != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        hasParameter = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">size_t</span> len = <span class="built_in">strlen</span>(parameter);</span><br><span class="line">        <span class="keyword">size_t</span> min = len &lt; size_send ? len : size_send;</span><br><span class="line">        request.readptr = (<span class="keyword">char</span> *)parameter;</span><br><span class="line">        request.sizeleft = min;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    res = curl_global_init(CURL_GLOBAL_DEFAULT);</span><br><span class="line">    <span class="keyword">if</span> (res != CURLE_OK)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;curl_global_init() failed: %s\n&quot;</span>, curl_easy_strerror(res));</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    curl = curl_easy_init();</span><br><span class="line">    <span class="keyword">if</span> (curl)</span><br><span class="line">    &#123;</span><br><span class="line">        curl_easy_setopt(curl, CURLOPT_URL, url);</span><br><span class="line">        <span class="keyword">if</span> (post)</span><br><span class="line">        &#123;</span><br><span class="line">            curl_easy_setopt(curl, CURLOPT_POST, <span class="number">1L</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*如果有数据需要发送，就设置相应的数据发送回调函数，要发送的数据和数据长度*/</span></span><br><span class="line">        <span class="keyword">if</span> (hasParameter)</span><br><span class="line">        &#123;</span><br><span class="line">            curl_easy_setopt(curl, CURLOPT_READFUNCTION, send_callback);</span><br><span class="line">            curl_easy_setopt(curl, CURLOPT_READDATA, &amp;request);</span><br><span class="line">            curl_easy_setopt(curl, CURLOPT_POSTFIELDSIZE, (<span class="keyword">long</span>)request.sizeleft);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, receive_callback);</span><br><span class="line">        curl_easy_setopt(curl, CURLOPT_WRITEDATA, (<span class="keyword">void</span>*)&amp;response);</span><br><span class="line"></span><br><span class="line">        headers = curl_slist_append(headers, <span class="string">&quot;Content-Type: application/json&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*如果定义了 USE_SPECCIFIC_CACERT_PEM ，那么设置SSL认证证书*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> USE_SPECCIFIC_CACERT_PEM</span></span><br><span class="line">        curl_easy_setopt(curl, CURLOPT_CAINFO, certpem)</span><br><span class="line"><span class="meta">#<span class="meta-keyword">elif</span> defined(DISABLE_CURL_SSL_VERIFY) <span class="comment">// 如果定义了 DISABLE_CURL_SSL_VERIFY 证书认证，那么就设置curl不强制认证服务器</span></span></span><br><span class="line">        curl_easy_setopt(curl, CURLOPT_SSL_VERIFYPEER, <span class="literal">false</span>);</span><br><span class="line">        curl_easy_setopt(curl, CURLOPT_SSL_VERIFYHOST, <span class="number">0</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// USE_SPECCIFIC_CACERT_PEM</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (verbose)</span><br><span class="line">        &#123;</span><br><span class="line">            curl_easy_setopt(curl, CURLOPT_VERBOSE, <span class="number">1L</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        res = curl_easy_perform(curl);</span><br><span class="line">        <span class="keyword">if</span> (res == CURLE_OK)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">long</span> http_code = <span class="number">0</span>;</span><br><span class="line">            curl_easy_getinfo(curl, CURLINFO_RESPONSE_CODE, &amp;http_code);</span><br><span class="line">            <span class="keyword">if</span> (http_code == <span class="number">200</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">/*curl_easy_cleanup(curl) 会释放掉 tmp_content_type*/</span></span><br><span class="line">                <span class="keyword">char</span>* tmp_content_type = <span class="literal">NULL</span>;</span><br><span class="line">                curl_easy_getinfo(curl, CURLINFO_CONTENT_TYPE, &amp;tmp_content_type);</span><br><span class="line">                <span class="keyword">if</span>(tmp_content_type)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">size_t</span> tmplen = <span class="built_in">strlen</span>(tmp_content_type);</span><br><span class="line">                    *content_type = <span class="built_in">malloc</span>(tmplen + <span class="number">1</span>);</span><br><span class="line">                    <span class="built_in">memset</span>(*content_type, <span class="number">0</span>, tmplen + <span class="number">1</span>);</span><br><span class="line">                    <span class="built_in">memcpy</span>(*content_type, tmp_content_type, tmplen);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">/*用户需要自行释放 responsedata */</span></span><br><span class="line">                *responsedata = response.response;</span><br><span class="line">                *size_receive = response.size;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                result = <span class="number">-2</span>;</span><br><span class="line">                <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;net work error with http code %ld&quot;</span>, http_code);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            result = <span class="number">2</span>;</span><br><span class="line">            <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;curl_easy_perform() failed: %s\n&quot;</span>, curl_easy_strerror(res));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        curl_slist_free_all(headers);</span><br><span class="line">        curl_easy_cleanup(curl);</span><br><span class="line">    &#125;</span><br><span class="line">    curl_global_cleanup();</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line">    <span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// __cplusplus</span></span></span><br></pre></td></tr></table></figure>
<p>函数</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">handle_https_callback</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* url, <span class="keyword">const</span> <span class="keyword">char</span>* parameter, <span class="keyword">size_t</span> size_send, <span class="keyword">void</span>** responsedata, <span class="keyword">size_t</span>* size_receive, <span class="keyword">char</span>** content_type, <span class="keyword">bool</span> post, <span class="keyword">bool</span> verbose)</span></span></span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th align="center">属性</th>
<th align="center">参数</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">传入参数</td>
<td align="center">url</td>
<td align="center">想要访问的url</td>
</tr>
<tr>
<td align="center">传入参数</td>
<td align="center">post</td>
<td align="center">是否发起 post</td>
</tr>
<tr>
<td align="center">传入参数</td>
<td align="center">parameter</td>
<td align="center">如果以 post 方式发起请求，parameter 是想要发送的数据，<br> 如果不是以 post 方式发起，此参数为 NULL</td>
</tr>
<tr>
<td align="center">传入参数</td>
<td align="center">size_send</td>
<td align="center">要发送的数据长度，实际上发送的数据长度以 parameter 的<br>长度和 size_send 中去较小值</td>
</tr>
<tr>
<td align="center">传出参数</td>
<td align="center">responsedata</td>
<td align="center">服务器发送回来的数据</td>
</tr>
<tr>
<td align="center">传出参数</td>
<td align="center">size_receive</td>
<td align="center">服务器发送回来的数据的长度</td>
</tr>
<tr>
<td align="center">传出参数</td>
<td align="center">content_type</td>
<td align="center">如果是获取 access_token ，那么这里的 content_type 应该<br>是 “application/json; encoding=utf-8”,如果是小程序码，那么这里<br>应该是”Image/jpeg”或者别的类型的content type</td>
</tr>
<tr>
<td align="center">传入参数</td>
<td align="center">verbose</td>
<td align="center">设置是否打印 curl 调用过程中的信息</td>
</tr>
</tbody></table>
<p>常见的 Content-Type 可能有以下这些(摘自 <a href="https://github.com/yhirose/cpp-httplib">cpp-httplib</a> 的 README)</p>
<table>
<thead>
<tr>
<th align="left">Extension</th>
<th align="left">MIME Type</th>
<th align="left">Extension</th>
<th align="left">MIME Type</th>
</tr>
</thead>
<tbody><tr>
<td align="left">css</td>
<td align="left">text/css</td>
<td align="left">mpga</td>
<td align="left">audio/mpeg</td>
</tr>
<tr>
<td align="left">csv</td>
<td align="left">text/csv</td>
<td align="left">weba</td>
<td align="left">audio/webm</td>
</tr>
<tr>
<td align="left">txt</td>
<td align="left">text/plain</td>
<td align="left">wav</td>
<td align="left">audio/wave</td>
</tr>
<tr>
<td align="left">vtt</td>
<td align="left">text/vtt</td>
<td align="left">otf</td>
<td align="left">font/otf</td>
</tr>
<tr>
<td align="left">html, htm</td>
<td align="left">text/html</td>
<td align="left">ttf</td>
<td align="left">font/ttf</td>
</tr>
<tr>
<td align="left">apng</td>
<td align="left">image/apng</td>
<td align="left">woff</td>
<td align="left">font/woff</td>
</tr>
<tr>
<td align="left">avif</td>
<td align="left">image/avif</td>
<td align="left">woff2</td>
<td align="left">font/woff2</td>
</tr>
<tr>
<td align="left">bmp</td>
<td align="left">image/bmp</td>
<td align="left">7z</td>
<td align="left">application/x-7z-compressed</td>
</tr>
<tr>
<td align="left">gif</td>
<td align="left">image/gif</td>
<td align="left">atom</td>
<td align="left">application/atom+xml</td>
</tr>
<tr>
<td align="left">png</td>
<td align="left">image/png</td>
<td align="left">pdf</td>
<td align="left">application/pdf</td>
</tr>
<tr>
<td align="left">svg</td>
<td align="left">image/svg+xml</td>
<td align="left">mjs, js</td>
<td align="left">application/javascript</td>
</tr>
<tr>
<td align="left">webp</td>
<td align="left">image/webp</td>
<td align="left">json</td>
<td align="left">application/json</td>
</tr>
<tr>
<td align="left">ico</td>
<td align="left">image/x-icon</td>
<td align="left">rss</td>
<td align="left">application/rss+xml</td>
</tr>
<tr>
<td align="left">tif</td>
<td align="left">image/tiff</td>
<td align="left">tar</td>
<td align="left">application/x-tar</td>
</tr>
<tr>
<td align="left">tiff</td>
<td align="left">image/tiff</td>
<td align="left">xhtml, xht</td>
<td align="left">application/xhtml+xml</td>
</tr>
<tr>
<td align="left">jpeg, jpg</td>
<td align="left">image/jpeg</td>
<td align="left">xslt</td>
<td align="left">application/xslt+xml</td>
</tr>
<tr>
<td align="left">mp4</td>
<td align="left">video/mp4</td>
<td align="left">xml</td>
<td align="left">application/xml</td>
</tr>
<tr>
<td align="left">mpeg</td>
<td align="left">video/mpeg</td>
<td align="left">gz</td>
<td align="left">application/gzip</td>
</tr>
<tr>
<td align="left">webm</td>
<td align="left">video/webm</td>
<td align="left">zip</td>
<td align="left">application/zip</td>
</tr>
<tr>
<td align="left">mp3</td>
<td align="left">audio/mp3</td>
<td align="left">wasm</td>
<td align="left">application/wasm</td>
</tr>
</tbody></table>
<h2 id="获取-access-token"><a href="#获取-access-token" class="headerlink" title="获取 access_token"></a>获取 access_token</h2><p>基于上面的使用 libcurl 发起 post 和 get 请求，可以很容以的再封装一下，成为根据 appid 和 appsecret 来获取小程序的 access_token 的实现。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 为了方便对json处理，这里使用 rapidjson</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;rapidjson/document.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;rapidjson/writer.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;rapidjson/stringbuffer.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> USE_SPECCIFIC_CACERT_PEM</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_wxacode_access_token</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* certpem, <span class="keyword">const</span> <span class="keyword">char</span>* appid, <span class="keyword">const</span> <span class="keyword">char</span>* appsecret, <span class="keyword">char</span>** access_token, <span class="keyword">bool</span> verbose)</span></span></span><br><span class="line"><span class="function"><span class="meta">#<span class="meta-keyword">else</span></span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_wxacode_access_token</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* appid, <span class="keyword">const</span> <span class="keyword">char</span>* appsecret, <span class="keyword">char</span>** access_token, <span class="keyword">bool</span> verbose)</span></span></span><br><span class="line"><span class="function"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// USE_SPECCIFIC_CACERT_PEM</span></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    assert(appid);</span><br><span class="line">    assert(appsecret);</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span>* wxacode_domain = <span class="string">&quot;https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=&quot;</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span>* secret_param = <span class="string">&quot;&amp;secret=&quot;</span>;</span><br><span class="line">    <span class="keyword">size_t</span> url_len = <span class="built_in">strlen</span>(wxacode_domain) + <span class="built_in">strlen</span>(appid) + <span class="built_in">strlen</span>(secret_param) + <span class="built_in">strlen</span>(appsecret);</span><br><span class="line">    <span class="keyword">char</span>* url = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(url_len + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (!url)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;<span class="comment">/*out of mempry*/</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(url, <span class="number">0</span>, url_len + <span class="number">1</span>);</span><br><span class="line">    sprintf_s(url, url_len + <span class="number">1</span>, <span class="string">&quot;%s%s%s%s&quot;</span>, wxacode_domain, appid, secret_param, appsecret);</span><br><span class="line">    <span class="keyword">if</span> (verbose)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;access to url:%s\r\n&quot;</span>, url);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span>* response = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">char</span>* content_type = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">size_t</span> len = <span class="number">0</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> USE_SPECCIFIC_CACERT_PEM</span></span><br><span class="line">    <span class="keyword">int</span> result = handle_https_callback(certpem, url, <span class="literal">false</span>, <span class="literal">NULL</span>, <span class="number">0</span>, (<span class="keyword">void</span>**)&amp;response, &amp;len, &amp;content_type, verbose);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">    <span class="keyword">int</span> result = handle_https_callback(url, <span class="literal">false</span>, <span class="literal">NULL</span>, <span class="number">0</span>, (<span class="keyword">void</span> **)&amp;response, &amp;len, &amp;content_type, verbose);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// USE_SPECCIFIC_CACERT_PEM</span></span></span><br><span class="line">    <span class="keyword">bool</span> get_access_token = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (result == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strstr</span>(content_type, <span class="string">&quot;application/json&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            rapidjson::Document doc;</span><br><span class="line">            doc.Parse(response);</span><br><span class="line">            assert(doc.IsObject());</span><br><span class="line">            <span class="keyword">if</span> (doc.HasMember(<span class="string">&quot;access_token&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">/*如果返回内容包含 access_token，则提取对应的字段*/</span></span><br><span class="line">                <span class="keyword">const</span> <span class="keyword">char</span>* token = doc[<span class="string">&quot;access_token&quot;</span>].GetString();</span><br><span class="line">                <span class="keyword">size_t</span> token_len = <span class="built_in">strlen</span>(token);</span><br><span class="line">                *access_token = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(token_len + <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span> (*access_token == <span class="literal">NULL</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">-1</span>;<span class="comment">/*out of memory*/</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">memset</span>(*access_token, <span class="number">0</span>, token_len + <span class="number">1</span>);</span><br><span class="line">                <span class="built_in">memcpy</span>(*access_token, token, token_len);</span><br><span class="line">                get_access_token = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!get_access_token)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/*如果返回的 response 不是 json ，就直接将 response 内容传递回去*/</span></span><br><span class="line">            <span class="keyword">size_t</span> token_len = <span class="built_in">strlen</span>(response);</span><br><span class="line">            *access_token = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(token_len + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (*access_token == <span class="literal">NULL</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">-1</span>;<span class="comment">/*out of memory*/</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">memset</span>(*access_token, <span class="number">0</span>, token_len + <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">memcpy</span>(*access_token, response, token_len);</span><br><span class="line">            result = <span class="number">4</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (url)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">free</span>(url);</span><br><span class="line">        url = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (response)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">free</span>(response);</span><br><span class="line">        response = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (content_type)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">free</span>(content_type);</span><br><span class="line">        content_type = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="获取小程序二维码"><a href="#获取小程序二维码" class="headerlink" title="获取小程序二维码"></a>获取小程序二维码</h2><p>和获取 access_token 类似，稍微封装一下就可以改写成为根据 access_token 获取小程序码的接口了</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> USE_SPECCIFIC_CACERT_PEM</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_wxacode_unlimited</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* certpem, <span class="keyword">const</span> <span class="keyword">char</span>* access_token, <span class="keyword">unsigned</span> <span class="keyword">char</span>** qrcode, <span class="keyword">size_t</span>* size, <span class="keyword">bool</span> verbose)</span></span></span><br><span class="line"><span class="function"><span class="meta">#<span class="meta-keyword">else</span></span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_wxacode_unlimited</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* access_token,<span class="keyword">const</span> <span class="keyword">char</span>* parameter, <span class="keyword">unsigned</span> <span class="keyword">char</span>** qrcode, <span class="keyword">size_t</span>* size, <span class="keyword">bool</span> verbose)</span></span></span><br><span class="line"><span class="function"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// USE_SPECCIFIC_CACERT_PEM</span></span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    assert(access_token);</span><br><span class="line">    assert(parameter);</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span>* wxacodedomain = <span class="string">&quot;https://api.weixin.qq.com/wxa/getwxacodeunlimit?access_token=&quot;</span>;</span><br><span class="line">    <span class="keyword">size_t</span> url_len = <span class="built_in">strlen</span>(wxacodedomain) + <span class="built_in">strlen</span>(access_token);</span><br><span class="line">    <span class="keyword">char</span>* url = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(url_len + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (url == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;<span class="comment">/*out of mempry*/</span></span><br><span class="line">    &#125;</span><br><span class="line">    sprintf_s(url, url_len + <span class="number">1</span>, <span class="string">&quot;%s%s&quot;</span>, wxacodedomain, access_token);</span><br><span class="line">    <span class="keyword">if</span> (verbose)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;access to url:%s\r\n&quot;</span>, url);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span>* response = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">char</span>* content_type = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">size_t</span> len = <span class="number">0</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> USE_SPECCIFIC_CACERT_PEM</span></span><br><span class="line">    <span class="keyword">int</span> result = handle_https_callback(certpem, url, <span class="literal">true</span>, parameter, <span class="built_in">strlen</span>(parameter), (<span class="keyword">void</span>**)&amp;response, &amp;len, &amp;content_type, verbose);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">    <span class="keyword">int</span> result = handle_https_callback(url, <span class="literal">true</span>, parameter, <span class="built_in">strlen</span>(parameter), (<span class="keyword">void</span> **)&amp;response, &amp;len, &amp;content_type, verbose);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// USE_SPECCIFIC_CACERT_PEM</span></span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (result == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!(<span class="built_in">strstr</span>(content_type, <span class="string">&quot;image/jpeg&quot;</span>)))</span><br><span class="line">        &#123;</span><br><span class="line">            result = <span class="number">4</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        *qrcode = (<span class="keyword">unsigned</span> <span class="keyword">char</span>*)<span class="built_in">malloc</span>(len+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (*qrcode == <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;<span class="comment">/*out of memory*/</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">memset</span>(*qrcode, <span class="number">0</span>, len + <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">memcpy</span>(*qrcode, response, len);</span><br><span class="line">        *size = len;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="使用示范"><a href="#使用示范" class="headerlink" title="使用示范"></a>使用示范</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//main.cc</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span>* access_token = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span>* appid = <span class="string">&quot;your_appid&quot;</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span>* appsecret = <span class="string">&quot;your_appsecret&quot;</span>;</span><br><span class="line">    <span class="keyword">int</span> result = get_wxacode_access_token(appid, appsecret, &amp;access_token, <span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">if</span> (result &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;in main func:%s\r\n&quot;</span>, access_token);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(result == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;access_token:%s\r\n&quot;</span>, access_token);</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span>* qrcode = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">size_t</span> size = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">char</span>* parameter = <span class="string">&quot;&#123;\&quot;scene\&quot;:\&quot;testtest\&quot;&#125;&quot;</span>;</span><br><span class="line">        result = get_wxacode_unlimited(access_token, parameter, &amp;qrcode, &amp;size, <span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">if</span> (result &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;in main func qrcode:%s\r\n&quot;</span>, qrcode);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (result == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            FILE* file;</span><br><span class="line">            <span class="keyword">if</span> (fopen_s(&amp;file, <span class="string">&quot;wxacode.jpg&quot;</span>, <span class="string">&quot;wb+&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                fwrite(qrcode, <span class="number">1</span>, size, file);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;success write wxacode.jpg\r\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;failed to open wxacode.jpg\r\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (qrcode)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">free</span>(qrcode);</span><br><span class="line">            qrcode = <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (access_token)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">free</span>(access_token);</span><br><span class="line">        access_token = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><p>在 ubuntu 上，由于使用了 libcurl 访问https的链接，可以尝试安装这个包 <code>libcurl4-openssl-dev</code><br>在对返回值的处理中，使用了 rapidjson 作为处理json的库，可以尝试安装这个包<code>rapidjson-dev</code><br>编译时需要使用 <code>-lssl -lcurl</code>作为链接库</p>
<p>Windows 上，尝试使用 vcpkg 来安装 libcurl</p>
]]></content>
  </entry>
  <entry>
    <title>微信小程序码隐私政策</title>
    <url>/2021/06/25/WxaCodePrivacyPolicy/</url>
    <content><![CDATA[<h2 id="隐私政策"><a href="#隐私政策" class="headerlink" title="隐私政策"></a>隐私政策</h2><p>本软件值微信小程序码软件（以下称本软件），本软件并非微信官方应用，而是根据官方文档开发的第三方应用。<br>本软件重视用户隐私，本软件尊重并保护所有使用服务用户的个人隐私权。为了给您提供更准确、更有个性化的服务，本软件会按照本隐私权政策的规定使用和披露您的个人信息。<br>除本隐私权政策另有规定外，在未征得您事先许可的情况下，本软件不会将这些信息对外披露或向第三方提供。本软件会不时更新本隐私权政策。您在同意本软件服务使用协议之时，即视为您已经同意本隐私权政策全部内容。本隐私权政策属于本软件服务使用协议不可分割的一部分。</p>
<h2 id="信息提供"><a href="#信息提供" class="headerlink" title="信息提供"></a>信息提供</h2><p>使用本软件时，您需要提供您想要获取的小程序码对应的 appid 和 appsecret ，本软件不会存储您的小程序的 appid 和 appsecret，除非您主动在设置当中开启对应的选项。本软件仅在获取小程序码时使用您的 appid 和 appsecret，使用过程中不会访问除微信官方网站之外的任何网站。</p>
<h2 id="信息存储和交换"><a href="#信息存储和交换" class="headerlink" title="信息存储和交换"></a>信息存储和交换</h2><p>使用本软件过程中，软件不会主动记录您的任何操作，除非您主动在设置中打开对应的选项。若您主动打开记录参数的选项，本软件仅仅会将您设置的参数保留在应用本地，不会上传至任何网站或个人。</p>
]]></content>
  </entry>
  <entry>
    <title>UWP简单教程</title>
    <url>/2021/06/29/UWP-beginner/</url>
    <content><![CDATA[<p>本文以 <a href="https://github.com/BDZNH/WxaCode-UWP">WxaCode</a>为例，讲一下 UWP 初学者用到的一些东西。</p>
<img src="/2021/06/29/UWP-beginner/wide.jpg" class="" title="homepage">

<a id="more"></a>
<h1 id="UWP-的坐标系"><a href="#UWP-的坐标系" class="headerlink" title="UWP 的坐标系"></a>UWP 的坐标系</h1><p>以 16:9 的屏幕为例，左上角是 (0,0) ，右下角是 (1920,1080)，我使用的屏幕是 4K 屏，应用读出来的也还是 1920x1080 。这也省事一些，不用过度关心不同分辨率的情况。</p>
<h1 id="动态响应布局"><a href="#动态响应布局" class="headerlink" title="动态响应布局"></a>动态响应布局</h1><p>简单来说，动态响应布局可以根据当前屏幕的宽度（或高度），来选择不同的布局，对于PC来说，由于纵向可以用滚轮滚动，所以多数情况下，我们还是以宽度作为布局变化的点。</p>
<p>微信小程序码这个应用中，除去 UWP 自带的控件 <code>NavigationView</code> 之外（NavigationView 控件自带动态响应效果），手动实现了动态响应布局的是 HomePage ，下面是 HomePage 的 xml 实现</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Page</span></span></span><br><span class="line"><span class="tag">    <span class="attr">x:Class</span>=<span class="string">&quot;WxaCode.HomePage&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:x</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:local</span>=<span class="string">&quot;using:WxaCode&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:d</span>=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:mc</span>=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">mc:Ignorable</span>=<span class="string">&quot;d&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Background</span>=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Grid</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">VisualStateManager.VisualStateGroups</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">VisualStateGroup</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">VisualState</span> <span class="attr">x:Name</span>=<span class="string">&quot;WideLayout&quot;</span> &gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">VisualState.StateTriggers</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--VisualState to be triggered when window width is &gt;=720 effective pixels.--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">AdaptiveTrigger</span> <span class="attr">MinWindowWidth</span>=<span class="string">&quot;720&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">VisualState.StateTriggers</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">VisualState.Setters</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Target</span>=<span class="string">&quot;wxacodeimage.(Grid.Row)&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Target</span>=<span class="string">&quot;wxacodeimage.(Grid.Column)&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Target</span>=<span class="string">&quot;wxacodeimage.MaxHeight&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;900&quot;</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Target</span>=<span class="string">&quot;wxacodeimage.MaxWidth&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;900&quot;</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Target</span>=<span class="string">&quot;Container.HorizontalAlignment&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;Stretch&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Setter</span> <span class="attr">Target</span>=<span class="string">&quot;Container.MinHeight&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;600&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">VisualState.Setters</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">VisualState</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">VisualStateGroup</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">VisualStateManager.VisualStateGroups</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Grid</span> <span class="attr">x:Name</span>=<span class="string">&quot;Container&quot;</span> <span class="attr">MinHeight</span>=<span class="string">&quot;1000&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> &gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Grid.ColumnDefinitions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Grid.ColumnDefinitions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;Auto&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">Grid</span> <span class="attr">x:Name</span>=<span class="string">&quot;WxaCodeParamsGrid&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;350&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;10,10,10,10&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;0&quot;</span> &gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Grid.ColumnDefinitions</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">&quot;2*&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">&quot;2*&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">&quot;3*&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">ColumnDefinition</span> <span class="attr">Width</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">Grid.ColumnDefinitions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">RowDefinition</span> <span class="attr">Height</span>=<span class="string">&quot;*&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBox</span> <span class="attr">x:Name</span>=<span class="string">&quot;AppidTextBlock&quot;</span> <span class="attr">Header</span>=<span class="string">&quot;Appid&quot;</span> <span class="attr">PlaceholderText</span>=<span class="string">&quot;必须填写，应用不缓存&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5,5,5,5&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Grid.ColumnSpan</span>=<span class="string">&quot;4&quot;</span> <span class="attr">TextChanged</span>=<span class="string">&quot;AppidTextBlock_TextChanged&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBox</span> <span class="attr">x:Name</span>=<span class="string">&quot;AppsecretTextBlock&quot;</span> <span class="attr">Header</span>=<span class="string">&quot;Appsecret&quot;</span> <span class="attr">PlaceholderText</span>=<span class="string">&quot;必须填写，应用不缓存&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5,5,5,5&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Grid.ColumnSpan</span>=<span class="string">&quot;4&quot;</span> <span class="attr">TextChanged</span>=<span class="string">&quot;AppsecretTextBlock_TextChanged&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBox</span> <span class="attr">x:Name</span>=<span class="string">&quot;WxacodeSceneTextBlock&quot;</span> <span class="attr">Header</span>=<span class="string">&quot;请输入 scene:&quot;</span> <span class="attr">PlaceholderText</span>=<span class="string">&quot;不超过32个字符(必须填写)&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5,5,5,5&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;2&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Grid.ColumnSpan</span>=<span class="string">&quot;4&quot;</span> <span class="attr">TextChanged</span>=<span class="string">&quot;WxacodeSceneTextBlock_TextChanged&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBox</span> <span class="attr">x:Name</span>=<span class="string">&quot;WxacodePageTextBlock&quot;</span> <span class="attr">Header</span>=<span class="string">&quot;请输入 page:&quot;</span> <span class="attr">PlaceholderText</span>=<span class="string">&quot;已发布的page(可不填，默认为 pages/index/index )&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5,5,5,5&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;3&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Grid.ColumnSpan</span>=<span class="string">&quot;4&quot;</span> <span class="attr">TextChanged</span>=<span class="string">&quot;WxacodePageTextBlock_TextChanged&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Slider</span> <span class="attr">x:Name</span>=<span class="string">&quot;WxacodeWidthSlider&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5,5,0,5&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">AutomationProperties.Name</span>=<span class="string">&quot;simple slider&quot;</span> <span class="attr">Minimum</span>=<span class="string">&quot;280&quot;</span> <span class="attr">Maximum</span>=<span class="string">&quot;1280&quot;</span> <span class="attr">StepFrequency</span>=<span class="string">&quot;1&quot;</span> <span class="attr">SmallChange</span>=<span class="string">&quot;1&quot;</span> <span class="attr">LargeChange</span>=<span class="string">&quot;100&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;430&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;4&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Grid.ColumnSpan</span>=<span class="string">&quot;2&quot;</span> <span class="attr">ValueChanged</span>=<span class="string">&quot;WxacodeWidthSlider_ValueChanged&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;小程序码宽度&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5,5,0,5&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;4&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;2&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;&#123;x:Bind WxacodeWidthSlider.Value.ToString(), Mode=OneWay&#125;&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5,5,5,5&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Right&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;4&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;3&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ToggleSwitch</span> <span class="attr">x:Name</span>=<span class="string">&quot;WxacodeAutoColorSwitch&quot;</span> <span class="attr">Header</span>=<span class="string">&quot;自动配置线条颜色&quot;</span> <span class="attr">AutomationProperties.Name</span>=<span class="string">&quot;simple ToggleSwitch&quot;</span> <span class="attr">Toggled</span>=<span class="string">&quot;ToggleAutoColorSwitch&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;5&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Grid.ColumnSpan</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ToggleSwitch</span> <span class="attr">x:Name</span>=<span class="string">&quot;WxacodeIsHyalineSwitch&quot;</span> <span class="attr">Header</span>=<span class="string">&quot;透明底色&quot;</span> <span class="attr">AutomationProperties.Name</span>=<span class="string">&quot;simple ToggleSwitch&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5,0,0,0&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;5&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;2&quot;</span> <span class="attr">Grid.ColumnSpan</span>=<span class="string">&quot;2&quot;</span> <span class="attr">Toggled</span>=<span class="string">&quot;WxacodeIsHyalineSwitch_Toggled&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Slider</span> <span class="attr">IsEnabled</span>=<span class="string">&quot;&#123;x:Bind WxacodeAutoColorSwitch.IsOn.Equals(x:False), Mode=OneWay&#125;&quot;</span> <span class="attr">x:Name</span>=<span class="string">&quot;WxacodeLineColorRedSlider&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;Red&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5,5,0,5&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;6&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Grid.ColumnSpan</span>=<span class="string">&quot;2&quot;</span> <span class="attr">Minimum</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Maximum</span>=<span class="string">&quot;255&quot;</span> <span class="attr">StepFrequency</span>=<span class="string">&quot;1&quot;</span> <span class="attr">SmallChange</span>=<span class="string">&quot;1&quot;</span> <span class="attr">LargeChange</span>=<span class="string">&quot;10&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;0&quot;</span> <span class="attr">ValueChanged</span>=<span class="string">&quot;WxacodeLineColorRedSlider_ValueChanged&quot;</span>  /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;线条颜色(red)&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5,5,0,5&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;6&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Rectangle</span> <span class="attr">x:Name</span>=<span class="string">&quot;ColorPreview&quot;</span> <span class="attr">Stroke</span>=<span class="string">&quot;Black&quot;</span> <span class="attr">Fill</span>=<span class="string">&quot;White&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;6&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;3&quot;</span> <span class="attr">Grid.RowSpan</span>=<span class="string">&quot;3&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Stretch&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Slider</span> <span class="attr">IsEnabled</span>=<span class="string">&quot;&#123;x:Bind WxacodeAutoColorSwitch.IsOn.Equals(x:False), Mode=OneWay&#125;&quot;</span> <span class="attr">x:Name</span>=<span class="string">&quot;WxacodeLineColorGreenSlier&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;Green&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;7&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Grid.ColumnSpan</span>=<span class="string">&quot;2&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5,5,0,5&quot;</span> <span class="attr">Minimum</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Maximum</span>=<span class="string">&quot;255&quot;</span> <span class="attr">StepFrequency</span>=<span class="string">&quot;1&quot;</span> <span class="attr">SmallChange</span>=<span class="string">&quot;1&quot;</span> <span class="attr">LargeChange</span>=<span class="string">&quot;10&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;0&quot;</span> <span class="attr">ValueChanged</span>=<span class="string">&quot;WxacodeLineColorGreenSlier_ValueChanged&quot;</span>  /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;线条颜色(green)&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;7&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;2&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5,5,0,5&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Slider</span> <span class="attr">IsEnabled</span>=<span class="string">&quot;&#123;x:Bind WxacodeAutoColorSwitch.IsOn.Equals(x:False), Mode=OneWay&#125;&quot;</span> <span class="attr">x:Name</span>=<span class="string">&quot;WxacodeLineColorBlueSlider&quot;</span> <span class="attr">Foreground</span>=<span class="string">&quot;Blue&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;8&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Grid.ColumnSpan</span>=<span class="string">&quot;2&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5,5,0,5&quot;</span> <span class="attr">Minimum</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Maximum</span>=<span class="string">&quot;255&quot;</span> <span class="attr">StepFrequency</span>=<span class="string">&quot;1&quot;</span> <span class="attr">SmallChange</span>=<span class="string">&quot;1&quot;</span> <span class="attr">LargeChange</span>=<span class="string">&quot;10&quot;</span> <span class="attr">Value</span>=<span class="string">&quot;0&quot;</span> <span class="attr">ValueChanged</span>=<span class="string">&quot;WxacodeLineColorBlueSlider_ValueChanged&quot;</span>  /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Text</span>=<span class="string">&quot;线条颜色(blue)&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;8&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;2&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Margin</span>=<span class="string">&quot;5,5,0,5&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource AccentButtonStyle&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;获取小程序码&quot;</span> <span class="attr">x:Name</span>=<span class="string">&quot;GetWxaCodeButton&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;9&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;0&quot;</span> <span class="attr">Grid.ColumnSpan</span>=<span class="string">&quot;2&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Click</span>=<span class="string">&quot;GetWxaCodeUnlimited&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">Style</span>=<span class="string">&quot;&#123;StaticResource AccentButtonStyle&#125;&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;保存小程序码&quot;</span> <span class="attr">x:Name</span>=<span class="string">&quot;SaveWxaCodeButton&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;9&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;2&quot;</span> <span class="attr">Grid.ColumnSpan</span>=<span class="string">&quot;2&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">Click</span>=<span class="string">&quot;SaveWxacodeImage&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Image</span> <span class="attr">x:Name</span>=<span class="string">&quot;wxacodeimage&quot;</span> <span class="attr">Source</span>=<span class="string">&quot;/Assets/wxacodesample.jpg&quot;</span> <span class="attr">MaxWidth</span>=<span class="string">&quot;350&quot;</span> <span class="attr">Grid.Row</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Grid.Column</span>=<span class="string">&quot;0&quot;</span> <span class="attr">HorizontalAlignment</span>=<span class="string">&quot;Center&quot;</span> <span class="attr">VerticalAlignment</span>=<span class="string">&quot;Center&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Page</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>对比一下UWP新建时，空白页的 xml 内容</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Page</span></span></span><br><span class="line"><span class="tag">    <span class="attr">x:Class</span>=<span class="string">&quot;NavigationViewTest.BlankPage1&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:x</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:local</span>=<span class="string">&quot;using:NavigationViewTest&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:d</span>=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:mc</span>=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">mc:Ignorable</span>=<span class="string">&quot;d&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Background</span>=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Grid</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Page</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>动态响应布局的关键内容 <code>VisualStateManager</code> 即放在 <code>Grid</code> 下。然后我们再在 Grid 新建一个 Grid 布局，用这个子布局来承载页面的内容。相当于这个 Page 下有一个根 Grid ，将这个根 Grid 的 (0,0) 单元格，作为一个新的子 Grid 的内容，这里面再添加这个页面的承载元素，这样 VisualStateManager 就能生效了。</p>
<p>VisualStateManager 的语法意思是，在页面大于或小于某个值（坐标系 1920x1080）时，改变控件的一些属性，本例中，改变了承载小程序码的 Image 控件所在的行和列，并且设置相应的宽度实现。下面两图是实现的动态响应布局的效果。</p>
<img src="/2021/06/29/UWP-beginner/wide.jpg" class="" title="当界面较宽时">

<img src="/2021/06/29/UWP-beginner/narrow.jpg" class="" title="当界面较窄时">

<h1 id="导航栏"><a href="#导航栏" class="headerlink" title="导航栏"></a>导航栏</h1><p>导航栏是 UWP 自带的一个控件，Windows 10 的设置下的每一个子页面，都是导航栏的例子，这个控件是 <code>NavigationView</code> ，使用时在 Nuget 包管理器中，为当前解决方案添加 <code>Microsoft.UI.Xaml</code>。在页面的 Page 节点的配置中，添加<code>xmlns:muxc=&quot;using:Microsoft.UI.Xaml.Controls&quot;</code>字段，然后在这个页面下的 Grid 内添加一个 NavigationView 控件，以微信小程序码为例，内容如下</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Page</span></span></span><br><span class="line"><span class="tag">    <span class="attr">x:Class</span>=<span class="string">&quot;WxaCode.MainPage&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:x</span>=<span class="string">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:local</span>=<span class="string">&quot;using:WxaCode&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:d</span>=<span class="string">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:mc</span>=<span class="string">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:muxc</span>=<span class="string">&quot;using:Microsoft.UI.Xaml.Controls&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">mc:Ignorable</span>=<span class="string">&quot;d&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Background</span>=<span class="string">&quot;&#123;ThemeResource ApplicationPageBackgroundThemeBrush&#125;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Grid</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">muxc:NavigationView</span> <span class="attr">x:Name</span>=<span class="string">&quot;NaviView&quot;</span> <span class="attr">ItemInvoked</span>=<span class="string">&quot;NaviView_ItemInvoked&quot;</span> <span class="attr">IsBackButtonVisible</span>=<span class="string">&quot;Collapsed&quot;</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">muxc:NavigationView.MenuItems</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">muxc:NavigationViewItem</span> <span class="attr">Icon</span>=<span class="string">&quot;Home&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;操作&quot;</span> <span class="attr">Tag</span>=<span class="string">&quot;HomePage&quot;</span> <span class="attr">x:Name</span>=<span class="string">&quot;homepage&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">muxc:NavigationViewItem</span> <span class="attr">Icon</span>=<span class="string">&quot;Help&quot;</span> <span class="attr">Content</span>=<span class="string">&quot;关于&quot;</span> <span class="attr">Tag</span>=<span class="string">&quot;AboutPage&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">muxc:NavigationView.MenuItems</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ScrollViewer</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Frame</span> <span class="attr">x:Name</span>=<span class="string">&quot;ContentFrame&quot;</span> <span class="attr">Padding</span>=<span class="string">&quot;12,50,12,24&quot;</span> <span class="attr">IsTabStop</span>=<span class="string">&quot;True&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ScrollViewer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">muxc:NavigationView</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Page</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>注意其中的 <code>ScrollViewer</code> 和其内的 <code>Frame</code> ，这里将会承载每一个页面不同页面的具体内容，本例中，实际实现是把 homepage 和 aboutpage 作为一个子布局，放到 <code>Frame</code> 上。这样导航栏可以一直存在，通过点击导航栏，替换里面的 <code>Frame</code> 对应的页面，即可达到通过导航栏来切换页面的效果，具体的代码实现可以查看应用的源码。</p>
<h1 id="本地设置"><a href="#本地设置" class="headerlink" title="本地设置"></a>本地设置</h1><p>本地设置通常是存放一些设置项，本例中通过封装UWP自带的 <code>Windows.Storage.ApplicationData.Current.LocalSettings</code> 来实现，比如是否保存 appid 和 appsecret ,如下图所示</p>
<img src="/2021/06/29/UWP-beginner/settings.jpg" class="" title="设置">

<h1 id="在应用退出时保存数据"><a href="#在应用退出时保存数据" class="headerlink" title="在应用退出时保存数据"></a>在应用退出时保存数据</h1><p>可能百度大学会告诉你，UWP在应用关闭时，需要申请一个受限权限”confirmAppClose”，但是由于是一个受限制的权限，有可能会因为这个权限，应用商店不允许发布（我没有尝试，我换了另外一种做法），如果你有安卓应用开发的经验，就会知道，安卓应用关闭时，Activity会收到 onPause,onStop,onDestroy三个事件通知，这三个地方足够你做很多事情，UWP有类似的地方，每一个UWP应用都有一个 App.xaml.cs，其内的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">private void OnSuspending(object sender, SuspendingEventArgs e)</span><br><span class="line">&#123;</span><br><span class="line">    var deferral &#x3D; e.SuspendingOperation.GetDeferral();</span><br><span class="line">    &#x2F;&#x2F;TODO: 保存应用程序状态并停止任何后台活动</span><br><span class="line">    deferral.Complete();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>已经提示了开发者，UWP应用暂停或者关闭时，都会收到这个 OnSuspending 事件，虽然时间很短，但是足够保存一些设置项了。如果你的应用有大量数据要保存，建议应用运行时就定时保存，或者申请受限权限。</p>
]]></content>
  </entry>
  <entry>
    <title>在 Ubuntu 内如何更改 Chrome 的语言</title>
    <url>/2021/09/22/how-to-change-chrome-language-in-ubuntu/</url>
    <content><![CDATA[<p>在 Ubuntu(20.04) 内更改 Chrome 的语言时，并没有像是 Windows 的<code>以这种语言显示 Google Chrome</code>的选项。最多也只能修改提示翻译的优先语言。没有严格意义上的“更改显示语言”的选项。<br>在 Ubuntu 上，Chrome的显示语言可以根据系统语言变化，一种办法是将系统语言设置成你想要显示的语言，但是对于中文用户来说，更多的场景可能是系统语言是英文，应用语言是中文，比如这里的Chrome。如果你是我所说的这种情况，那么本文的内容可能对你有帮助。</p>
<img src="/2021/09/22/how-to-change-chrome-language-in-ubuntu/1.png" class="">

<a id="more"></a>

<p>在你的终端尝试以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">LANGUAGE=zh_cn google-chrome</span><br></pre></td></tr></table></figure>

<p>此时如果启动 Chrome 能显示中文的话，我们的需求已经满足一大半了。如果使用命令行即可满足需求的话，就截至这里就可以了。</p>
<p>Ubuntu 的任务栏可以将常用的 APP 钉在这里(Ubuntu 称为 favorite)，那么如何更改从这里启动的 Chrome的语言呢？<br>通过搜索引擎可以知道，这个 favorite 对应的文件在 <code>/usr/share/applications</code> ，我们找到 Chrome 对应的文件 <code>/usr/share/applications/google-chrome.desktop</code>，查看其内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Version=1.0</span><br><span class="line">Name=Google Chrome</span><br><span class="line"><span class="comment"># Only KDE 4 seems to use GenericName, so we reuse the KDE strings.</span></span><br><span class="line"><span class="comment"># From Ubuntu&#x27;s language-pack-kde-XX-base packages, version 9.04-20090413.</span></span><br><span class="line">GenericName=Web Browser</span><br><span class="line">......</span><br><span class="line">Exec=/usr/bin/google-chrome-stable %U</span><br><span class="line">StartupNotify=<span class="literal">true</span></span><br><span class="line">Terminal=<span class="literal">false</span></span><br><span class="line">Icon=google-chrome</span><br><span class="line">Type=Application</span><br><span class="line">Categories=Network;WebBrowser;</span><br><span class="line">......</span><br></pre></td></tr></table></figure>
<p>如果你注意到了 <code>Exec=/usr/bin/google-chrome-stable</code> 字段，那么你肯定能猜到，我们可以为这个可执行程序添加命令行参数<code>LANGUAGE=zh_cn</code>来让Chrome启动时以中文启动。遗憾的是，这里不行。直接加在这里不仅无法使用，而且还会导致 GNOME 桌面找不到 Chrome 了。<br>下面是我的解决办法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">touch chrome_cn.sh</span><br><span class="line">echo &quot;#!&#x2F;bin&#x2F;bash&quot; &gt; chrome_cn.sh</span><br><span class="line">echo &quot;LANGUAGE&#x3D;zh_cn &#x2F;usr&#x2F;bin&#x2F;google-chrome-stable $@&quot; &gt;&gt; chrome_cn.sh</span><br><span class="line">sudo cp -f chrome_cn.sh &#x2F;usr&#x2F;bin&#x2F;chrome_cn.sh</span><br></pre></td></tr></table></figure>
<p>然后将 <code>/usr/share/applications/google-chrome.desktop</code> 里的所有 <code>/usr/bin/google-chrome-stable</code> 换成 <code>/usr/bin/chrome_cn.sh</code> 。让我们点击图标的时候，实际执行的是一个 sh 脚本，然后把 <code>LANGUAGE=zh_cn</code> 写在脚本里，让脚本去启动 Chrome ，这样就可以让桌面上任务栏启动的 Chrome 变成中文了。</p>
<p>最好不要直接更改 <code>LANGUAGE</code> 这个环境变量的值，这个值与系统语言相关。</p>
]]></content>
  </entry>
  <entry>
    <title>如何打开安卓的 screencap 命令生成的 raw 图片</title>
    <url>/2023/05/23/open-android-screencap-raw-img/</url>
    <content><![CDATA[<p>以 Android 9.0 为例，screencap 的实现可以查看 <a href="http://androidxref.com/9.0.0_r3/xref/frameworks/base/cmds/screencap/screencap.cpp">http://androidxref.com/9.0.0_r3/xref/frameworks/base/cmds/screencap/screencap.cpp</a> 。<br>screencap 的命令格式是<br><code>screencap &lt;imgpath&gt;</code> 或者 <code>screencap -p &lt;imgpath&gt;</code>。<br>如果第一种命令的 imgpath 以 png 为结尾 或者加了 -p 参数的话，screencap 会将屏幕截图保存为 png 格式。否则screencap会将屏幕截图保存为一个裸 YUV 数据的图像，这个图像会保存所有的像素点信息，图像更为清晰。查看对应的代码实现即可知道如何打开这种 YUV 数据的图像。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="type">uint32_t</span> c = <span class="built_in">dataSpaceToInt</span>(d);</span><br><span class="line">    <span class="built_in">write</span>(fd, &amp;w, <span class="number">4</span>);</span><br><span class="line">    <span class="built_in">write</span>(fd, &amp;h, <span class="number">4</span>);</span><br><span class="line">    <span class="built_in">write</span>(fd, &amp;f, <span class="number">4</span>);</span><br><span class="line">    <span class="built_in">write</span>(fd, &amp;c, <span class="number">4</span>);</span><br><span class="line">    <span class="type">size_t</span> Bpp = <span class="built_in">bytesPerPixel</span>(f);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> y=<span class="number">0</span> ; y&lt;h ; y++) &#123;</span><br><span class="line">        <span class="built_in">write</span>(fd, base, w*Bpp);</span><br><span class="line">        base = (<span class="type">void</span> *)((<span class="type">char</span> *)base + s*Bpp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>从上面的实现可以看到，文件头是 16 字节，分别是图像宽，图像高，像素格式，reserved。然后是一个 RGBA 格式保存的图像数据（它为什么不保存为bitmap呢!）。<br>将文件名后缀改为 .raw 使用 Photoshop 即可打开文件查看。可以参考下图填写参数</p>
<img src="/2023/05/23/open-android-screencap-raw-img/pssample.png" class="">

<p>如果不知道图像宽度和高度，可以将图像当作二进制打开。看前 8 个字节即可。<br>本文示例中，前 16 字节为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">38 04 00 00 70 08 00 00 01 00 00 00 01 00 00 00</span><br></pre></td></tr></table></figure>
<p>小端序存储，转换成整数为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0x0438 = 1080</span><br><span class="line">0x0870 = 2160</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
</search>
